{
	"id": "f3cf82825bc86012c6083e4f8b8daf33",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/StakingAirdrop.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.27;\n\n// Import OpenZeppelin contracts for safe ERC20 operations and security\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n/**\n * @title StakingAirdrop\n * @dev This contract implements a staking-based airdrop system. Users can stake ERC20 tokens, \n * earn rewards based on the staking duration, and get premium access if they stake above a threshold.\n */\ncontract StakingAirdrop is ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    /// @notice ERC20 token used for staking\n    IERC20 public stakingToken;\n\n    /// @notice ERC20 token used for rewards\n    IERC20 public rewardToken;\n\n    /// @notice Total amount of rewards available in the pool\n    uint256 public totalReward;\n\n    /// @notice Available rewards remaining in the pool\n    uint256 public availableReward;\n\n    /// @notice Minimum amount of tokens required for premium access\n    uint256 public constant PREMIUM_THRESHOLD = 1000 * 1e18; // Adjust decimals if necessary\n\n    /// @notice Struct to store information about individual stakers\n    struct Staker {\n        uint256 amountStaked;\n        uint256 stakingPeriod;\n        uint256 startTime;\n        bool hasPremiumAccess;\n    }\n\n    /// @notice Mapping from user address to staker information\n    mapping(address => Staker) public stakers;\n\n    /// @notice Event emitted when a user stakes tokens\n    /// @param user The address of the user staking tokens\n    /// @param amount The amount of tokens staked\n    /// @param stakingPeriod The duration for which tokens are staked\n    event Stake(address indexed user, uint256 amount, uint256 stakingPeriod);\n\n    /// @notice Event emitted when a user unstakes tokens and claims rewards\n    /// @param user The address of the user unstaking tokens\n    /// @param amount The amount of tokens unstaked\n    /// @param reward The reward tokens claimed by the user\n    event Unstake(address indexed user, uint256 amount, uint256 reward);\n\n    /**\n     * @dev Constructor to initialize staking and reward tokens\n     * @param _stakingToken The ERC20 token used for staking\n     * @param _rewardToken The ERC20 token used for rewards\n     */\n    constructor(IERC20 _stakingToken, IERC20 _rewardToken) {\n        stakingToken = _stakingToken;\n        rewardToken = _rewardToken;\n    }\n\n    /**\n     * @notice Fund the reward pool with reward tokens\n     * @param _amount The amount of reward tokens to add to the pool\n     */\n    function fundRewardPool(uint256 _amount) external {\n        totalReward += _amount;\n        availableReward += _amount;\n\n        // Transfer reward tokens from the funder to the contract\n        rewardToken.safeTransferFrom(msg.sender, address(this), _amount);\n    }\n\n    /**\n     * @notice Stake tokens into the staking pool\n     * @param _amount The amount of tokens to stake\n     * @param _stakingPeriod The duration (in seconds) for which tokens are staked\n     */\n    function stakeTokens(uint256 _amount, uint256 _stakingPeriod) external nonReentrant {\n        Staker storage staker = stakers[msg.sender];\n\n        // Ensure the user isn't already staking\n        require(staker.amountStaked == 0, \"Already staked\");\n\n        // Update staker information\n        staker.amountStaked = _amount;\n        staker.stakingPeriod = _stakingPeriod;\n        staker.startTime = block.timestamp;\n        staker.hasPremiumAccess = _amount >= PREMIUM_THRESHOLD;\n\n        // Transfer staked tokens from user to contract\n        stakingToken.safeTransferFrom(msg.sender, address(this), _amount);\n\n        // Emit an event to log the staking action\n        emit Stake(msg.sender, _amount, _stakingPeriod);\n    }\n\n    /**\n     * @notice Unstake tokens and claim rewards after the staking period ends\n     */\n    function unstakeAndClaim() external nonReentrant {\n        Staker storage staker = stakers[msg.sender];\n\n        // Ensure the user has tokens staked\n        require(staker.amountStaked > 0, \"No tokens staked\");\n\n        // Ensure the staking period is complete\n        require(\n            block.timestamp >= staker.startTime + staker.stakingPeriod,\n            \"Staking period not complete\"\n        );\n\n        // Calculate reward based on staking period and amount\n        uint256 reward = calculateReward(\n            staker.amountStaked,\n            block.timestamp - staker.startTime\n        );\n\n        // Ensure the pool has enough rewards left\n        require(availableReward >= reward, \"Insufficient reward pool\");\n\n        // Transfer staked tokens back to user\n        stakingToken.safeTransfer(msg.sender, staker.amountStaked);\n\n        // Transfer reward tokens to user\n        rewardToken.safeTransfer(msg.sender, reward);\n\n        // Reduce available reward in the pool\n        availableReward -= reward;\n\n        // Emit an event to log the unstaking action\n        emit Unstake(msg.sender, staker.amountStaked, reward);\n\n        // Reset staker information\n        staker.amountStaked = 0;\n        staker.hasPremiumAccess = false;\n    }\n\n    /**\n     * @notice Internal function to calculate rewards based on staked amount and time\n     * @param _amountStaked The amount of tokens staked\n     * @param _elapsedTime The time (in seconds) the tokens have been staked\n     * @return The reward calculated based on the staked amount and time\n     */\n    function calculateReward(uint256 _amountStaked, uint256 _elapsedTime)\n        internal\n        view\n        returns (uint256)\n    {\n        // Linear reward calculation as an example\n        // Rewards are proportional to the amount staked and the staking duration\n        uint256 reward = (_amountStaked * _elapsedTime) / 30 days;\n\n        // Ensure reward doesn't exceed available pool\n        if (reward > availableReward) {\n            reward = availableReward;\n        }\n\n        return reward;\n    }\n\n    /**\n     * @notice Check if a user has premium access based on their staked amount\n     * @param _user The address of the user\n     * @return True if the user has premium access, false otherwise\n     */\n    function hasPremiumAccess(address _user) external view returns (bool) {\n        return stakers[_user].hasPremiumAccess;\n    }\n\n    /**\n     * @notice Get staker information for a specific user\n     * @param _user The address of the user\n     * @return amountStaked The amount of tokens staked by the user\n     * @return stakingPeriod The duration for which the user staked tokens\n     * @return startTime The time when the staking began\n     * @return hasPremium True if the user has premium access, false otherwise\n     */\n    function getStakerInfo(address _user)\n        external\n        view\n        returns (\n            uint256 amountStaked,\n            uint256 stakingPeriod,\n            uint256 startTime,\n            bool hasPremium\n        )\n    {\n        Staker memory staker = stakers[_user];\n        return (\n            staker.amountStaked,\n            staker.stakingPeriod,\n            staker.startTime,\n            staker.hasPremiumAccess\n        );\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212202e89665000d2f2e0b89ea3e6107edc27927db832c54466ce545ca6595e697fe164736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212202e89665000d2f2e0b89ea3e6107edc27927db832c54466ce545ca6595e697fe164736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E DUP10 PUSH7 0x5000D2F2E0B89E LOG3 0xE6 LT PUSH31 0xDC27927DB832C54466CE545CA6595E697FE164736F6C634300081B00330000 ",
							"sourceMap": "751:5018:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212202e89665000d2f2e0b89ea3e6107edc27927db832c54466ce545ca6595e697fe164736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E DUP10 PUSH7 0x5000D2F2E0B89E LOG3 0xE6 LT PUSH31 0xDC27927DB832C54466CE545CA6595E697FE164736F6C634300081B00330000 ",
							"sourceMap": "751:5018:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202e89665000d2f2e0b89ea3e6107edc27927db832c54466ce545ca6595e697fe164736f6c634300081b0033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"contracts/StakingAirdrop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220a2eaa130c2655451bf84a8c44df4cc23b25602b0a88b5a8087ef60ced0343c6d64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220a2eaa130c2655451bf84a8c44df4cc23b25602b0a88b5a8087ef60ced0343c6d64736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xEA LOG1 ADDRESS 0xC2 PUSH6 0x5451BF84A8C4 0x4D DELEGATECALL 0xCC 0x23 0xB2 JUMP MUL 0xB0 0xA8 DUP12 GAS DUP1 DUP8 0xEF PUSH1 0xCE 0xD0 CALLVALUE EXTCODECOPY PUSH14 0x64736F6C634300081B0033000000 ",
							"sourceMap": "195:6066:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220a2eaa130c2655451bf84a8c44df4cc23b25602b0a88b5a8087ef60ced0343c6d64736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xEA LOG1 ADDRESS 0xC2 PUSH6 0x5451BF84A8C4 0x4D DELEGATECALL 0xCC 0x23 0xB2 JUMP MUL 0xB0 0xA8 DUP12 GAS DUP1 DUP8 0xEF PUSH1 0xCE 0xD0 CALLVALUE EXTCODECOPY PUSH14 0x64736F6C634300081B0033000000 ",
							"sourceMap": "195:6066:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a2eaa130c2655451bf84a8c44df4cc23b25602b0a88b5a8087ef60ced0343c6d64736f6c634300081b0033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"contracts/StakingAirdrop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/StakingAirdrop.sol": {
				"StakingAirdrop": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_stakingToken",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_rewardToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stakingPeriod",
									"type": "uint256"
								}
							],
							"name": "Stake",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "Unstake",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "PREMIUM_THRESHOLD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "availableReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "fundRewardPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getStakerInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountStaked",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stakingPeriod",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "hasPremium",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "hasPremiumAccess",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_stakingPeriod",
									"type": "uint256"
								}
							],
							"name": "stakeTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountStaked",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stakingPeriod",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "hasPremiumAccess",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unstakeAndClaim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This contract implements a staking-based airdrop system. Users can stake ERC20 tokens,  earn rewards based on the staking duration, and get premium access if they stake above a threshold.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"events": {
							"Stake(address,uint256,uint256)": {
								"params": {
									"amount": "The amount of tokens staked",
									"stakingPeriod": "The duration for which tokens are staked",
									"user": "The address of the user staking tokens"
								}
							},
							"Unstake(address,uint256,uint256)": {
								"params": {
									"amount": "The amount of tokens unstaked",
									"reward": "The reward tokens claimed by the user",
									"user": "The address of the user unstaking tokens"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Constructor to initialize staking and reward tokens",
								"params": {
									"_rewardToken": "The ERC20 token used for rewards",
									"_stakingToken": "The ERC20 token used for staking"
								}
							},
							"fundRewardPool(uint256)": {
								"params": {
									"_amount": "The amount of reward tokens to add to the pool"
								}
							},
							"getStakerInfo(address)": {
								"params": {
									"_user": "The address of the user"
								},
								"returns": {
									"amountStaked": "The amount of tokens staked by the user",
									"hasPremium": "True if the user has premium access, false otherwise",
									"stakingPeriod": "The duration for which the user staked tokens",
									"startTime": "The time when the staking began"
								}
							},
							"hasPremiumAccess(address)": {
								"params": {
									"_user": "The address of the user"
								},
								"returns": {
									"_0": "True if the user has premium access, false otherwise"
								}
							},
							"stakeTokens(uint256,uint256)": {
								"params": {
									"_amount": "The amount of tokens to stake",
									"_stakingPeriod": "The duration (in seconds) for which tokens are staked"
								}
							}
						},
						"title": "StakingAirdrop",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/StakingAirdrop.sol\":492:7088  contract StakingAirdrop is ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/StakingAirdrop.sol\":2246:2382  constructor(IERC20 _stakingToken, IERC20 _rewardToken) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingAirdrop.sol\":2326:2339  _stakingToken */\n  dup2\n    /* \"contracts/StakingAirdrop.sol\":2311:2323  stakingToken */\n  0x01\n  0x00\n    /* \"contracts/StakingAirdrop.sol\":2311:2339  stakingToken = _stakingToken */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingAirdrop.sol\":2363:2375  _rewardToken */\n  dup1\n    /* \"contracts/StakingAirdrop.sol\":2349:2360  rewardToken */\n  0x02\n  0x00\n    /* \"contracts/StakingAirdrop.sol\":2349:2375  rewardToken = _rewardToken */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingAirdrop.sol\":2246:2382  constructor(IERC20 _stakingToken, IERC20 _rewardToken) {... */\n  pop\n  pop\n    /* \"contracts/StakingAirdrop.sol\":492:7088  contract StakingAirdrop is ReentrancyGuard {... */\n  jump(tag_8)\n    /* \"#utility.yul\":88:205   */\ntag_10:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_12:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_13:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_23\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_12\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:678   */\ntag_14:\n    /* \"#utility.yul\":619:626   */\n  0x00\n    /* \"#utility.yul\":648:672   */\n  tag_25\n    /* \"#utility.yul\":666:671   */\n  dup3\n    /* \"#utility.yul\":648:672   */\n  tag_13\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":637:672   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":684:834   */\ntag_15:\n    /* \"#utility.yul\":771:809   */\n  tag_27\n    /* \"#utility.yul\":803:808   */\n  dup2\n    /* \"#utility.yul\":771:809   */\n  tag_14\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":764:769   */\n  dup2\n    /* \"#utility.yul\":761:810   */\n  eq\n    /* \"#utility.yul\":751:828   */\n  tag_28\n  jumpi\n    /* \"#utility.yul\":824:825   */\n  0x00\n    /* \"#utility.yul\":821:822   */\n  0x00\n    /* \"#utility.yul\":814:826   */\n  revert\n    /* \"#utility.yul\":751:828   */\ntag_28:\n    /* \"#utility.yul\":684:834   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":840:1011   */\ntag_16:\n    /* \"#utility.yul\":911:916   */\n  0x00\n    /* \"#utility.yul\":942:948   */\n  dup2\n    /* \"#utility.yul\":936:949   */\n  mload\n    /* \"#utility.yul\":927:949   */\n  swap1\n  pop\n    /* \"#utility.yul\":958:1005   */\n  tag_30\n    /* \"#utility.yul\":999:1004   */\n  dup2\n    /* \"#utility.yul\":958:1005   */\n  tag_15\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":840:1011   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1017:1580   */\ntag_3:\n    /* \"#utility.yul\":1124:1130   */\n  0x00\n    /* \"#utility.yul\":1132:1138   */\n  0x00\n    /* \"#utility.yul\":1181:1183   */\n  0x40\n    /* \"#utility.yul\":1169:1178   */\n  dup4\n    /* \"#utility.yul\":1160:1167   */\n  dup6\n    /* \"#utility.yul\":1156:1179   */\n  sub\n    /* \"#utility.yul\":1152:1184   */\n  slt\n    /* \"#utility.yul\":1149:1268   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1187:1266   */\n  tag_33\n  tag_10\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1149:1268   */\ntag_32:\n    /* \"#utility.yul\":1307:1308   */\n  0x00\n    /* \"#utility.yul\":1332:1410   */\n  tag_34\n    /* \"#utility.yul\":1402:1409   */\n  dup6\n    /* \"#utility.yul\":1393:1399   */\n  dup3\n    /* \"#utility.yul\":1382:1391   */\n  dup7\n    /* \"#utility.yul\":1378:1400   */\n  add\n    /* \"#utility.yul\":1332:1410   */\n  tag_16\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1322:1410   */\n  swap3\n  pop\n    /* \"#utility.yul\":1278:1420   */\n  pop\n    /* \"#utility.yul\":1459:1461   */\n  0x20\n    /* \"#utility.yul\":1485:1563   */\n  tag_35\n    /* \"#utility.yul\":1555:1562   */\n  dup6\n    /* \"#utility.yul\":1546:1552   */\n  dup3\n    /* \"#utility.yul\":1535:1544   */\n  dup7\n    /* \"#utility.yul\":1531:1553   */\n  add\n    /* \"#utility.yul\":1485:1563   */\n  tag_16\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":1475:1563   */\n  swap2\n  pop\n    /* \"#utility.yul\":1430:1573   */\n  pop\n    /* \"#utility.yul\":1017:1580   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/StakingAirdrop.sol\":492:7088  contract StakingAirdrop is ReentrancyGuard {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/StakingAirdrop.sol\":492:7088  contract StakingAirdrop is ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x750142e6\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x750142e6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x9168ae72\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x9af01c2d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa67e12a8\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf985021a\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x1d583e0d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3b7b6188\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4ad84b34\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x733bdef0\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/StakingAirdrop.sol\":2528:2794  function fundRewardPool(uint256 _amount) external {... */\n    tag_3:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts/StakingAirdrop.sol\":3001:3729  function stakeTokens(uint256 _amount, uint256 _stakingPeriod) external nonReentrant {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      stop\n        /* \"contracts/StakingAirdrop.sol\":880:910  uint256 public availableReward */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingAirdrop.sol\":619:645  IERC20 public stakingToken */\n    tag_6:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingAirdrop.sol\":6643:7086  function getStakerInfo(address _user)... */\n    tag_7:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingAirdrop.sol\":791:817  uint256 public totalReward */\n    tag_8:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingAirdrop.sol\":1359:1400  mapping(address => Staker) public stakers */\n    tag_9:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_43\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingAirdrop.sol\":986:1041  uint256 public constant PREMIUM_THRESHOLD = 1000 * 1e18 */\n    tag_10:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingAirdrop.sol\":6115:6240  function hasPremiumAccess(address _user) external view returns (bool) {... */\n    tag_11:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingAirdrop.sol\":697:722  IERC20 public rewardToken */\n    tag_12:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingAirdrop.sol\":3829:5083  function unstakeAndClaim() external nonReentrant {... */\n    tag_13:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      stop\n        /* \"contracts/StakingAirdrop.sol\":2528:2794  function fundRewardPool(uint256 _amount) external {... */\n    tag_18:\n        /* \"contracts/StakingAirdrop.sol\":2603:2610  _amount */\n      dup1\n        /* \"contracts/StakingAirdrop.sol\":2588:2599  totalReward */\n      0x03\n      0x00\n        /* \"contracts/StakingAirdrop.sol\":2588:2610  totalReward += _amount */\n      dup3\n      dup3\n      sload\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingAirdrop.sol\":2639:2646  _amount */\n      dup1\n        /* \"contracts/StakingAirdrop.sol\":2620:2635  availableReward */\n      0x04\n      0x00\n        /* \"contracts/StakingAirdrop.sol\":2620:2646  availableReward += _amount */\n      dup3\n      dup3\n      sload\n      tag_60\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_60:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingAirdrop.sol\":2723:2787  rewardToken.safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_61\n        /* \"contracts/StakingAirdrop.sol\":2752:2762  msg.sender */\n      caller\n        /* \"contracts/StakingAirdrop.sol\":2772:2776  this */\n      address\n        /* \"contracts/StakingAirdrop.sol\":2779:2786  _amount */\n      dup4\n        /* \"contracts/StakingAirdrop.sol\":2723:2734  rewardToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingAirdrop.sol\":2723:2751  rewardToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_62\n      swap1\n        /* \"contracts/StakingAirdrop.sol\":2723:2787  rewardToken.safeTransferFrom(msg.sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_61:\n        /* \"contracts/StakingAirdrop.sol\":2528:2794  function fundRewardPool(uint256 _amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/StakingAirdrop.sol\":3001:3729  function stakeTokens(uint256 _amount, uint256 _stakingPeriod) external nonReentrant {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_64\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_65\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_64:\n        /* \"contracts/StakingAirdrop.sol\":3095:3116  Staker storage staker */\n      0x00\n        /* \"contracts/StakingAirdrop.sol\":3119:3126  stakers */\n      0x05\n        /* \"contracts/StakingAirdrop.sol\":3119:3138  stakers[msg.sender] */\n      0x00\n        /* \"contracts/StakingAirdrop.sol\":3127:3137  msg.sender */\n      caller\n        /* \"contracts/StakingAirdrop.sol\":3119:3138  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingAirdrop.sol\":3095:3138  Staker storage staker = stakers[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/StakingAirdrop.sol\":3229:3230  0 */\n      0x00\n        /* \"contracts/StakingAirdrop.sol\":3206:3212  staker */\n      dup2\n        /* \"contracts/StakingAirdrop.sol\":3206:3225  staker.amountStaked */\n      0x00\n      add\n      sload\n        /* \"contracts/StakingAirdrop.sol\":3206:3230  staker.amountStaked == 0 */\n      eq\n        /* \"contracts/StakingAirdrop.sol\":3198:3249  require(staker.amountStaked == 0, \"Already staked\") */\n      tag_67\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_67:\n        /* \"contracts/StakingAirdrop.sol\":3319:3326  _amount */\n      dup3\n        /* \"contracts/StakingAirdrop.sol\":3297:3303  staker */\n      dup2\n        /* \"contracts/StakingAirdrop.sol\":3297:3316  staker.amountStaked */\n      0x00\n      add\n        /* \"contracts/StakingAirdrop.sol\":3297:3326  staker.amountStaked = _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingAirdrop.sol\":3359:3373  _stakingPeriod */\n      dup2\n        /* \"contracts/StakingAirdrop.sol\":3336:3342  staker */\n      dup2\n        /* \"contracts/StakingAirdrop.sol\":3336:3356  staker.stakingPeriod */\n      0x01\n      add\n        /* \"contracts/StakingAirdrop.sol\":3336:3373  staker.stakingPeriod = _stakingPeriod */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingAirdrop.sol\":3402:3417  block.timestamp */\n      timestamp\n        /* \"contracts/StakingAirdrop.sol\":3383:3389  staker */\n      dup2\n        /* \"contracts/StakingAirdrop.sol\":3383:3399  staker.startTime */\n      0x02\n      add\n        /* \"contracts/StakingAirdrop.sol\":3383:3417  staker.startTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingAirdrop.sol\":1030:1041  1000 * 1e18 */\n      0x3635c9adc5dea00000\n        /* \"contracts/StakingAirdrop.sol\":3453:3460  _amount */\n      dup4\n        /* \"contracts/StakingAirdrop.sol\":3453:3481  _amount >= PREMIUM_THRESHOLD */\n      lt\n      iszero\n        /* \"contracts/StakingAirdrop.sol\":3427:3433  staker */\n      dup2\n        /* \"contracts/StakingAirdrop.sol\":3427:3450  staker.hasPremiumAccess */\n      0x03\n      add\n      0x00\n        /* \"contracts/StakingAirdrop.sol\":3427:3481  staker.hasPremiumAccess = _amount >= PREMIUM_THRESHOLD */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingAirdrop.sol\":3548:3613  stakingToken.safeTransferFrom(msg.sender, address(this), _amount) */\n      tag_70\n        /* \"contracts/StakingAirdrop.sol\":3578:3588  msg.sender */\n      caller\n        /* \"contracts/StakingAirdrop.sol\":3598:3602  this */\n      address\n        /* \"contracts/StakingAirdrop.sol\":3605:3612  _amount */\n      dup6\n        /* \"contracts/StakingAirdrop.sol\":3548:3560  stakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingAirdrop.sol\":3548:3577  stakingToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_62\n      swap1\n        /* \"contracts/StakingAirdrop.sol\":3548:3613  stakingToken.safeTransferFrom(msg.sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_70:\n        /* \"contracts/StakingAirdrop.sol\":3686:3696  msg.sender */\n      caller\n        /* \"contracts/StakingAirdrop.sol\":3680:3722  Stake(msg.sender, _amount, _stakingPeriod) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5af417134f72a9d41143ace85b0a26dce6f550f894f2cbc1eeee8810603d91b6\n        /* \"contracts/StakingAirdrop.sol\":3698:3705  _amount */\n      dup5\n        /* \"contracts/StakingAirdrop.sol\":3707:3721  _stakingPeriod */\n      dup5\n        /* \"contracts/StakingAirdrop.sol\":3680:3722  Stake(msg.sender, _amount, _stakingPeriod) */\n      mload(0x40)\n      tag_71\n      swap3\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StakingAirdrop.sol\":3085:3729  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_73\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_74\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_73:\n        /* \"contracts/StakingAirdrop.sol\":3001:3729  function stakeTokens(uint256 _amount, uint256 _stakingPeriod) external nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingAirdrop.sol\":880:910  uint256 public availableReward */\n    tag_24:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/StakingAirdrop.sol\":619:645  IERC20 public stakingToken */\n    tag_28:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/StakingAirdrop.sol\":6643:7086  function getStakerInfo(address _user)... */\n    tag_34:\n        /* \"contracts/StakingAirdrop.sol\":6741:6761  uint256 amountStaked */\n      0x00\n        /* \"contracts/StakingAirdrop.sol\":6775:6796  uint256 stakingPeriod */\n      0x00\n        /* \"contracts/StakingAirdrop.sol\":6810:6827  uint256 startTime */\n      0x00\n        /* \"contracts/StakingAirdrop.sol\":6841:6856  bool hasPremium */\n      0x00\n        /* \"contracts/StakingAirdrop.sol\":6881:6901  Staker memory staker */\n      0x00\n        /* \"contracts/StakingAirdrop.sol\":6904:6911  stakers */\n      0x05\n        /* \"contracts/StakingAirdrop.sol\":6904:6918  stakers[_user] */\n      0x00\n        /* \"contracts/StakingAirdrop.sol\":6912:6917  _user */\n      dup8\n        /* \"contracts/StakingAirdrop.sol\":6904:6918  stakers[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingAirdrop.sol\":6881:6918  Staker memory staker = stakers[_user] */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/StakingAirdrop.sol\":6949:6955  staker */\n      dup1\n        /* \"contracts/StakingAirdrop.sol\":6949:6968  staker.amountStaked */\n      0x00\n      add\n      mload\n        /* \"contracts/StakingAirdrop.sol\":6982:6988  staker */\n      dup2\n        /* \"contracts/StakingAirdrop.sol\":6982:7002  staker.stakingPeriod */\n      0x20\n      add\n      mload\n        /* \"contracts/StakingAirdrop.sol\":7016:7022  staker */\n      dup3\n        /* \"contracts/StakingAirdrop.sol\":7016:7032  staker.startTime */\n      0x40\n      add\n      mload\n        /* \"contracts/StakingAirdrop.sol\":7046:7052  staker */\n      dup4\n        /* \"contracts/StakingAirdrop.sol\":7046:7069  staker.hasPremiumAccess */\n      0x60\n      add\n      mload\n        /* \"contracts/StakingAirdrop.sol\":6928:7079  return (... */\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      pop\n        /* \"contracts/StakingAirdrop.sol\":6643:7086  function getStakerInfo(address _user)... */\n      swap2\n      swap4\n      pop\n      swap2\n      swap4\n      jump\t// out\n        /* \"contracts/StakingAirdrop.sol\":791:817  uint256 public totalReward */\n    tag_38:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/StakingAirdrop.sol\":1359:1400  mapping(address => Staker) public stakers */\n    tag_42:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"contracts/StakingAirdrop.sol\":986:1041  uint256 public constant PREMIUM_THRESHOLD = 1000 * 1e18 */\n    tag_45:\n        /* \"contracts/StakingAirdrop.sol\":1030:1041  1000 * 1e18 */\n      0x3635c9adc5dea00000\n        /* \"contracts/StakingAirdrop.sol\":986:1041  uint256 public constant PREMIUM_THRESHOLD = 1000 * 1e18 */\n      dup2\n      jump\t// out\n        /* \"contracts/StakingAirdrop.sol\":6115:6240  function hasPremiumAccess(address _user) external view returns (bool) {... */\n    tag_49:\n        /* \"contracts/StakingAirdrop.sol\":6179:6183  bool */\n      0x00\n        /* \"contracts/StakingAirdrop.sol\":6202:6209  stakers */\n      0x05\n        /* \"contracts/StakingAirdrop.sol\":6202:6216  stakers[_user] */\n      0x00\n        /* \"contracts/StakingAirdrop.sol\":6210:6215  _user */\n      dup4\n        /* \"contracts/StakingAirdrop.sol\":6202:6216  stakers[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingAirdrop.sol\":6202:6233  stakers[_user].hasPremiumAccess */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/StakingAirdrop.sol\":6195:6233  return stakers[_user].hasPremiumAccess */\n      swap1\n      pop\n        /* \"contracts/StakingAirdrop.sol\":6115:6240  function hasPremiumAccess(address _user) external view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/StakingAirdrop.sol\":697:722  IERC20 public rewardToken */\n    tag_53:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/StakingAirdrop.sol\":3829:5083  function unstakeAndClaim() external nonReentrant {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_78\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_65\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_78:\n        /* \"contracts/StakingAirdrop.sol\":3888:3909  Staker storage staker */\n      0x00\n        /* \"contracts/StakingAirdrop.sol\":3912:3919  stakers */\n      0x05\n        /* \"contracts/StakingAirdrop.sol\":3912:3931  stakers[msg.sender] */\n      0x00\n        /* \"contracts/StakingAirdrop.sol\":3920:3930  msg.sender */\n      caller\n        /* \"contracts/StakingAirdrop.sol\":3912:3931  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingAirdrop.sol\":3888:3931  Staker storage staker = stakers[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/StakingAirdrop.sol\":4017:4018  0 */\n      0x00\n        /* \"contracts/StakingAirdrop.sol\":3995:4001  staker */\n      dup2\n        /* \"contracts/StakingAirdrop.sol\":3995:4014  staker.amountStaked */\n      0x00\n      add\n      sload\n        /* \"contracts/StakingAirdrop.sol\":3995:4018  staker.amountStaked > 0 */\n      gt\n        /* \"contracts/StakingAirdrop.sol\":3987:4039  require(staker.amountStaked > 0, \"No tokens staked\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"contracts/StakingAirdrop.sol\":4158:4164  staker */\n      dup1\n        /* \"contracts/StakingAirdrop.sol\":4158:4178  staker.stakingPeriod */\n      0x01\n      add\n      sload\n        /* \"contracts/StakingAirdrop.sol\":4139:4145  staker */\n      dup2\n        /* \"contracts/StakingAirdrop.sol\":4139:4155  staker.startTime */\n      0x02\n      add\n      sload\n        /* \"contracts/StakingAirdrop.sol\":4139:4178  staker.startTime + staker.stakingPeriod */\n      tag_83\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_83:\n        /* \"contracts/StakingAirdrop.sol\":4120:4135  block.timestamp */\n      timestamp\n        /* \"contracts/StakingAirdrop.sol\":4120:4178  block.timestamp >= staker.startTime + staker.stakingPeriod */\n      lt\n      iszero\n        /* \"contracts/StakingAirdrop.sol\":4099:4231  require(... */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"contracts/StakingAirdrop.sol\":4305:4319  uint256 reward */\n      0x00\n        /* \"contracts/StakingAirdrop.sol\":4322:4428  calculateReward(... */\n      tag_87\n        /* \"contracts/StakingAirdrop.sol\":4351:4357  staker */\n      dup3\n        /* \"contracts/StakingAirdrop.sol\":4351:4370  staker.amountStaked */\n      0x00\n      add\n      sload\n        /* \"contracts/StakingAirdrop.sol\":4402:4408  staker */\n      dup4\n        /* \"contracts/StakingAirdrop.sol\":4402:4418  staker.startTime */\n      0x02\n      add\n      sload\n        /* \"contracts/StakingAirdrop.sol\":4384:4399  block.timestamp */\n      timestamp\n        /* \"contracts/StakingAirdrop.sol\":4384:4418  block.timestamp - staker.startTime */\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"contracts/StakingAirdrop.sol\":4322:4337  calculateReward */\n      tag_90\n        /* \"contracts/StakingAirdrop.sol\":4322:4428  calculateReward(... */\n      jump\t// in\n    tag_87:\n        /* \"contracts/StakingAirdrop.sol\":4305:4428  uint256 reward = calculateReward(... */\n      swap1\n      pop\n        /* \"contracts/StakingAirdrop.sol\":4517:4523  reward */\n      dup1\n        /* \"contracts/StakingAirdrop.sol\":4498:4513  availableReward */\n      sload(0x04)\n        /* \"contracts/StakingAirdrop.sol\":4498:4523  availableReward >= reward */\n      lt\n      iszero\n        /* \"contracts/StakingAirdrop.sol\":4490:4552  require(availableReward >= reward, \"Insufficient reward pool\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_91:\n        /* \"contracts/StakingAirdrop.sol\":4610:4668  stakingToken.safeTransfer(msg.sender, staker.amountStaked) */\n      tag_94\n        /* \"contracts/StakingAirdrop.sol\":4636:4646  msg.sender */\n      caller\n        /* \"contracts/StakingAirdrop.sol\":4648:4654  staker */\n      dup4\n        /* \"contracts/StakingAirdrop.sol\":4648:4667  staker.amountStaked */\n      0x00\n      add\n      sload\n        /* \"contracts/StakingAirdrop.sol\":4610:4622  stakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingAirdrop.sol\":4610:4635  stakingToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_95\n      swap1\n        /* \"contracts/StakingAirdrop.sol\":4610:4668  stakingToken.safeTransfer(msg.sender, staker.amountStaked) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_94:\n        /* \"contracts/StakingAirdrop.sol\":4721:4765  rewardToken.safeTransfer(msg.sender, reward) */\n      tag_96\n        /* \"contracts/StakingAirdrop.sol\":4746:4756  msg.sender */\n      caller\n        /* \"contracts/StakingAirdrop.sol\":4758:4764  reward */\n      dup3\n        /* \"contracts/StakingAirdrop.sol\":4721:4732  rewardToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingAirdrop.sol\":4721:4745  rewardToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_95\n      swap1\n        /* \"contracts/StakingAirdrop.sol\":4721:4765  rewardToken.safeTransfer(msg.sender, reward) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_96:\n        /* \"contracts/StakingAirdrop.sol\":4842:4848  reward */\n      dup1\n        /* \"contracts/StakingAirdrop.sol\":4823:4838  availableReward */\n      0x04\n      0x00\n        /* \"contracts/StakingAirdrop.sol\":4823:4848  availableReward -= reward */\n      dup3\n      dup3\n      sload\n      tag_97\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_97:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingAirdrop.sol\":4925:4935  msg.sender */\n      caller\n        /* \"contracts/StakingAirdrop.sol\":4917:4965  Unstake(msg.sender, staker.amountStaked, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf960dbf9e5d0682f7a298ed974e33a28b4464914b7a2bfac12ae419a9afeb280\n        /* \"contracts/StakingAirdrop.sol\":4937:4943  staker */\n      dup4\n        /* \"contracts/StakingAirdrop.sol\":4937:4956  staker.amountStaked */\n      0x00\n      add\n      sload\n        /* \"contracts/StakingAirdrop.sol\":4958:4964  reward */\n      dup4\n        /* \"contracts/StakingAirdrop.sol\":4917:4965  Unstake(msg.sender, staker.amountStaked, reward) */\n      mload(0x40)\n      tag_98\n      swap3\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StakingAirdrop.sol\":5034:5035  0 */\n      0x00\n        /* \"contracts/StakingAirdrop.sol\":5012:5018  staker */\n      dup3\n        /* \"contracts/StakingAirdrop.sol\":5012:5031  staker.amountStaked */\n      0x00\n      add\n        /* \"contracts/StakingAirdrop.sol\":5012:5035  staker.amountStaked = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingAirdrop.sol\":5071:5076  false */\n      0x00\n        /* \"contracts/StakingAirdrop.sol\":5045:5051  staker */\n      dup3\n        /* \"contracts/StakingAirdrop.sol\":5045:5068  staker.hasPremiumAccess */\n      0x03\n      add\n      0x00\n        /* \"contracts/StakingAirdrop.sol\":5045:5076  staker.hasPremiumAccess = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingAirdrop.sol\":3878:5083  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_99\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_74\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_99:\n        /* \"contracts/StakingAirdrop.sol\":3829:5083  function unstakeAndClaim() external nonReentrant {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1849  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1862  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1865:1869  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1871:1873  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1875:1880  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_102\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1821  _callOptionalReturn */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"contracts/StakingAirdrop.sol\":5397:5902  function calculateReward(uint256 _amountStaked, uint256 _elapsedTime)... */\n    tag_90:\n        /* \"contracts/StakingAirdrop.sol\":5514:5521  uint256 */\n      0x00\n        /* \"contracts/StakingAirdrop.sol\":5670:5684  uint256 reward */\n      0x00\n        /* \"contracts/StakingAirdrop.sol\":5720:5727  30 days */\n      0x278d00\n        /* \"contracts/StakingAirdrop.sol\":5704:5716  _elapsedTime */\n      dup4\n        /* \"contracts/StakingAirdrop.sol\":5688:5701  _amountStaked */\n      dup6\n        /* \"contracts/StakingAirdrop.sol\":5688:5716  _amountStaked * _elapsedTime */\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"contracts/StakingAirdrop.sol\":5687:5727  (_amountStaked * _elapsedTime) / 30 days */\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"contracts/StakingAirdrop.sol\":5670:5727  uint256 reward = (_amountStaked * _elapsedTime) / 30 days */\n      swap1\n      pop\n        /* \"contracts/StakingAirdrop.sol\":5806:5821  availableReward */\n      sload(0x04)\n        /* \"contracts/StakingAirdrop.sol\":5797:5803  reward */\n      dup2\n        /* \"contracts/StakingAirdrop.sol\":5797:5821  reward > availableReward */\n      gt\n        /* \"contracts/StakingAirdrop.sol\":5793:5872  if (reward > availableReward) {... */\n      iszero\n      tag_115\n      jumpi\n        /* \"contracts/StakingAirdrop.sol\":5846:5861  availableReward */\n      sload(0x04)\n        /* \"contracts/StakingAirdrop.sol\":5837:5861  reward = availableReward */\n      swap1\n      pop\n        /* \"contracts/StakingAirdrop.sol\":5793:5872  if (reward > availableReward) {... */\n    tag_115:\n        /* \"contracts/StakingAirdrop.sol\":5889:5895  reward */\n      dup1\n        /* \"contracts/StakingAirdrop.sol\":5882:5895  return reward */\n      swap2\n      pop\n      pop\n        /* \"contracts/StakingAirdrop.sol\":5397:5902  function calculateReward(uint256 _amountStaked, uint256 _elapsedTime)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1432  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1441  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1444:1446  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1448:1453  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_118\n      swap3\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4512:4517  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_122\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_123\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_126\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4664:4669  token */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_130\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_131\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_133\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_139\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_138)\n    tag_139:\n      0x60\n      swap2\n      pop\n    tag_138:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_140\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_141\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_141:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_143\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_144\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_145\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_146)\n    tag_143:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_147\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_147:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_148\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_142)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_142:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_151\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":88:205   */\n    tag_154:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_156:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_157:\n        /* \"#utility.yul\":490:514   */\n      tag_197\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_156\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_198\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_198:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_158:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_200\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_157\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_17:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_203\n      tag_154\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":766:885   */\n    tag_202:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_204\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_158\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1499   */\n    tag_21:\n        /* \"#utility.yul\":1093:1099   */\n      0x00\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x40\n        /* \"#utility.yul\":1138:1147   */\n      dup4\n        /* \"#utility.yul\":1129:1136   */\n      dup6\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_207\n      tag_154\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":1118:1237   */\n    tag_206:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_208\n        /* \"#utility.yul\":1346:1353   */\n      dup6\n        /* \"#utility.yul\":1337:1343   */\n      dup3\n        /* \"#utility.yul\":1326:1335   */\n      dup7\n        /* \"#utility.yul\":1322:1344   */\n      add\n        /* \"#utility.yul\":1301:1354   */\n      tag_158\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":1291:1354   */\n      swap3\n      pop\n        /* \"#utility.yul\":1247:1364   */\n      pop\n        /* \"#utility.yul\":1403:1405   */\n      0x20\n        /* \"#utility.yul\":1429:1482   */\n      tag_209\n        /* \"#utility.yul\":1474:1481   */\n      dup6\n        /* \"#utility.yul\":1465:1471   */\n      dup3\n        /* \"#utility.yul\":1454:1463   */\n      dup7\n        /* \"#utility.yul\":1450:1472   */\n      add\n        /* \"#utility.yul\":1429:1482   */\n      tag_158\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":1419:1482   */\n      swap2\n      pop\n        /* \"#utility.yul\":1374:1492   */\n      pop\n        /* \"#utility.yul\":1025:1499   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1505:1623   */\n    tag_159:\n        /* \"#utility.yul\":1592:1616   */\n      tag_211\n        /* \"#utility.yul\":1610:1615   */\n      dup2\n        /* \"#utility.yul\":1592:1616   */\n      tag_156\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":1587:1590   */\n      dup3\n        /* \"#utility.yul\":1580:1617   */\n      mstore\n        /* \"#utility.yul\":1505:1623   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1629:1851   */\n    tag_26:\n        /* \"#utility.yul\":1722:1726   */\n      0x00\n        /* \"#utility.yul\":1760:1762   */\n      0x20\n        /* \"#utility.yul\":1749:1758   */\n      dup3\n        /* \"#utility.yul\":1745:1763   */\n      add\n        /* \"#utility.yul\":1737:1763   */\n      swap1\n      pop\n        /* \"#utility.yul\":1773:1844   */\n      tag_213\n        /* \"#utility.yul\":1841:1842   */\n      0x00\n        /* \"#utility.yul\":1830:1839   */\n      dup4\n        /* \"#utility.yul\":1826:1843   */\n      add\n        /* \"#utility.yul\":1817:1823   */\n      dup5\n        /* \"#utility.yul\":1773:1844   */\n      tag_159\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":1629:1851   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1857:1983   */\n    tag_160:\n        /* \"#utility.yul\":1894:1901   */\n      0x00\n        /* \"#utility.yul\":1934:1976   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1927:1932   */\n      dup3\n        /* \"#utility.yul\":1923:1977   */\n      and\n        /* \"#utility.yul\":1912:1977   */\n      swap1\n      pop\n        /* \"#utility.yul\":1857:1983   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1989:2049   */\n    tag_161:\n        /* \"#utility.yul\":2017:2020   */\n      0x00\n        /* \"#utility.yul\":2038:2043   */\n      dup2\n        /* \"#utility.yul\":2031:2043   */\n      swap1\n      pop\n        /* \"#utility.yul\":1989:2049   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2055:2197   */\n    tag_162:\n        /* \"#utility.yul\":2105:2114   */\n      0x00\n        /* \"#utility.yul\":2138:2191   */\n      tag_217\n        /* \"#utility.yul\":2156:2190   */\n      tag_218\n        /* \"#utility.yul\":2165:2189   */\n      tag_219\n        /* \"#utility.yul\":2183:2188   */\n      dup5\n        /* \"#utility.yul\":2165:2189   */\n      tag_160\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":2156:2190   */\n      tag_161\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":2138:2191   */\n      tag_160\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":2125:2191   */\n      swap1\n      pop\n        /* \"#utility.yul\":2055:2197   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2203:2329   */\n    tag_163:\n        /* \"#utility.yul\":2253:2262   */\n      0x00\n        /* \"#utility.yul\":2286:2323   */\n      tag_221\n        /* \"#utility.yul\":2317:2322   */\n      dup3\n        /* \"#utility.yul\":2286:2323   */\n      tag_162\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":2273:2323   */\n      swap1\n      pop\n        /* \"#utility.yul\":2203:2329   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2335:2475   */\n    tag_164:\n        /* \"#utility.yul\":2399:2408   */\n      0x00\n        /* \"#utility.yul\":2432:2469   */\n      tag_223\n        /* \"#utility.yul\":2463:2468   */\n      dup3\n        /* \"#utility.yul\":2432:2469   */\n      tag_163\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":2419:2469   */\n      swap1\n      pop\n        /* \"#utility.yul\":2335:2475   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2481:2640   */\n    tag_165:\n        /* \"#utility.yul\":2582:2633   */\n      tag_225\n        /* \"#utility.yul\":2627:2632   */\n      dup2\n        /* \"#utility.yul\":2582:2633   */\n      tag_164\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":2577:2580   */\n      dup3\n        /* \"#utility.yul\":2570:2634   */\n      mstore\n        /* \"#utility.yul\":2481:2640   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2646:2896   */\n    tag_30:\n        /* \"#utility.yul\":2753:2757   */\n      0x00\n        /* \"#utility.yul\":2791:2793   */\n      0x20\n        /* \"#utility.yul\":2780:2789   */\n      dup3\n        /* \"#utility.yul\":2776:2794   */\n      add\n        /* \"#utility.yul\":2768:2794   */\n      swap1\n      pop\n        /* \"#utility.yul\":2804:2889   */\n      tag_227\n        /* \"#utility.yul\":2886:2887   */\n      0x00\n        /* \"#utility.yul\":2875:2884   */\n      dup4\n        /* \"#utility.yul\":2871:2888   */\n      add\n        /* \"#utility.yul\":2862:2868   */\n      dup5\n        /* \"#utility.yul\":2804:2889   */\n      tag_165\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":2646:2896   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2902:2998   */\n    tag_166:\n        /* \"#utility.yul\":2939:2946   */\n      0x00\n        /* \"#utility.yul\":2968:2992   */\n      tag_229\n        /* \"#utility.yul\":2986:2991   */\n      dup3\n        /* \"#utility.yul\":2968:2992   */\n      tag_160\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":2957:2992   */\n      swap1\n      pop\n        /* \"#utility.yul\":2902:2998   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3004:3126   */\n    tag_167:\n        /* \"#utility.yul\":3077:3101   */\n      tag_231\n        /* \"#utility.yul\":3095:3100   */\n      dup2\n        /* \"#utility.yul\":3077:3101   */\n      tag_166\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":3070:3075   */\n      dup2\n        /* \"#utility.yul\":3067:3102   */\n      eq\n        /* \"#utility.yul\":3057:3120   */\n      tag_232\n      jumpi\n        /* \"#utility.yul\":3116:3117   */\n      0x00\n        /* \"#utility.yul\":3113:3114   */\n      0x00\n        /* \"#utility.yul\":3106:3118   */\n      revert\n        /* \"#utility.yul\":3057:3120   */\n    tag_232:\n        /* \"#utility.yul\":3004:3126   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3132:3271   */\n    tag_168:\n        /* \"#utility.yul\":3178:3183   */\n      0x00\n        /* \"#utility.yul\":3216:3222   */\n      dup2\n        /* \"#utility.yul\":3203:3223   */\n      calldataload\n        /* \"#utility.yul\":3194:3223   */\n      swap1\n      pop\n        /* \"#utility.yul\":3232:3265   */\n      tag_234\n        /* \"#utility.yul\":3259:3264   */\n      dup2\n        /* \"#utility.yul\":3232:3265   */\n      tag_167\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":3132:3271   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3277:3606   */\n    tag_33:\n        /* \"#utility.yul\":3336:3342   */\n      0x00\n        /* \"#utility.yul\":3385:3387   */\n      0x20\n        /* \"#utility.yul\":3373:3382   */\n      dup3\n        /* \"#utility.yul\":3364:3371   */\n      dup5\n        /* \"#utility.yul\":3360:3383   */\n      sub\n        /* \"#utility.yul\":3356:3388   */\n      slt\n        /* \"#utility.yul\":3353:3472   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":3391:3470   */\n      tag_237\n      tag_154\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":3353:3472   */\n    tag_236:\n        /* \"#utility.yul\":3511:3512   */\n      0x00\n        /* \"#utility.yul\":3536:3589   */\n      tag_238\n        /* \"#utility.yul\":3581:3588   */\n      dup5\n        /* \"#utility.yul\":3572:3578   */\n      dup3\n        /* \"#utility.yul\":3561:3570   */\n      dup6\n        /* \"#utility.yul\":3557:3579   */\n      add\n        /* \"#utility.yul\":3536:3589   */\n      tag_168\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":3526:3589   */\n      swap2\n      pop\n        /* \"#utility.yul\":3482:3599   */\n      pop\n        /* \"#utility.yul\":3277:3606   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3612:3702   */\n    tag_169:\n        /* \"#utility.yul\":3646:3653   */\n      0x00\n        /* \"#utility.yul\":3689:3694   */\n      dup2\n        /* \"#utility.yul\":3682:3695   */\n      iszero\n        /* \"#utility.yul\":3675:3696   */\n      iszero\n        /* \"#utility.yul\":3664:3696   */\n      swap1\n      pop\n        /* \"#utility.yul\":3612:3702   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3708:3817   */\n    tag_170:\n        /* \"#utility.yul\":3789:3810   */\n      tag_241\n        /* \"#utility.yul\":3804:3809   */\n      dup2\n        /* \"#utility.yul\":3789:3810   */\n      tag_169\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":3784:3787   */\n      dup3\n        /* \"#utility.yul\":3777:3811   */\n      mstore\n        /* \"#utility.yul\":3708:3817   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3823:4364   */\n    tag_36:\n        /* \"#utility.yul\":3994:3998   */\n      0x00\n        /* \"#utility.yul\":4032:4035   */\n      0x80\n        /* \"#utility.yul\":4021:4030   */\n      dup3\n        /* \"#utility.yul\":4017:4036   */\n      add\n        /* \"#utility.yul\":4009:4036   */\n      swap1\n      pop\n        /* \"#utility.yul\":4046:4117   */\n      tag_243\n        /* \"#utility.yul\":4114:4115   */\n      0x00\n        /* \"#utility.yul\":4103:4112   */\n      dup4\n        /* \"#utility.yul\":4099:4116   */\n      add\n        /* \"#utility.yul\":4090:4096   */\n      dup8\n        /* \"#utility.yul\":4046:4117   */\n      tag_159\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":4127:4199   */\n      tag_244\n        /* \"#utility.yul\":4195:4197   */\n      0x20\n        /* \"#utility.yul\":4184:4193   */\n      dup4\n        /* \"#utility.yul\":4180:4198   */\n      add\n        /* \"#utility.yul\":4171:4177   */\n      dup7\n        /* \"#utility.yul\":4127:4199   */\n      tag_159\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":4209:4281   */\n      tag_245\n        /* \"#utility.yul\":4277:4279   */\n      0x40\n        /* \"#utility.yul\":4266:4275   */\n      dup4\n        /* \"#utility.yul\":4262:4280   */\n      add\n        /* \"#utility.yul\":4253:4259   */\n      dup6\n        /* \"#utility.yul\":4209:4281   */\n      tag_159\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":4291:4357   */\n      tag_246\n        /* \"#utility.yul\":4353:4355   */\n      0x60\n        /* \"#utility.yul\":4342:4351   */\n      dup4\n        /* \"#utility.yul\":4338:4356   */\n      add\n        /* \"#utility.yul\":4329:4335   */\n      dup5\n        /* \"#utility.yul\":4291:4357   */\n      tag_170\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":3823:4364   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4370:4580   */\n    tag_51:\n        /* \"#utility.yul\":4457:4461   */\n      0x00\n        /* \"#utility.yul\":4495:4497   */\n      0x20\n        /* \"#utility.yul\":4484:4493   */\n      dup3\n        /* \"#utility.yul\":4480:4498   */\n      add\n        /* \"#utility.yul\":4472:4498   */\n      swap1\n      pop\n        /* \"#utility.yul\":4508:4573   */\n      tag_248\n        /* \"#utility.yul\":4570:4571   */\n      0x00\n        /* \"#utility.yul\":4559:4568   */\n      dup4\n        /* \"#utility.yul\":4555:4572   */\n      add\n        /* \"#utility.yul\":4546:4552   */\n      dup5\n        /* \"#utility.yul\":4508:4573   */\n      tag_170\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":4370:4580   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4586:4766   */\n    tag_171:\n        /* \"#utility.yul\":4634:4711   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4631:4632   */\n      0x00\n        /* \"#utility.yul\":4624:4712   */\n      mstore\n        /* \"#utility.yul\":4731:4735   */\n      0x11\n        /* \"#utility.yul\":4728:4729   */\n      0x04\n        /* \"#utility.yul\":4721:4736   */\n      mstore\n        /* \"#utility.yul\":4755:4759   */\n      0x24\n        /* \"#utility.yul\":4752:4753   */\n      0x00\n        /* \"#utility.yul\":4745:4760   */\n      revert\n        /* \"#utility.yul\":4772:4963   */\n    tag_59:\n        /* \"#utility.yul\":4812:4815   */\n      0x00\n        /* \"#utility.yul\":4831:4851   */\n      tag_251\n        /* \"#utility.yul\":4849:4850   */\n      dup3\n        /* \"#utility.yul\":4831:4851   */\n      tag_156\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":4826:4851   */\n      swap2\n      pop\n        /* \"#utility.yul\":4865:4885   */\n      tag_252\n        /* \"#utility.yul\":4883:4884   */\n      dup4\n        /* \"#utility.yul\":4865:4885   */\n      tag_156\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":4860:4885   */\n      swap3\n      pop\n        /* \"#utility.yul\":4908:4909   */\n      dup3\n        /* \"#utility.yul\":4905:4906   */\n      dup3\n        /* \"#utility.yul\":4901:4910   */\n      add\n        /* \"#utility.yul\":4894:4910   */\n      swap1\n      pop\n        /* \"#utility.yul\":4929:4932   */\n      dup1\n        /* \"#utility.yul\":4926:4927   */\n      dup3\n        /* \"#utility.yul\":4923:4933   */\n      gt\n        /* \"#utility.yul\":4920:4956   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":4936:4954   */\n      tag_254\n      tag_171\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":4920:4956   */\n    tag_253:\n        /* \"#utility.yul\":4772:4963   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4969:5138   */\n    tag_172:\n        /* \"#utility.yul\":5053:5064   */\n      0x00\n        /* \"#utility.yul\":5087:5093   */\n      dup3\n        /* \"#utility.yul\":5082:5085   */\n      dup3\n        /* \"#utility.yul\":5075:5094   */\n      mstore\n        /* \"#utility.yul\":5127:5131   */\n      0x20\n        /* \"#utility.yul\":5122:5125   */\n      dup3\n        /* \"#utility.yul\":5118:5132   */\n      add\n        /* \"#utility.yul\":5103:5132   */\n      swap1\n      pop\n        /* \"#utility.yul\":4969:5138   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5144:5308   */\n    tag_173:\n        /* \"#utility.yul\":5284:5300   */\n      0x416c7265616479207374616b6564000000000000000000000000000000000000\n        /* \"#utility.yul\":5280:5281   */\n      0x00\n        /* \"#utility.yul\":5272:5278   */\n      dup3\n        /* \"#utility.yul\":5268:5282   */\n      add\n        /* \"#utility.yul\":5261:5301   */\n      mstore\n        /* \"#utility.yul\":5144:5308   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5314:5680   */\n    tag_174:\n        /* \"#utility.yul\":5456:5459   */\n      0x00\n        /* \"#utility.yul\":5477:5544   */\n      tag_258\n        /* \"#utility.yul\":5541:5543   */\n      0x0e\n        /* \"#utility.yul\":5536:5539   */\n      dup4\n        /* \"#utility.yul\":5477:5544   */\n      tag_172\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":5470:5544   */\n      swap2\n      pop\n        /* \"#utility.yul\":5553:5646   */\n      tag_259\n        /* \"#utility.yul\":5642:5645   */\n      dup3\n        /* \"#utility.yul\":5553:5646   */\n      tag_173\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":5671:5673   */\n      0x20\n        /* \"#utility.yul\":5666:5669   */\n      dup3\n        /* \"#utility.yul\":5662:5674   */\n      add\n        /* \"#utility.yul\":5655:5674   */\n      swap1\n      pop\n        /* \"#utility.yul\":5314:5680   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5686:6105   */\n    tag_69:\n        /* \"#utility.yul\":5852:5856   */\n      0x00\n        /* \"#utility.yul\":5890:5892   */\n      0x20\n        /* \"#utility.yul\":5879:5888   */\n      dup3\n        /* \"#utility.yul\":5875:5893   */\n      add\n        /* \"#utility.yul\":5867:5893   */\n      swap1\n      pop\n        /* \"#utility.yul\":5939:5948   */\n      dup2\n        /* \"#utility.yul\":5933:5937   */\n      dup2\n        /* \"#utility.yul\":5929:5949   */\n      sub\n        /* \"#utility.yul\":5925:5926   */\n      0x00\n        /* \"#utility.yul\":5914:5923   */\n      dup4\n        /* \"#utility.yul\":5910:5927   */\n      add\n        /* \"#utility.yul\":5903:5950   */\n      mstore\n        /* \"#utility.yul\":5967:6098   */\n      tag_261\n        /* \"#utility.yul\":6093:6097   */\n      dup2\n        /* \"#utility.yul\":5967:6098   */\n      tag_174\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":5959:6098   */\n      swap1\n      pop\n        /* \"#utility.yul\":5686:6105   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6111:6443   */\n    tag_72:\n        /* \"#utility.yul\":6232:6236   */\n      0x00\n        /* \"#utility.yul\":6270:6272   */\n      0x40\n        /* \"#utility.yul\":6259:6268   */\n      dup3\n        /* \"#utility.yul\":6255:6273   */\n      add\n        /* \"#utility.yul\":6247:6273   */\n      swap1\n      pop\n        /* \"#utility.yul\":6283:6354   */\n      tag_263\n        /* \"#utility.yul\":6351:6352   */\n      0x00\n        /* \"#utility.yul\":6340:6349   */\n      dup4\n        /* \"#utility.yul\":6336:6353   */\n      add\n        /* \"#utility.yul\":6327:6333   */\n      dup6\n        /* \"#utility.yul\":6283:6354   */\n      tag_159\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":6364:6436   */\n      tag_264\n        /* \"#utility.yul\":6432:6434   */\n      0x20\n        /* \"#utility.yul\":6421:6430   */\n      dup4\n        /* \"#utility.yul\":6417:6435   */\n      add\n        /* \"#utility.yul\":6408:6414   */\n      dup5\n        /* \"#utility.yul\":6364:6436   */\n      tag_159\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":6111:6443   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6449:6615   */\n    tag_175:\n        /* \"#utility.yul\":6589:6607   */\n      0x4e6f20746f6b656e73207374616b656400000000000000000000000000000000\n        /* \"#utility.yul\":6585:6586   */\n      0x00\n        /* \"#utility.yul\":6577:6583   */\n      dup3\n        /* \"#utility.yul\":6573:6587   */\n      add\n        /* \"#utility.yul\":6566:6608   */\n      mstore\n        /* \"#utility.yul\":6449:6615   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6621:6987   */\n    tag_176:\n        /* \"#utility.yul\":6763:6766   */\n      0x00\n        /* \"#utility.yul\":6784:6851   */\n      tag_267\n        /* \"#utility.yul\":6848:6850   */\n      0x10\n        /* \"#utility.yul\":6843:6846   */\n      dup4\n        /* \"#utility.yul\":6784:6851   */\n      tag_172\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":6777:6851   */\n      swap2\n      pop\n        /* \"#utility.yul\":6860:6953   */\n      tag_268\n        /* \"#utility.yul\":6949:6952   */\n      dup3\n        /* \"#utility.yul\":6860:6953   */\n      tag_175\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":6978:6980   */\n      0x20\n        /* \"#utility.yul\":6973:6976   */\n      dup3\n        /* \"#utility.yul\":6969:6981   */\n      add\n        /* \"#utility.yul\":6962:6981   */\n      swap1\n      pop\n        /* \"#utility.yul\":6621:6987   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6993:7412   */\n    tag_82:\n        /* \"#utility.yul\":7159:7163   */\n      0x00\n        /* \"#utility.yul\":7197:7199   */\n      0x20\n        /* \"#utility.yul\":7186:7195   */\n      dup3\n        /* \"#utility.yul\":7182:7200   */\n      add\n        /* \"#utility.yul\":7174:7200   */\n      swap1\n      pop\n        /* \"#utility.yul\":7246:7255   */\n      dup2\n        /* \"#utility.yul\":7240:7244   */\n      dup2\n        /* \"#utility.yul\":7236:7256   */\n      sub\n        /* \"#utility.yul\":7232:7233   */\n      0x00\n        /* \"#utility.yul\":7221:7230   */\n      dup4\n        /* \"#utility.yul\":7217:7234   */\n      add\n        /* \"#utility.yul\":7210:7257   */\n      mstore\n        /* \"#utility.yul\":7274:7405   */\n      tag_270\n        /* \"#utility.yul\":7400:7404   */\n      dup2\n        /* \"#utility.yul\":7274:7405   */\n      tag_176\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":7266:7405   */\n      swap1\n      pop\n        /* \"#utility.yul\":6993:7412   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7418:7595   */\n    tag_177:\n        /* \"#utility.yul\":7558:7587   */\n      0x5374616b696e6720706572696f64206e6f7420636f6d706c6574650000000000\n        /* \"#utility.yul\":7554:7555   */\n      0x00\n        /* \"#utility.yul\":7546:7552   */\n      dup3\n        /* \"#utility.yul\":7542:7556   */\n      add\n        /* \"#utility.yul\":7535:7588   */\n      mstore\n        /* \"#utility.yul\":7418:7595   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7601:7967   */\n    tag_178:\n        /* \"#utility.yul\":7743:7746   */\n      0x00\n        /* \"#utility.yul\":7764:7831   */\n      tag_273\n        /* \"#utility.yul\":7828:7830   */\n      0x1b\n        /* \"#utility.yul\":7823:7826   */\n      dup4\n        /* \"#utility.yul\":7764:7831   */\n      tag_172\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":7757:7831   */\n      swap2\n      pop\n        /* \"#utility.yul\":7840:7933   */\n      tag_274\n        /* \"#utility.yul\":7929:7932   */\n      dup3\n        /* \"#utility.yul\":7840:7933   */\n      tag_177\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":7958:7960   */\n      0x20\n        /* \"#utility.yul\":7953:7956   */\n      dup3\n        /* \"#utility.yul\":7949:7961   */\n      add\n        /* \"#utility.yul\":7942:7961   */\n      swap1\n      pop\n        /* \"#utility.yul\":7601:7967   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7973:8392   */\n    tag_86:\n        /* \"#utility.yul\":8139:8143   */\n      0x00\n        /* \"#utility.yul\":8177:8179   */\n      0x20\n        /* \"#utility.yul\":8166:8175   */\n      dup3\n        /* \"#utility.yul\":8162:8180   */\n      add\n        /* \"#utility.yul\":8154:8180   */\n      swap1\n      pop\n        /* \"#utility.yul\":8226:8235   */\n      dup2\n        /* \"#utility.yul\":8220:8224   */\n      dup2\n        /* \"#utility.yul\":8216:8236   */\n      sub\n        /* \"#utility.yul\":8212:8213   */\n      0x00\n        /* \"#utility.yul\":8201:8210   */\n      dup4\n        /* \"#utility.yul\":8197:8214   */\n      add\n        /* \"#utility.yul\":8190:8237   */\n      mstore\n        /* \"#utility.yul\":8254:8385   */\n      tag_276\n        /* \"#utility.yul\":8380:8384   */\n      dup2\n        /* \"#utility.yul\":8254:8385   */\n      tag_178\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":8246:8385   */\n      swap1\n      pop\n        /* \"#utility.yul\":7973:8392   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8398:8592   */\n    tag_89:\n        /* \"#utility.yul\":8438:8442   */\n      0x00\n        /* \"#utility.yul\":8458:8478   */\n      tag_278\n        /* \"#utility.yul\":8476:8477   */\n      dup3\n        /* \"#utility.yul\":8458:8478   */\n      tag_156\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":8453:8478   */\n      swap2\n      pop\n        /* \"#utility.yul\":8492:8512   */\n      tag_279\n        /* \"#utility.yul\":8510:8511   */\n      dup4\n        /* \"#utility.yul\":8492:8512   */\n      tag_156\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":8487:8512   */\n      swap3\n      pop\n        /* \"#utility.yul\":8536:8537   */\n      dup3\n        /* \"#utility.yul\":8533:8534   */\n      dup3\n        /* \"#utility.yul\":8529:8538   */\n      sub\n        /* \"#utility.yul\":8521:8538   */\n      swap1\n      pop\n        /* \"#utility.yul\":8560:8561   */\n      dup2\n        /* \"#utility.yul\":8554:8558   */\n      dup2\n        /* \"#utility.yul\":8551:8562   */\n      gt\n        /* \"#utility.yul\":8548:8585   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":8565:8583   */\n      tag_281\n      tag_171\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":8548:8585   */\n    tag_280:\n        /* \"#utility.yul\":8398:8592   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8598:8772   */\n    tag_179:\n        /* \"#utility.yul\":8738:8764   */\n      0x496e73756666696369656e742072657761726420706f6f6c0000000000000000\n        /* \"#utility.yul\":8734:8735   */\n      0x00\n        /* \"#utility.yul\":8726:8732   */\n      dup3\n        /* \"#utility.yul\":8722:8736   */\n      add\n        /* \"#utility.yul\":8715:8765   */\n      mstore\n        /* \"#utility.yul\":8598:8772   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8778:9144   */\n    tag_180:\n        /* \"#utility.yul\":8920:8923   */\n      0x00\n        /* \"#utility.yul\":8941:9008   */\n      tag_284\n        /* \"#utility.yul\":9005:9007   */\n      0x18\n        /* \"#utility.yul\":9000:9003   */\n      dup4\n        /* \"#utility.yul\":8941:9008   */\n      tag_172\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":8934:9008   */\n      swap2\n      pop\n        /* \"#utility.yul\":9017:9110   */\n      tag_285\n        /* \"#utility.yul\":9106:9109   */\n      dup3\n        /* \"#utility.yul\":9017:9110   */\n      tag_179\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":9135:9137   */\n      0x20\n        /* \"#utility.yul\":9130:9133   */\n      dup3\n        /* \"#utility.yul\":9126:9138   */\n      add\n        /* \"#utility.yul\":9119:9138   */\n      swap1\n      pop\n        /* \"#utility.yul\":8778:9144   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9150:9569   */\n    tag_93:\n        /* \"#utility.yul\":9316:9320   */\n      0x00\n        /* \"#utility.yul\":9354:9356   */\n      0x20\n        /* \"#utility.yul\":9343:9352   */\n      dup3\n        /* \"#utility.yul\":9339:9357   */\n      add\n        /* \"#utility.yul\":9331:9357   */\n      swap1\n      pop\n        /* \"#utility.yul\":9403:9412   */\n      dup2\n        /* \"#utility.yul\":9397:9401   */\n      dup2\n        /* \"#utility.yul\":9393:9413   */\n      sub\n        /* \"#utility.yul\":9389:9390   */\n      0x00\n        /* \"#utility.yul\":9378:9387   */\n      dup4\n        /* \"#utility.yul\":9374:9391   */\n      add\n        /* \"#utility.yul\":9367:9414   */\n      mstore\n        /* \"#utility.yul\":9431:9562   */\n      tag_287\n        /* \"#utility.yul\":9557:9561   */\n      dup2\n        /* \"#utility.yul\":9431:9562   */\n      tag_180\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":9423:9562   */\n      swap1\n      pop\n        /* \"#utility.yul\":9150:9569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9575:9693   */\n    tag_181:\n        /* \"#utility.yul\":9662:9686   */\n      tag_289\n        /* \"#utility.yul\":9680:9685   */\n      dup2\n        /* \"#utility.yul\":9662:9686   */\n      tag_166\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":9657:9660   */\n      dup3\n        /* \"#utility.yul\":9650:9687   */\n      mstore\n        /* \"#utility.yul\":9575:9693   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9699:10141   */\n    tag_103:\n        /* \"#utility.yul\":9848:9852   */\n      0x00\n        /* \"#utility.yul\":9886:9888   */\n      0x60\n        /* \"#utility.yul\":9875:9884   */\n      dup3\n        /* \"#utility.yul\":9871:9889   */\n      add\n        /* \"#utility.yul\":9863:9889   */\n      swap1\n      pop\n        /* \"#utility.yul\":9899:9970   */\n      tag_291\n        /* \"#utility.yul\":9967:9968   */\n      0x00\n        /* \"#utility.yul\":9956:9965   */\n      dup4\n        /* \"#utility.yul\":9952:9969   */\n      add\n        /* \"#utility.yul\":9943:9949   */\n      dup7\n        /* \"#utility.yul\":9899:9970   */\n      tag_181\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":9980:10052   */\n      tag_292\n        /* \"#utility.yul\":10048:10050   */\n      0x20\n        /* \"#utility.yul\":10037:10046   */\n      dup4\n        /* \"#utility.yul\":10033:10051   */\n      add\n        /* \"#utility.yul\":10024:10030   */\n      dup6\n        /* \"#utility.yul\":9980:10052   */\n      tag_181\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":10062:10134   */\n      tag_293\n        /* \"#utility.yul\":10130:10132   */\n      0x40\n        /* \"#utility.yul\":10119:10128   */\n      dup4\n        /* \"#utility.yul\":10115:10133   */\n      add\n        /* \"#utility.yul\":10106:10112   */\n      dup5\n        /* \"#utility.yul\":10062:10134   */\n      tag_159\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":9699:10141   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10147:10328   */\n    tag_182:\n        /* \"#utility.yul\":10287:10320   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":10283:10284   */\n      0x00\n        /* \"#utility.yul\":10275:10281   */\n      dup3\n        /* \"#utility.yul\":10271:10285   */\n      add\n        /* \"#utility.yul\":10264:10321   */\n      mstore\n        /* \"#utility.yul\":10147:10328   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10334:10700   */\n    tag_183:\n        /* \"#utility.yul\":10476:10479   */\n      0x00\n        /* \"#utility.yul\":10497:10564   */\n      tag_296\n        /* \"#utility.yul\":10561:10563   */\n      0x1f\n        /* \"#utility.yul\":10556:10559   */\n      dup4\n        /* \"#utility.yul\":10497:10564   */\n      tag_172\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":10490:10564   */\n      swap2\n      pop\n        /* \"#utility.yul\":10573:10666   */\n      tag_297\n        /* \"#utility.yul\":10662:10665   */\n      dup3\n        /* \"#utility.yul\":10573:10666   */\n      tag_182\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":10691:10693   */\n      0x20\n        /* \"#utility.yul\":10686:10689   */\n      dup3\n        /* \"#utility.yul\":10682:10694   */\n      add\n        /* \"#utility.yul\":10675:10694   */\n      swap1\n      pop\n        /* \"#utility.yul\":10334:10700   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10706:11125   */\n    tag_108:\n        /* \"#utility.yul\":10872:10876   */\n      0x00\n        /* \"#utility.yul\":10910:10912   */\n      0x20\n        /* \"#utility.yul\":10899:10908   */\n      dup3\n        /* \"#utility.yul\":10895:10913   */\n      add\n        /* \"#utility.yul\":10887:10913   */\n      swap1\n      pop\n        /* \"#utility.yul\":10959:10968   */\n      dup2\n        /* \"#utility.yul\":10953:10957   */\n      dup2\n        /* \"#utility.yul\":10949:10969   */\n      sub\n        /* \"#utility.yul\":10945:10946   */\n      0x00\n        /* \"#utility.yul\":10934:10943   */\n      dup4\n        /* \"#utility.yul\":10930:10947   */\n      add\n        /* \"#utility.yul\":10923:10970   */\n      mstore\n        /* \"#utility.yul\":10987:11118   */\n      tag_299\n        /* \"#utility.yul\":11113:11117   */\n      dup2\n        /* \"#utility.yul\":10987:11118   */\n      tag_183\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":10979:11118   */\n      swap1\n      pop\n        /* \"#utility.yul\":10706:11125   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11131:11541   */\n    tag_112:\n        /* \"#utility.yul\":11171:11178   */\n      0x00\n        /* \"#utility.yul\":11194:11214   */\n      tag_301\n        /* \"#utility.yul\":11212:11213   */\n      dup3\n        /* \"#utility.yul\":11194:11214   */\n      tag_156\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":11189:11214   */\n      swap2\n      pop\n        /* \"#utility.yul\":11228:11248   */\n      tag_302\n        /* \"#utility.yul\":11246:11247   */\n      dup4\n        /* \"#utility.yul\":11228:11248   */\n      tag_156\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":11223:11248   */\n      swap3\n      pop\n        /* \"#utility.yul\":11283:11284   */\n      dup3\n        /* \"#utility.yul\":11280:11281   */\n      dup3\n        /* \"#utility.yul\":11276:11285   */\n      mul\n        /* \"#utility.yul\":11305:11335   */\n      tag_303\n        /* \"#utility.yul\":11323:11334   */\n      dup2\n        /* \"#utility.yul\":11305:11335   */\n      tag_156\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":11294:11335   */\n      swap2\n      pop\n        /* \"#utility.yul\":11484:11485   */\n      dup3\n        /* \"#utility.yul\":11475:11482   */\n      dup3\n        /* \"#utility.yul\":11471:11486   */\n      div\n        /* \"#utility.yul\":11468:11469   */\n      dup5\n        /* \"#utility.yul\":11465:11487   */\n      eq\n        /* \"#utility.yul\":11445:11446   */\n      dup4\n        /* \"#utility.yul\":11438:11447   */\n      iszero\n        /* \"#utility.yul\":11418:11501   */\n      or\n        /* \"#utility.yul\":11395:11534   */\n      tag_304\n      jumpi\n        /* \"#utility.yul\":11514:11532   */\n      tag_305\n      tag_171\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":11395:11534   */\n    tag_304:\n        /* \"#utility.yul\":11179:11541   */\n      pop\n        /* \"#utility.yul\":11131:11541   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11547:11727   */\n    tag_184:\n        /* \"#utility.yul\":11595:11672   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11592:11593   */\n      0x00\n        /* \"#utility.yul\":11585:11673   */\n      mstore\n        /* \"#utility.yul\":11692:11696   */\n      0x12\n        /* \"#utility.yul\":11689:11690   */\n      0x04\n        /* \"#utility.yul\":11682:11697   */\n      mstore\n        /* \"#utility.yul\":11716:11720   */\n      0x24\n        /* \"#utility.yul\":11713:11714   */\n      0x00\n        /* \"#utility.yul\":11706:11721   */\n      revert\n        /* \"#utility.yul\":11733:11918   */\n    tag_114:\n        /* \"#utility.yul\":11773:11774   */\n      0x00\n        /* \"#utility.yul\":11790:11810   */\n      tag_308\n        /* \"#utility.yul\":11808:11809   */\n      dup3\n        /* \"#utility.yul\":11790:11810   */\n      tag_156\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":11785:11810   */\n      swap2\n      pop\n        /* \"#utility.yul\":11824:11844   */\n      tag_309\n        /* \"#utility.yul\":11842:11843   */\n      dup4\n        /* \"#utility.yul\":11824:11844   */\n      tag_156\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":11819:11844   */\n      swap3\n      pop\n        /* \"#utility.yul\":11863:11864   */\n      dup3\n        /* \"#utility.yul\":11853:11888   */\n      tag_310\n      jumpi\n        /* \"#utility.yul\":11868:11886   */\n      tag_311\n      tag_184\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":11853:11888   */\n    tag_310:\n        /* \"#utility.yul\":11910:11911   */\n      dup3\n        /* \"#utility.yul\":11907:11908   */\n      dup3\n        /* \"#utility.yul\":11903:11912   */\n      div\n        /* \"#utility.yul\":11898:11912   */\n      swap1\n      pop\n        /* \"#utility.yul\":11733:11918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11924:12256   */\n    tag_119:\n        /* \"#utility.yul\":12045:12049   */\n      0x00\n        /* \"#utility.yul\":12083:12085   */\n      0x40\n        /* \"#utility.yul\":12072:12081   */\n      dup3\n        /* \"#utility.yul\":12068:12086   */\n      add\n        /* \"#utility.yul\":12060:12086   */\n      swap1\n      pop\n        /* \"#utility.yul\":12096:12167   */\n      tag_313\n        /* \"#utility.yul\":12164:12165   */\n      0x00\n        /* \"#utility.yul\":12153:12162   */\n      dup4\n        /* \"#utility.yul\":12149:12166   */\n      add\n        /* \"#utility.yul\":12140:12146   */\n      dup6\n        /* \"#utility.yul\":12096:12167   */\n      tag_181\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":12177:12249   */\n      tag_314\n        /* \"#utility.yul\":12245:12247   */\n      0x20\n        /* \"#utility.yul\":12234:12243   */\n      dup4\n        /* \"#utility.yul\":12230:12248   */\n      add\n        /* \"#utility.yul\":12221:12227   */\n      dup5\n        /* \"#utility.yul\":12177:12249   */\n      tag_159\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":11924:12256   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12262:12378   */\n    tag_185:\n        /* \"#utility.yul\":12332:12353   */\n      tag_316\n        /* \"#utility.yul\":12347:12352   */\n      dup2\n        /* \"#utility.yul\":12332:12353   */\n      tag_169\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":12325:12330   */\n      dup2\n        /* \"#utility.yul\":12322:12354   */\n      eq\n        /* \"#utility.yul\":12312:12372   */\n      tag_317\n      jumpi\n        /* \"#utility.yul\":12368:12369   */\n      0x00\n        /* \"#utility.yul\":12365:12366   */\n      0x00\n        /* \"#utility.yul\":12358:12370   */\n      revert\n        /* \"#utility.yul\":12312:12372   */\n    tag_317:\n        /* \"#utility.yul\":12262:12378   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12384:12521   */\n    tag_186:\n        /* \"#utility.yul\":12438:12443   */\n      0x00\n        /* \"#utility.yul\":12469:12475   */\n      dup2\n        /* \"#utility.yul\":12463:12476   */\n      mload\n        /* \"#utility.yul\":12454:12476   */\n      swap1\n      pop\n        /* \"#utility.yul\":12485:12515   */\n      tag_319\n        /* \"#utility.yul\":12509:12514   */\n      dup2\n        /* \"#utility.yul\":12485:12515   */\n      tag_185\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":12384:12521   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12527:12872   */\n    tag_125:\n        /* \"#utility.yul\":12594:12600   */\n      0x00\n        /* \"#utility.yul\":12643:12645   */\n      0x20\n        /* \"#utility.yul\":12631:12640   */\n      dup3\n        /* \"#utility.yul\":12622:12629   */\n      dup5\n        /* \"#utility.yul\":12618:12641   */\n      sub\n        /* \"#utility.yul\":12614:12646   */\n      slt\n        /* \"#utility.yul\":12611:12730   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":12649:12728   */\n      tag_322\n      tag_154\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":12611:12730   */\n    tag_321:\n        /* \"#utility.yul\":12769:12770   */\n      0x00\n        /* \"#utility.yul\":12794:12855   */\n      tag_323\n        /* \"#utility.yul\":12847:12854   */\n      dup5\n        /* \"#utility.yul\":12838:12844   */\n      dup3\n        /* \"#utility.yul\":12827:12836   */\n      dup6\n        /* \"#utility.yul\":12823:12845   */\n      add\n        /* \"#utility.yul\":12794:12855   */\n      tag_186\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":12784:12855   */\n      swap2\n      pop\n        /* \"#utility.yul\":12740:12865   */\n      pop\n        /* \"#utility.yul\":12527:12872   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12878:13100   */\n    tag_128:\n        /* \"#utility.yul\":12971:12975   */\n      0x00\n        /* \"#utility.yul\":13009:13011   */\n      0x20\n        /* \"#utility.yul\":12998:13007   */\n      dup3\n        /* \"#utility.yul\":12994:13012   */\n      add\n        /* \"#utility.yul\":12986:13012   */\n      swap1\n      pop\n        /* \"#utility.yul\":13022:13093   */\n      tag_325\n        /* \"#utility.yul\":13090:13091   */\n      0x00\n        /* \"#utility.yul\":13079:13088   */\n      dup4\n        /* \"#utility.yul\":13075:13092   */\n      add\n        /* \"#utility.yul\":13066:13072   */\n      dup5\n        /* \"#utility.yul\":13022:13093   */\n      tag_181\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":12878:13100   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13106:13204   */\n    tag_187:\n        /* \"#utility.yul\":13157:13163   */\n      0x00\n        /* \"#utility.yul\":13191:13196   */\n      dup2\n        /* \"#utility.yul\":13185:13197   */\n      mload\n        /* \"#utility.yul\":13175:13197   */\n      swap1\n      pop\n        /* \"#utility.yul\":13106:13204   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13210:13357   */\n    tag_188:\n        /* \"#utility.yul\":13311:13322   */\n      0x00\n        /* \"#utility.yul\":13348:13351   */\n      dup2\n        /* \"#utility.yul\":13333:13351   */\n      swap1\n      pop\n        /* \"#utility.yul\":13210:13357   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13363:13502   */\n    tag_189:\n        /* \"#utility.yul\":13452:13458   */\n      dup3\n        /* \"#utility.yul\":13447:13450   */\n      dup2\n        /* \"#utility.yul\":13442:13445   */\n      dup4\n        /* \"#utility.yul\":13436:13459   */\n      mcopy\n        /* \"#utility.yul\":13493:13494   */\n      0x00\n        /* \"#utility.yul\":13484:13490   */\n      dup4\n        /* \"#utility.yul\":13479:13482   */\n      dup4\n        /* \"#utility.yul\":13475:13491   */\n      add\n        /* \"#utility.yul\":13468:13495   */\n      mstore\n        /* \"#utility.yul\":13363:13502   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13508:13894   */\n    tag_190:\n        /* \"#utility.yul\":13612:13615   */\n      0x00\n        /* \"#utility.yul\":13640:13678   */\n      tag_330\n        /* \"#utility.yul\":13672:13677   */\n      dup3\n        /* \"#utility.yul\":13640:13678   */\n      tag_187\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":13694:13782   */\n      tag_331\n        /* \"#utility.yul\":13775:13781   */\n      dup2\n        /* \"#utility.yul\":13770:13773   */\n      dup6\n        /* \"#utility.yul\":13694:13782   */\n      tag_188\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":13687:13782   */\n      swap4\n      pop\n        /* \"#utility.yul\":13791:13856   */\n      tag_332\n        /* \"#utility.yul\":13849:13855   */\n      dup2\n        /* \"#utility.yul\":13844:13847   */\n      dup6\n        /* \"#utility.yul\":13837:13841   */\n      0x20\n        /* \"#utility.yul\":13830:13835   */\n      dup7\n        /* \"#utility.yul\":13826:13842   */\n      add\n        /* \"#utility.yul\":13791:13856   */\n      tag_189\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":13881:13887   */\n      dup1\n        /* \"#utility.yul\":13876:13879   */\n      dup5\n        /* \"#utility.yul\":13872:13888   */\n      add\n        /* \"#utility.yul\":13865:13888   */\n      swap2\n      pop\n        /* \"#utility.yul\":13616:13894   */\n      pop\n        /* \"#utility.yul\":13508:13894   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13900:14171   */\n    tag_136:\n        /* \"#utility.yul\":14030:14033   */\n      0x00\n        /* \"#utility.yul\":14052:14145   */\n      tag_334\n        /* \"#utility.yul\":14141:14144   */\n      dup3\n        /* \"#utility.yul\":14132:14138   */\n      dup5\n        /* \"#utility.yul\":14052:14145   */\n      tag_190\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":14045:14145   */\n      swap2\n      pop\n        /* \"#utility.yul\":14162:14165   */\n      dup2\n        /* \"#utility.yul\":14155:14165   */\n      swap1\n      pop\n        /* \"#utility.yul\":13900:14171   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220088f596a1ca9ce215cedcd8a0bbde6017813c39aba47f7d652d4e4f3051ead4264736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_805": {
									"entryPoint": null,
									"id": 805,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$142_fromMemory": {
									"entryPoint": 282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$142t_contract$_IERC20_$142_fromMemory": {
									"entryPoint": 302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$142": {
									"entryPoint": 243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 191,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$142": {
									"entryPoint": 260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1583:6",
										"nodeType": "YulBlock",
										"src": "0:1583:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "627:51:6",
													"nodeType": "YulBlock",
													"src": "627:51:6",
													"statements": [
														{
															"nativeSrc": "637:35:6",
															"nodeType": "YulAssignment",
															"src": "637:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "666:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "648:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:6"
																},
																"nativeSrc": "648:24:6",
																"nodeType": "YulFunctionCall",
																"src": "648:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "637:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$142",
												"nativeSrc": "568:110:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "609:5:6",
														"nodeType": "YulTypedName",
														"src": "609:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "619:7:6",
														"nodeType": "YulTypedName",
														"src": "619:7:6",
														"type": ""
													}
												],
												"src": "568:110:6"
											},
											{
												"body": {
													"nativeSrc": "741:93:6",
													"nodeType": "YulBlock",
													"src": "741:93:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "812:16:6",
																"nodeType": "YulBlock",
																"src": "812:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:6",
																					"nodeType": "YulLiteral",
																					"src": "821:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "824:1:6",
																					"nodeType": "YulLiteral",
																					"src": "824:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "814:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:6"
																			},
																			"nativeSrc": "814:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "814:12:6"
																		},
																		"nativeSrc": "814:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "814:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "764:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "764:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "803:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "803:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$142",
																					"nativeSrc": "771:31:6",
																					"nodeType": "YulIdentifier",
																					"src": "771:31:6"
																				},
																				"nativeSrc": "771:38:6",
																				"nodeType": "YulFunctionCall",
																				"src": "771:38:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "761:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "761:2:6"
																		},
																		"nativeSrc": "761:49:6",
																		"nodeType": "YulFunctionCall",
																		"src": "761:49:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "754:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:6"
																},
																"nativeSrc": "754:57:6",
																"nodeType": "YulFunctionCall",
																"src": "754:57:6"
															},
															"nativeSrc": "751:77:6",
															"nodeType": "YulIf",
															"src": "751:77:6"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$142",
												"nativeSrc": "684:150:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "734:5:6",
														"nodeType": "YulTypedName",
														"src": "734:5:6",
														"type": ""
													}
												],
												"src": "684:150:6"
											},
											{
												"body": {
													"nativeSrc": "917:94:6",
													"nodeType": "YulBlock",
													"src": "917:94:6",
													"statements": [
														{
															"nativeSrc": "927:22:6",
															"nodeType": "YulAssignment",
															"src": "927:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "942:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "936:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:6"
																},
																"nativeSrc": "936:13:6",
																"nodeType": "YulFunctionCall",
																"src": "936:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "927:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "927:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "999:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "999:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$142",
																	"nativeSrc": "958:40:6",
																	"nodeType": "YulIdentifier",
																	"src": "958:40:6"
																},
																"nativeSrc": "958:47:6",
																"nodeType": "YulFunctionCall",
																"src": "958:47:6"
															},
															"nativeSrc": "958:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "958:47:6"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$142_fromMemory",
												"nativeSrc": "840:171:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "895:6:6",
														"nodeType": "YulTypedName",
														"src": "895:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "903:3:6",
														"nodeType": "YulTypedName",
														"src": "903:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "911:5:6",
														"nodeType": "YulTypedName",
														"src": "911:5:6",
														"type": ""
													}
												],
												"src": "840:171:6"
											},
											{
												"body": {
													"nativeSrc": "1139:441:6",
													"nodeType": "YulBlock",
													"src": "1139:441:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1185:83:6",
																"nodeType": "YulBlock",
																"src": "1185:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1187:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1187:77:6"
																			},
																			"nativeSrc": "1187:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1187:79:6"
																		},
																		"nativeSrc": "1187:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1187:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1160:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1160:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1169:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1169:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1156:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1156:3:6"
																		},
																		"nativeSrc": "1156:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1156:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1152:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1152:3:6"
																},
																"nativeSrc": "1152:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1152:32:6"
															},
															"nativeSrc": "1149:119:6",
															"nodeType": "YulIf",
															"src": "1149:119:6"
														},
														{
															"nativeSrc": "1278:142:6",
															"nodeType": "YulBlock",
															"src": "1278:142:6",
															"statements": [
																{
																	"nativeSrc": "1293:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1293:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1307:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1307:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1297:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1297:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1322:88:6",
																	"nodeType": "YulAssignment",
																	"src": "1322:88:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1382:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1382:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1393:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1393:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1378:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1378:3:6"
																				},
																				"nativeSrc": "1378:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1378:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1402:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1402:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$142_fromMemory",
																			"nativeSrc": "1332:45:6",
																			"nodeType": "YulIdentifier",
																			"src": "1332:45:6"
																		},
																		"nativeSrc": "1332:78:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1332:78:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1322:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1322:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1430:143:6",
															"nodeType": "YulBlock",
															"src": "1430:143:6",
															"statements": [
																{
																	"nativeSrc": "1445:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1445:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1459:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1459:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1449:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1449:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1475:88:6",
																	"nodeType": "YulAssignment",
																	"src": "1475:88:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1535:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1535:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1546:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1546:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1531:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1531:3:6"
																				},
																				"nativeSrc": "1531:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1531:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1555:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1555:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$142_fromMemory",
																			"nativeSrc": "1485:45:6",
																			"nodeType": "YulIdentifier",
																			"src": "1485:45:6"
																		},
																		"nativeSrc": "1485:78:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1485:78:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1475:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1475:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$142t_contract$_IERC20_$142_fromMemory",
												"nativeSrc": "1017:563:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1101:9:6",
														"nodeType": "YulTypedName",
														"src": "1101:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1112:7:6",
														"nodeType": "YulTypedName",
														"src": "1112:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1124:6:6",
														"nodeType": "YulTypedName",
														"src": "1124:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1132:6:6",
														"nodeType": "YulTypedName",
														"src": "1132:6:6",
														"type": ""
													}
												],
												"src": "1017:563:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$142(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$142(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$142(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$142_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$142(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$142t_contract$_IERC20_$142_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$142_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$142_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1492 CODESIZE SUB DUP1 PUSH2 0x1492 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x12E JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x16C JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEC DUP3 PUSH2 0xC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFD DUP3 PUSH2 0xE2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10D DUP2 PUSH2 0xF3 JUMP JUMPDEST DUP2 EQ PUSH2 0x117 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x128 DUP2 PUSH2 0x104 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x144 JUMPI PUSH2 0x143 PUSH2 0xBF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x151 DUP6 DUP3 DUP7 ADD PUSH2 0x11A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x162 DUP6 DUP3 DUP7 ADD PUSH2 0x11A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1319 DUP1 PUSH2 0x179 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x750142E6 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x750142E6 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x9168AE72 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x9AF01C2D EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0xA67E12A8 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xF985021A EQ PUSH2 0x20F JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x1D583E0D EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x3B7B6188 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x4AD84B34 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x733BDEF0 EQ PUSH2 0x11F JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xC32 JUMP JUMPDEST PUSH2 0x219 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDC SWAP2 SWAP1 PUSH2 0xC5D JUMP JUMPDEST PUSH2 0x29A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEB PUSH2 0x413 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0xCAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xD3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0xD91 JUMP JUMPDEST PUSH2 0x43E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xCAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xD91 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AB PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0xCAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0xD91 JUMP JUMPDEST PUSH2 0x532 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0xE19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F9 PUSH2 0x587 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0xD3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x217 PUSH2 0x5AC JUMP JUMPDEST STOP JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x22A SWAP2 SWAP1 PUSH2 0xE5F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0xE5F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x297 CALLER ADDRESS DUP4 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x828 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x8AA JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD EQ PUSH2 0x327 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31E SWAP1 PUSH2 0xEEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH0 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH9 0x3635C9ADC5DEA00000 DUP4 LT ISZERO DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x3B6 CALLER ADDRESS DUP6 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x828 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5AF417134F72A9D41143ACE85B0A26DCE6F550F894F2CBC1EEEE8810603D91B6 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3FE SWAP3 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x40F PUSH2 0x8F7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x5 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x60 ADD MLOAD SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH9 0x3635C9ADC5DEA00000 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x5B4 PUSH2 0x8AA JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD GT PUSH2 0x639 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x630 SWAP1 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP2 PUSH1 0x2 ADD SLOAD PUSH2 0x64D SWAP2 SWAP1 PUSH2 0xE5F JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x68F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x686 SWAP1 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x6AC DUP3 PUSH0 ADD SLOAD DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x6A7 SWAP2 SWAP1 PUSH2 0x1001 JUMP JUMPDEST PUSH2 0x900 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 SLOAD LT ISZERO PUSH2 0x6F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EA SWAP1 PUSH2 0x107E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x742 CALLER DUP4 PUSH0 ADD SLOAD PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x938 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x78E CALLER DUP3 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x938 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x79F SWAP2 SWAP1 PUSH2 0x1001 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF960DBF9E5D0682F7A298ED974E33A28B4464914B7A2BFAC12AE419A9AFEB280 DUP4 PUSH0 ADD SLOAD DUP4 PUSH1 0x40 MLOAD PUSH2 0x7F1 SWAP3 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP3 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH0 DUP3 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x826 PUSH2 0x8F7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x8A4 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x85D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x9B7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x8EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E5 SWAP1 PUSH2 0x112A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH3 0x278D00 DUP4 DUP6 PUSH2 0x912 SWAP2 SWAP1 PUSH2 0x1148 JUMP JUMPDEST PUSH2 0x91C SWAP2 SWAP1 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 SLOAD DUP2 GT ISZERO PUSH2 0x92E JUMPI PUSH1 0x4 SLOAD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9B2 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x96B SWAP3 SWAP2 SWAP1 PUSH2 0x11E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x9B7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9E1 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA4C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0xA05 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xA03 SWAP2 SWAP1 PUSH2 0x1237 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xA47 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3E SWAP2 SWAP1 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA59 DUP4 DUP4 PUSH0 PUSH2 0xA61 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0xAA8 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9F SWAP2 SWAP1 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xAD0 SWAP2 SWAP1 PUSH2 0x12CD JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xB0A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB0F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xB1F DUP7 DUP4 DUP4 PUSH2 0xB2A JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xB3F JUMPI PUSH2 0xB3A DUP3 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0xBAF JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0xB65 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xBA7 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9E SWAP2 SWAP1 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0xBB0 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0xBC9 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC11 DUP2 PUSH2 0xBFF JUMP JUMPDEST DUP2 EQ PUSH2 0xC1B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC2C DUP2 PUSH2 0xC08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC47 JUMPI PUSH2 0xC46 PUSH2 0xBFB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC54 DUP5 DUP3 DUP6 ADD PUSH2 0xC1E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC73 JUMPI PUSH2 0xC72 PUSH2 0xBFB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC80 DUP6 DUP3 DUP7 ADD PUSH2 0xC1E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC91 DUP6 DUP3 DUP7 ADD PUSH2 0xC1E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xCA4 DUP2 PUSH2 0xBFF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCBD PUSH0 DUP4 ADD DUP5 PUSH2 0xC9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD05 PUSH2 0xD00 PUSH2 0xCFB DUP5 PUSH2 0xCC3 JUMP JUMPDEST PUSH2 0xCE2 JUMP JUMPDEST PUSH2 0xCC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD16 DUP3 PUSH2 0xCEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD27 DUP3 PUSH2 0xD0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD37 DUP2 PUSH2 0xD1D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD50 PUSH0 DUP4 ADD DUP5 PUSH2 0xD2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD60 DUP3 PUSH2 0xCC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD70 DUP2 PUSH2 0xD56 JUMP JUMPDEST DUP2 EQ PUSH2 0xD7A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD8B DUP2 PUSH2 0xD67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDA6 JUMPI PUSH2 0xDA5 PUSH2 0xBFB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDB3 DUP5 DUP3 DUP6 ADD PUSH2 0xD7D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDD0 DUP2 PUSH2 0xDBC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xDE9 PUSH0 DUP4 ADD DUP8 PUSH2 0xC9B JUMP JUMPDEST PUSH2 0xDF6 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xC9B JUMP JUMPDEST PUSH2 0xE03 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xC9B JUMP JUMPDEST PUSH2 0xE10 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xDC7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE2C PUSH0 DUP4 ADD DUP5 PUSH2 0xDC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE69 DUP3 PUSH2 0xBFF JUMP JUMPDEST SWAP2 POP PUSH2 0xE74 DUP4 PUSH2 0xBFF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE8C JUMPI PUSH2 0xE8B PUSH2 0xE32 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C7265616479207374616B6564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xED6 PUSH1 0xE DUP4 PUSH2 0xE92 JUMP JUMPDEST SWAP2 POP PUSH2 0xEE1 DUP3 PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF03 DUP2 PUSH2 0xECA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF1D PUSH0 DUP4 ADD DUP6 PUSH2 0xC9B JUMP JUMPDEST PUSH2 0xF2A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC9B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E73207374616B656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF65 PUSH1 0x10 DUP4 PUSH2 0xE92 JUMP JUMPDEST SWAP2 POP PUSH2 0xF70 DUP3 PUSH2 0xF31 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF92 DUP2 PUSH2 0xF59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B696E6720706572696F64206E6F7420636F6D706C6574650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFCD PUSH1 0x1B DUP4 PUSH2 0xE92 JUMP JUMPDEST SWAP2 POP PUSH2 0xFD8 DUP3 PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFFA DUP2 PUSH2 0xFC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x100B DUP3 PUSH2 0xBFF JUMP JUMPDEST SWAP2 POP PUSH2 0x1016 DUP4 PUSH2 0xBFF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x102E JUMPI PUSH2 0x102D PUSH2 0xE32 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742072657761726420706F6F6C0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1068 PUSH1 0x18 DUP4 PUSH2 0xE92 JUMP JUMPDEST SWAP2 POP PUSH2 0x1073 DUP3 PUSH2 0x1034 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1095 DUP2 PUSH2 0x105C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10A5 DUP2 PUSH2 0xD56 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10BE PUSH0 DUP4 ADD DUP7 PUSH2 0x109C JUMP JUMPDEST PUSH2 0x10CB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x109C JUMP JUMPDEST PUSH2 0x10D8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC9B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1114 PUSH1 0x1F DUP4 PUSH2 0xE92 JUMP JUMPDEST SWAP2 POP PUSH2 0x111F DUP3 PUSH2 0x10E0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1141 DUP2 PUSH2 0x1108 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1152 DUP3 PUSH2 0xBFF JUMP JUMPDEST SWAP2 POP PUSH2 0x115D DUP4 PUSH2 0xBFF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x116B DUP2 PUSH2 0xBFF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1182 JUMPI PUSH2 0x1181 PUSH2 0xE32 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11C0 DUP3 PUSH2 0xBFF JUMP JUMPDEST SWAP2 POP PUSH2 0x11CB DUP4 PUSH2 0xBFF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x11DB JUMPI PUSH2 0x11DA PUSH2 0x1189 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x11F9 PUSH0 DUP4 ADD DUP6 PUSH2 0x109C JUMP JUMPDEST PUSH2 0x1206 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC9B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1216 DUP2 PUSH2 0xDBC JUMP JUMPDEST DUP2 EQ PUSH2 0x1220 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1231 DUP2 PUSH2 0x120D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x124C JUMPI PUSH2 0x124B PUSH2 0xBFB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1259 DUP5 DUP3 DUP6 ADD PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1275 PUSH0 DUP4 ADD DUP5 PUSH2 0x109C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12A7 DUP3 PUSH2 0x127B JUMP JUMPDEST PUSH2 0x12B1 DUP2 DUP6 PUSH2 0x1285 JUMP JUMPDEST SWAP4 POP PUSH2 0x12C1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x128F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12D8 DUP3 DUP5 PUSH2 0x129D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD DUP16 MSIZE PUSH11 0x1CA9CE215CEDCD8A0BBDE6 ADD PUSH25 0x13C39ABA47F7D652D4E4F3051EAD4264736F6C634300081B00 CALLER ",
							"sourceMap": "492:6596:5:-:0;;;2246:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:0;1821:7;:22;;;;2326:13:5;2311:12;;:28;;;;;;;;;;;;;;;;;;2363:12;2349:11;;:26;;;;;;;;;;;;;;;;;;2246:136;;492:6596;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:563::-;1124:6;1132;1181:2;1169:9;1160:7;1156:23;1152:32;1149:119;;;1187:79;;:::i;:::-;1149:119;1307:1;1332:78;1402:7;1393:6;1382:9;1378:22;1332:78;:::i;:::-;1322:88;;1278:142;1459:2;1485:78;1555:7;1546:6;1535:9;1531:22;1485:78;:::i;:::-;1475:88;;1430:143;1017:563;;;;;:::o;492:6596:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@PREMIUM_THRESHOLD_752": {
									"entryPoint": 1317,
									"id": 752,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_418": {
									"entryPoint": 2487,
									"id": 418,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_nonReentrantAfter_52": {
									"entryPoint": 2295,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_44": {
									"entryPoint": 2218,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_720": {
									"entryPoint": 2999,
									"id": 720,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@availableReward_746": {
									"entryPoint": 1043,
									"id": 746,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calculateReward_1031": {
									"entryPoint": 2304,
									"id": 1031,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionCallWithValue_588": {
									"entryPoint": 2657,
									"id": 588,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_542": {
									"entryPoint": 2636,
									"id": 542,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@fundRewardPool_832": {
									"entryPoint": 537,
									"id": 832,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getStakerInfo_1077": {
									"entryPoint": 1086,
									"id": 1077,
									"parameterSlots": 1,
									"returnSlots": 4
								},
								"@hasPremiumAccess_1045": {
									"entryPoint": 1330,
									"id": 1045,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@rewardToken_740": {
									"entryPoint": 1415,
									"id": 740,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_255": {
									"entryPoint": 2088,
									"id": 255,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_228": {
									"entryPoint": 2360,
									"id": 228,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@stakeTokens_905": {
									"entryPoint": 666,
									"id": 905,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stakers_768": {
									"entryPoint": 1261,
									"id": 768,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingToken_736": {
									"entryPoint": 1049,
									"id": 736,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalReward_743": {
									"entryPoint": 1255,
									"id": 743,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unstakeAndClaim_1000": {
									"entryPoint": 1452,
									"id": 1000,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_680": {
									"entryPoint": 2858,
									"id": 680,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 3165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack": {
									"entryPoint": 3374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_03d66f88b387025353c0b7c12d56a908fddc07af0740ccbc06cae83741b08055_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4267,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4582,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$142__to_t_address__fromStack_reversed": {
									"entryPoint": 3389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_03d66f88b387025353c0b7c12d56a908fddc07af0740ccbc06cae83741b08055__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3850,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 3542,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 4731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$142_to_t_address": {
									"entryPoint": 3357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4751,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 3298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3634,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4489,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3067,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_03d66f88b387025353c0b7c12d56a908fddc07af0740ccbc06cae83741b08055": {
									"entryPoint": 3993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b": {
									"entryPoint": 3889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8": {
									"entryPoint": 4148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04": {
									"entryPoint": 3746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 4320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14174:6",
										"nodeType": "YulBlock",
										"src": "0:14174:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:32:6",
													"nodeType": "YulBlock",
													"src": "379:32:6",
													"statements": [
														{
															"nativeSrc": "389:16:6",
															"nodeType": "YulAssignment",
															"src": "389:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:6",
																"nodeType": "YulIdentifier",
																"src": "400:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:77:6"
											},
											{
												"body": {
													"nativeSrc": "460:79:6",
													"nodeType": "YulBlock",
													"src": "460:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:6",
																"nodeType": "YulBlock",
																"src": "517:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:6",
																					"nodeType": "YulLiteral",
																					"src": "526:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:6",
																					"nodeType": "YulLiteral",
																					"src": "529:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:6"
																			},
																			"nativeSrc": "519:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:6"
																		},
																		"nativeSrc": "519:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:6"
																				},
																				"nativeSrc": "490:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:6"
																		},
																		"nativeSrc": "480:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:6"
																},
																"nativeSrc": "473:43:6",
																"nodeType": "YulFunctionCall",
																"src": "473:43:6"
															},
															"nativeSrc": "470:63:6",
															"nodeType": "YulIf",
															"src": "470:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:6",
														"nodeType": "YulTypedName",
														"src": "453:5:6",
														"type": ""
													}
												],
												"src": "417:122:6"
											},
											{
												"body": {
													"nativeSrc": "597:87:6",
													"nodeType": "YulBlock",
													"src": "597:87:6",
													"statements": [
														{
															"nativeSrc": "607:29:6",
															"nodeType": "YulAssignment",
															"src": "607:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:6"
																},
																"nativeSrc": "616:20:6",
																"nodeType": "YulFunctionCall",
																"src": "616:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:6"
																},
																"nativeSrc": "645:33:6",
																"nodeType": "YulFunctionCall",
																"src": "645:33:6"
															},
															"nativeSrc": "645:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:6",
														"nodeType": "YulTypedName",
														"src": "575:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:6",
														"nodeType": "YulTypedName",
														"src": "583:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:6",
														"nodeType": "YulTypedName",
														"src": "591:5:6",
														"type": ""
													}
												],
												"src": "545:139:6"
											},
											{
												"body": {
													"nativeSrc": "756:263:6",
													"nodeType": "YulBlock",
													"src": "756:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:6",
																"nodeType": "YulBlock",
																"src": "802:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:6"
																			},
																			"nativeSrc": "804:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:6"
																		},
																		"nativeSrc": "804:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:6"
																		},
																		"nativeSrc": "773:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:6",
																		"nodeType": "YulLiteral",
																		"src": "798:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:6"
																},
																"nativeSrc": "769:32:6",
																"nodeType": "YulFunctionCall",
																"src": "769:32:6"
															},
															"nativeSrc": "766:119:6",
															"nodeType": "YulIf",
															"src": "766:119:6"
														},
														{
															"nativeSrc": "895:117:6",
															"nodeType": "YulBlock",
															"src": "895:117:6",
															"statements": [
																{
																	"nativeSrc": "910:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:6",
																		"nodeType": "YulLiteral",
																		"src": "924:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:6",
																			"nodeType": "YulTypedName",
																			"src": "914:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:6",
																	"nodeType": "YulAssignment",
																	"src": "939:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:6"
																				},
																				"nativeSrc": "970:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:6"
																		},
																		"nativeSrc": "949:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:6",
														"nodeType": "YulTypedName",
														"src": "726:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:6",
														"nodeType": "YulTypedName",
														"src": "737:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:6",
														"nodeType": "YulTypedName",
														"src": "749:6:6",
														"type": ""
													}
												],
												"src": "690:329:6"
											},
											{
												"body": {
													"nativeSrc": "1108:391:6",
													"nodeType": "YulBlock",
													"src": "1108:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1154:83:6",
																"nodeType": "YulBlock",
																"src": "1154:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1156:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:6"
																			},
																			"nativeSrc": "1156:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:6"
																		},
																		"nativeSrc": "1156:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1129:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1138:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1125:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:6"
																		},
																		"nativeSrc": "1125:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1150:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1121:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:6"
																},
																"nativeSrc": "1121:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1121:32:6"
															},
															"nativeSrc": "1118:119:6",
															"nodeType": "YulIf",
															"src": "1118:119:6"
														},
														{
															"nativeSrc": "1247:117:6",
															"nodeType": "YulBlock",
															"src": "1247:117:6",
															"statements": [
																{
																	"nativeSrc": "1262:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1276:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1266:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1291:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1291:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1326:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1326:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1337:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1337:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1322:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1322:3:6"
																				},
																				"nativeSrc": "1322:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1322:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1346:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1346:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1301:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1301:20:6"
																		},
																		"nativeSrc": "1301:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1301:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1291:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1374:118:6",
															"nodeType": "YulBlock",
															"src": "1374:118:6",
															"statements": [
																{
																	"nativeSrc": "1389:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1389:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1403:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1403:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1393:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1393:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1419:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1419:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1454:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1454:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1465:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1465:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1450:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1450:3:6"
																				},
																				"nativeSrc": "1450:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1450:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1474:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1474:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1429:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1429:20:6"
																		},
																		"nativeSrc": "1429:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1429:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1419:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1419:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "1025:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1070:9:6",
														"nodeType": "YulTypedName",
														"src": "1070:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1081:7:6",
														"nodeType": "YulTypedName",
														"src": "1081:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1093:6:6",
														"nodeType": "YulTypedName",
														"src": "1093:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1101:6:6",
														"nodeType": "YulTypedName",
														"src": "1101:6:6",
														"type": ""
													}
												],
												"src": "1025:474:6"
											},
											{
												"body": {
													"nativeSrc": "1570:53:6",
													"nodeType": "YulBlock",
													"src": "1570:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1587:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1587:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1610:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1610:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1592:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "1592:17:6"
																		},
																		"nativeSrc": "1592:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1592:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1580:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1580:6:6"
																},
																"nativeSrc": "1580:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1580:37:6"
															},
															"nativeSrc": "1580:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "1580:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1505:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1558:5:6",
														"nodeType": "YulTypedName",
														"src": "1558:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1565:3:6",
														"nodeType": "YulTypedName",
														"src": "1565:3:6",
														"type": ""
													}
												],
												"src": "1505:118:6"
											},
											{
												"body": {
													"nativeSrc": "1727:124:6",
													"nodeType": "YulBlock",
													"src": "1727:124:6",
													"statements": [
														{
															"nativeSrc": "1737:26:6",
															"nodeType": "YulAssignment",
															"src": "1737:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1749:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1749:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1760:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1745:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1745:3:6"
																},
																"nativeSrc": "1745:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1745:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1737:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1737:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1817:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1817:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1830:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1830:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1841:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1841:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1826:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1826:3:6"
																		},
																		"nativeSrc": "1826:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1826:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1773:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1773:43:6"
																},
																"nativeSrc": "1773:71:6",
																"nodeType": "YulFunctionCall",
																"src": "1773:71:6"
															},
															"nativeSrc": "1773:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "1773:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1629:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1699:9:6",
														"nodeType": "YulTypedName",
														"src": "1699:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1711:6:6",
														"nodeType": "YulTypedName",
														"src": "1711:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1722:4:6",
														"nodeType": "YulTypedName",
														"src": "1722:4:6",
														"type": ""
													}
												],
												"src": "1629:222:6"
											},
											{
												"body": {
													"nativeSrc": "1902:81:6",
													"nodeType": "YulBlock",
													"src": "1902:81:6",
													"statements": [
														{
															"nativeSrc": "1912:65:6",
															"nodeType": "YulAssignment",
															"src": "1912:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1927:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1927:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1934:42:6",
																		"nodeType": "YulLiteral",
																		"src": "1934:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1923:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1923:3:6"
																},
																"nativeSrc": "1923:54:6",
																"nodeType": "YulFunctionCall",
																"src": "1923:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1912:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1912:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1857:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1884:5:6",
														"nodeType": "YulTypedName",
														"src": "1884:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1894:7:6",
														"nodeType": "YulTypedName",
														"src": "1894:7:6",
														"type": ""
													}
												],
												"src": "1857:126:6"
											},
											{
												"body": {
													"nativeSrc": "2021:28:6",
													"nodeType": "YulBlock",
													"src": "2021:28:6",
													"statements": [
														{
															"nativeSrc": "2031:12:6",
															"nodeType": "YulAssignment",
															"src": "2031:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "2038:5:6",
																"nodeType": "YulIdentifier",
																"src": "2038:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2031:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2031:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1989:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2007:5:6",
														"nodeType": "YulTypedName",
														"src": "2007:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2017:3:6",
														"nodeType": "YulTypedName",
														"src": "2017:3:6",
														"type": ""
													}
												],
												"src": "1989:60:6"
											},
											{
												"body": {
													"nativeSrc": "2115:82:6",
													"nodeType": "YulBlock",
													"src": "2115:82:6",
													"statements": [
														{
															"nativeSrc": "2125:66:6",
															"nodeType": "YulAssignment",
															"src": "2125:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2183:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2183:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2165:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2165:17:6"
																				},
																				"nativeSrc": "2165:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2165:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2156:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "2156:8:6"
																		},
																		"nativeSrc": "2156:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2156:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2138:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "2138:17:6"
																},
																"nativeSrc": "2138:53:6",
																"nodeType": "YulFunctionCall",
																"src": "2138:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2125:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2125:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2055:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2095:5:6",
														"nodeType": "YulTypedName",
														"src": "2095:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2105:9:6",
														"nodeType": "YulTypedName",
														"src": "2105:9:6",
														"type": ""
													}
												],
												"src": "2055:142:6"
											},
											{
												"body": {
													"nativeSrc": "2263:66:6",
													"nodeType": "YulBlock",
													"src": "2263:66:6",
													"statements": [
														{
															"nativeSrc": "2273:50:6",
															"nodeType": "YulAssignment",
															"src": "2273:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2317:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2317:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2286:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "2286:30:6"
																},
																"nativeSrc": "2286:37:6",
																"nodeType": "YulFunctionCall",
																"src": "2286:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2273:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2273:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2203:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2243:5:6",
														"nodeType": "YulTypedName",
														"src": "2243:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2253:9:6",
														"nodeType": "YulTypedName",
														"src": "2253:9:6",
														"type": ""
													}
												],
												"src": "2203:126:6"
											},
											{
												"body": {
													"nativeSrc": "2409:66:6",
													"nodeType": "YulBlock",
													"src": "2409:66:6",
													"statements": [
														{
															"nativeSrc": "2419:50:6",
															"nodeType": "YulAssignment",
															"src": "2419:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2463:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2463:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2432:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "2432:30:6"
																},
																"nativeSrc": "2432:37:6",
																"nodeType": "YulFunctionCall",
																"src": "2432:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2419:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2419:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$142_to_t_address",
												"nativeSrc": "2335:140:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2389:5:6",
														"nodeType": "YulTypedName",
														"src": "2389:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2399:9:6",
														"nodeType": "YulTypedName",
														"src": "2399:9:6",
														"type": ""
													}
												],
												"src": "2335:140:6"
											},
											{
												"body": {
													"nativeSrc": "2560:80:6",
													"nodeType": "YulBlock",
													"src": "2560:80:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2577:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2577:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2627:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2627:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$142_to_t_address",
																			"nativeSrc": "2582:44:6",
																			"nodeType": "YulIdentifier",
																			"src": "2582:44:6"
																		},
																		"nativeSrc": "2582:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2582:51:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2570:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2570:6:6"
																},
																"nativeSrc": "2570:64:6",
																"nodeType": "YulFunctionCall",
																"src": "2570:64:6"
															},
															"nativeSrc": "2570:64:6",
															"nodeType": "YulExpressionStatement",
															"src": "2570:64:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack",
												"nativeSrc": "2481:159:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2548:5:6",
														"nodeType": "YulTypedName",
														"src": "2548:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2555:3:6",
														"nodeType": "YulTypedName",
														"src": "2555:3:6",
														"type": ""
													}
												],
												"src": "2481:159:6"
											},
											{
												"body": {
													"nativeSrc": "2758:138:6",
													"nodeType": "YulBlock",
													"src": "2758:138:6",
													"statements": [
														{
															"nativeSrc": "2768:26:6",
															"nodeType": "YulAssignment",
															"src": "2768:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2780:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2780:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2791:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2791:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2776:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2776:3:6"
																},
																"nativeSrc": "2776:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2776:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2768:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2768:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2862:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2862:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2875:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2875:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2886:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2886:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2871:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2871:3:6"
																		},
																		"nativeSrc": "2871:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2871:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack",
																	"nativeSrc": "2804:57:6",
																	"nodeType": "YulIdentifier",
																	"src": "2804:57:6"
																},
																"nativeSrc": "2804:85:6",
																"nodeType": "YulFunctionCall",
																"src": "2804:85:6"
															},
															"nativeSrc": "2804:85:6",
															"nodeType": "YulExpressionStatement",
															"src": "2804:85:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$142__to_t_address__fromStack_reversed",
												"nativeSrc": "2646:250:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2730:9:6",
														"nodeType": "YulTypedName",
														"src": "2730:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2742:6:6",
														"nodeType": "YulTypedName",
														"src": "2742:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2753:4:6",
														"nodeType": "YulTypedName",
														"src": "2753:4:6",
														"type": ""
													}
												],
												"src": "2646:250:6"
											},
											{
												"body": {
													"nativeSrc": "2947:51:6",
													"nodeType": "YulBlock",
													"src": "2947:51:6",
													"statements": [
														{
															"nativeSrc": "2957:35:6",
															"nodeType": "YulAssignment",
															"src": "2957:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2986:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2986:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2968:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "2968:17:6"
																},
																"nativeSrc": "2968:24:6",
																"nodeType": "YulFunctionCall",
																"src": "2968:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2957:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2957:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2902:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2929:5:6",
														"nodeType": "YulTypedName",
														"src": "2929:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2939:7:6",
														"nodeType": "YulTypedName",
														"src": "2939:7:6",
														"type": ""
													}
												],
												"src": "2902:96:6"
											},
											{
												"body": {
													"nativeSrc": "3047:79:6",
													"nodeType": "YulBlock",
													"src": "3047:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3104:16:6",
																"nodeType": "YulBlock",
																"src": "3104:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3113:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3113:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3116:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3116:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3106:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3106:6:6"
																			},
																			"nativeSrc": "3106:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3106:12:6"
																		},
																		"nativeSrc": "3106:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3106:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3070:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3070:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3095:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3095:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3077:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "3077:17:6"
																				},
																				"nativeSrc": "3077:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3077:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3067:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3067:2:6"
																		},
																		"nativeSrc": "3067:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3067:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3060:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3060:6:6"
																},
																"nativeSrc": "3060:43:6",
																"nodeType": "YulFunctionCall",
																"src": "3060:43:6"
															},
															"nativeSrc": "3057:63:6",
															"nodeType": "YulIf",
															"src": "3057:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3004:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3040:5:6",
														"nodeType": "YulTypedName",
														"src": "3040:5:6",
														"type": ""
													}
												],
												"src": "3004:122:6"
											},
											{
												"body": {
													"nativeSrc": "3184:87:6",
													"nodeType": "YulBlock",
													"src": "3184:87:6",
													"statements": [
														{
															"nativeSrc": "3194:29:6",
															"nodeType": "YulAssignment",
															"src": "3194:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3216:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3216:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3203:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "3203:12:6"
																},
																"nativeSrc": "3203:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3203:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3194:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3194:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3259:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3259:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3232:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "3232:26:6"
																},
																"nativeSrc": "3232:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3232:33:6"
															},
															"nativeSrc": "3232:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "3232:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3132:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3162:6:6",
														"nodeType": "YulTypedName",
														"src": "3162:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3170:3:6",
														"nodeType": "YulTypedName",
														"src": "3170:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3178:5:6",
														"nodeType": "YulTypedName",
														"src": "3178:5:6",
														"type": ""
													}
												],
												"src": "3132:139:6"
											},
											{
												"body": {
													"nativeSrc": "3343:263:6",
													"nodeType": "YulBlock",
													"src": "3343:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3389:83:6",
																"nodeType": "YulBlock",
																"src": "3389:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3391:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3391:77:6"
																			},
																			"nativeSrc": "3391:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3391:79:6"
																		},
																		"nativeSrc": "3391:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3391:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3364:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3364:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3373:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3373:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3360:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3360:3:6"
																		},
																		"nativeSrc": "3360:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3360:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3385:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3385:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3356:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3356:3:6"
																},
																"nativeSrc": "3356:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3356:32:6"
															},
															"nativeSrc": "3353:119:6",
															"nodeType": "YulIf",
															"src": "3353:119:6"
														},
														{
															"nativeSrc": "3482:117:6",
															"nodeType": "YulBlock",
															"src": "3482:117:6",
															"statements": [
																{
																	"nativeSrc": "3497:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3497:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3511:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3511:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3501:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3501:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3526:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3526:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3561:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3561:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3572:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3572:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3557:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3557:3:6"
																				},
																				"nativeSrc": "3557:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3557:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3581:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3581:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3536:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3536:20:6"
																		},
																		"nativeSrc": "3536:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3536:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3526:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3526:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3277:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3313:9:6",
														"nodeType": "YulTypedName",
														"src": "3313:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3324:7:6",
														"nodeType": "YulTypedName",
														"src": "3324:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3336:6:6",
														"nodeType": "YulTypedName",
														"src": "3336:6:6",
														"type": ""
													}
												],
												"src": "3277:329:6"
											},
											{
												"body": {
													"nativeSrc": "3654:48:6",
													"nodeType": "YulBlock",
													"src": "3654:48:6",
													"statements": [
														{
															"nativeSrc": "3664:32:6",
															"nodeType": "YulAssignment",
															"src": "3664:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3689:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3689:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3682:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3682:6:6"
																		},
																		"nativeSrc": "3682:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3682:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3675:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3675:6:6"
																},
																"nativeSrc": "3675:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3675:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3664:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3664:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3612:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3636:5:6",
														"nodeType": "YulTypedName",
														"src": "3636:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3646:7:6",
														"nodeType": "YulTypedName",
														"src": "3646:7:6",
														"type": ""
													}
												],
												"src": "3612:90:6"
											},
											{
												"body": {
													"nativeSrc": "3767:50:6",
													"nodeType": "YulBlock",
													"src": "3767:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3784:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3784:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3804:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3804:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3789:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "3789:14:6"
																		},
																		"nativeSrc": "3789:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3789:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3777:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3777:6:6"
																},
																"nativeSrc": "3777:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3777:34:6"
															},
															"nativeSrc": "3777:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3777:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3708:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3755:5:6",
														"nodeType": "YulTypedName",
														"src": "3755:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3762:3:6",
														"nodeType": "YulTypedName",
														"src": "3762:3:6",
														"type": ""
													}
												],
												"src": "3708:109:6"
											},
											{
												"body": {
													"nativeSrc": "3999:365:6",
													"nodeType": "YulBlock",
													"src": "3999:365:6",
													"statements": [
														{
															"nativeSrc": "4009:27:6",
															"nodeType": "YulAssignment",
															"src": "4009:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4021:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4021:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4032:3:6",
																		"nodeType": "YulLiteral",
																		"src": "4032:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4017:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4017:3:6"
																},
																"nativeSrc": "4017:19:6",
																"nodeType": "YulFunctionCall",
																"src": "4017:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4009:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4009:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4090:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4090:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4103:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4103:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4114:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4114:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4099:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4099:3:6"
																		},
																		"nativeSrc": "4099:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4099:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4046:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "4046:43:6"
																},
																"nativeSrc": "4046:71:6",
																"nodeType": "YulFunctionCall",
																"src": "4046:71:6"
															},
															"nativeSrc": "4046:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "4046:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4171:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4171:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4184:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4184:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4195:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4195:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4180:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4180:3:6"
																		},
																		"nativeSrc": "4180:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4180:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4127:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "4127:43:6"
																},
																"nativeSrc": "4127:72:6",
																"nodeType": "YulFunctionCall",
																"src": "4127:72:6"
															},
															"nativeSrc": "4127:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "4127:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "4253:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4253:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4266:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4266:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4277:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4277:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4262:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4262:3:6"
																		},
																		"nativeSrc": "4262:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4262:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4209:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "4209:43:6"
																},
																"nativeSrc": "4209:72:6",
																"nodeType": "YulFunctionCall",
																"src": "4209:72:6"
															},
															"nativeSrc": "4209:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "4209:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "4329:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4329:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4342:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4342:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4353:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4353:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4338:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4338:3:6"
																		},
																		"nativeSrc": "4338:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4338:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "4291:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "4291:37:6"
																},
																"nativeSrc": "4291:66:6",
																"nodeType": "YulFunctionCall",
																"src": "4291:66:6"
															},
															"nativeSrc": "4291:66:6",
															"nodeType": "YulExpressionStatement",
															"src": "4291:66:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "3823:541:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3947:9:6",
														"nodeType": "YulTypedName",
														"src": "3947:9:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3959:6:6",
														"nodeType": "YulTypedName",
														"src": "3959:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3967:6:6",
														"nodeType": "YulTypedName",
														"src": "3967:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3975:6:6",
														"nodeType": "YulTypedName",
														"src": "3975:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3983:6:6",
														"nodeType": "YulTypedName",
														"src": "3983:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3994:4:6",
														"nodeType": "YulTypedName",
														"src": "3994:4:6",
														"type": ""
													}
												],
												"src": "3823:541:6"
											},
											{
												"body": {
													"nativeSrc": "4462:118:6",
													"nodeType": "YulBlock",
													"src": "4462:118:6",
													"statements": [
														{
															"nativeSrc": "4472:26:6",
															"nodeType": "YulAssignment",
															"src": "4472:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4484:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4484:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4495:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4495:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4480:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4480:3:6"
																},
																"nativeSrc": "4480:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4480:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4472:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4472:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4546:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4546:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4559:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4559:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4570:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4570:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4555:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4555:3:6"
																		},
																		"nativeSrc": "4555:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4555:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "4508:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "4508:37:6"
																},
																"nativeSrc": "4508:65:6",
																"nodeType": "YulFunctionCall",
																"src": "4508:65:6"
															},
															"nativeSrc": "4508:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "4508:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "4370:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4434:9:6",
														"nodeType": "YulTypedName",
														"src": "4434:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4446:6:6",
														"nodeType": "YulTypedName",
														"src": "4446:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4457:4:6",
														"nodeType": "YulTypedName",
														"src": "4457:4:6",
														"type": ""
													}
												],
												"src": "4370:210:6"
											},
											{
												"body": {
													"nativeSrc": "4614:152:6",
													"nodeType": "YulBlock",
													"src": "4614:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4631:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4634:77:6",
																		"nodeType": "YulLiteral",
																		"src": "4634:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4624:6:6"
																},
																"nativeSrc": "4624:88:6",
																"nodeType": "YulFunctionCall",
																"src": "4624:88:6"
															},
															"nativeSrc": "4624:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "4624:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4728:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4728:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4731:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4731:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4721:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4721:6:6"
																},
																"nativeSrc": "4721:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4721:15:6"
															},
															"nativeSrc": "4721:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4721:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4752:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4752:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4755:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4755:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4745:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4745:6:6"
																},
																"nativeSrc": "4745:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4745:15:6"
															},
															"nativeSrc": "4745:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4745:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4586:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4586:180:6"
											},
											{
												"body": {
													"nativeSrc": "4816:147:6",
													"nodeType": "YulBlock",
													"src": "4816:147:6",
													"statements": [
														{
															"nativeSrc": "4826:25:6",
															"nodeType": "YulAssignment",
															"src": "4826:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4849:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4849:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4831:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4831:17:6"
																},
																"nativeSrc": "4831:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4831:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4826:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4826:1:6"
																}
															]
														},
														{
															"nativeSrc": "4860:25:6",
															"nodeType": "YulAssignment",
															"src": "4860:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4883:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4883:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4865:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4865:17:6"
																},
																"nativeSrc": "4865:20:6",
																"nodeType": "YulFunctionCall",
																"src": "4865:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4860:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "4860:1:6"
																}
															]
														},
														{
															"nativeSrc": "4894:16:6",
															"nodeType": "YulAssignment",
															"src": "4894:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4905:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4905:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4908:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4908:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4901:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4901:3:6"
																},
																"nativeSrc": "4901:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4901:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4894:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4894:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4934:22:6",
																"nodeType": "YulBlock",
																"src": "4934:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4936:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "4936:16:6"
																			},
																			"nativeSrc": "4936:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4936:18:6"
																		},
																		"nativeSrc": "4936:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4936:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4926:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "4926:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4929:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4929:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4923:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4923:2:6"
																},
																"nativeSrc": "4923:10:6",
																"nodeType": "YulFunctionCall",
																"src": "4923:10:6"
															},
															"nativeSrc": "4920:36:6",
															"nodeType": "YulIf",
															"src": "4920:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4772:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4803:1:6",
														"nodeType": "YulTypedName",
														"src": "4803:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4806:1:6",
														"nodeType": "YulTypedName",
														"src": "4806:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4812:3:6",
														"nodeType": "YulTypedName",
														"src": "4812:3:6",
														"type": ""
													}
												],
												"src": "4772:191:6"
											},
											{
												"body": {
													"nativeSrc": "5065:73:6",
													"nodeType": "YulBlock",
													"src": "5065:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5082:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5082:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5087:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5087:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5075:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5075:6:6"
																},
																"nativeSrc": "5075:19:6",
																"nodeType": "YulFunctionCall",
																"src": "5075:19:6"
															},
															"nativeSrc": "5075:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "5075:19:6"
														},
														{
															"nativeSrc": "5103:29:6",
															"nodeType": "YulAssignment",
															"src": "5103:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5122:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5122:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5127:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5127:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5118:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5118:3:6"
																},
																"nativeSrc": "5118:14:6",
																"nodeType": "YulFunctionCall",
																"src": "5118:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5103:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "5103:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4969:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5037:3:6",
														"nodeType": "YulTypedName",
														"src": "5037:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5042:6:6",
														"nodeType": "YulTypedName",
														"src": "5042:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5053:11:6",
														"nodeType": "YulTypedName",
														"src": "5053:11:6",
														"type": ""
													}
												],
												"src": "4969:169:6"
											},
											{
												"body": {
													"nativeSrc": "5250:58:6",
													"nodeType": "YulBlock",
													"src": "5250:58:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5272:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5272:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5280:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5280:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5268:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5268:3:6"
																		},
																		"nativeSrc": "5268:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5268:14:6"
																	},
																	{
																		"hexValue": "416c7265616479207374616b6564",
																		"kind": "string",
																		"nativeSrc": "5284:16:6",
																		"nodeType": "YulLiteral",
																		"src": "5284:16:6",
																		"type": "",
																		"value": "Already staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5261:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5261:6:6"
																},
																"nativeSrc": "5261:40:6",
																"nodeType": "YulFunctionCall",
																"src": "5261:40:6"
															},
															"nativeSrc": "5261:40:6",
															"nodeType": "YulExpressionStatement",
															"src": "5261:40:6"
														}
													]
												},
												"name": "store_literal_in_memory_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04",
												"nativeSrc": "5144:164:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5242:6:6",
														"nodeType": "YulTypedName",
														"src": "5242:6:6",
														"type": ""
													}
												],
												"src": "5144:164:6"
											},
											{
												"body": {
													"nativeSrc": "5460:220:6",
													"nodeType": "YulBlock",
													"src": "5460:220:6",
													"statements": [
														{
															"nativeSrc": "5470:74:6",
															"nodeType": "YulAssignment",
															"src": "5470:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5536:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5536:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5541:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5541:2:6",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5477:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "5477:58:6"
																},
																"nativeSrc": "5477:67:6",
																"nodeType": "YulFunctionCall",
																"src": "5477:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5470:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5470:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5642:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5642:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04",
																	"nativeSrc": "5553:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "5553:88:6"
																},
																"nativeSrc": "5553:93:6",
																"nodeType": "YulFunctionCall",
																"src": "5553:93:6"
															},
															"nativeSrc": "5553:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "5553:93:6"
														},
														{
															"nativeSrc": "5655:19:6",
															"nodeType": "YulAssignment",
															"src": "5655:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5666:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5666:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5671:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5671:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5662:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5662:3:6"
																},
																"nativeSrc": "5662:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5662:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5655:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5655:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5314:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5448:3:6",
														"nodeType": "YulTypedName",
														"src": "5448:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5456:3:6",
														"nodeType": "YulTypedName",
														"src": "5456:3:6",
														"type": ""
													}
												],
												"src": "5314:366:6"
											},
											{
												"body": {
													"nativeSrc": "5857:248:6",
													"nodeType": "YulBlock",
													"src": "5857:248:6",
													"statements": [
														{
															"nativeSrc": "5867:26:6",
															"nodeType": "YulAssignment",
															"src": "5867:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5879:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5879:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5890:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5890:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5875:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5875:3:6"
																},
																"nativeSrc": "5875:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5875:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5867:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5867:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5914:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5914:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5925:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5925:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5910:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5910:3:6"
																		},
																		"nativeSrc": "5910:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5910:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5933:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5933:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5939:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5939:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5929:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5929:3:6"
																		},
																		"nativeSrc": "5929:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5929:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5903:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5903:6:6"
																},
																"nativeSrc": "5903:47:6",
																"nodeType": "YulFunctionCall",
																"src": "5903:47:6"
															},
															"nativeSrc": "5903:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "5903:47:6"
														},
														{
															"nativeSrc": "5959:139:6",
															"nodeType": "YulAssignment",
															"src": "5959:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6093:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6093:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5967:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "5967:124:6"
																},
																"nativeSrc": "5967:131:6",
																"nodeType": "YulFunctionCall",
																"src": "5967:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5959:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5959:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5686:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5837:9:6",
														"nodeType": "YulTypedName",
														"src": "5837:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5852:4:6",
														"nodeType": "YulTypedName",
														"src": "5852:4:6",
														"type": ""
													}
												],
												"src": "5686:419:6"
											},
											{
												"body": {
													"nativeSrc": "6237:206:6",
													"nodeType": "YulBlock",
													"src": "6237:206:6",
													"statements": [
														{
															"nativeSrc": "6247:26:6",
															"nodeType": "YulAssignment",
															"src": "6247:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6259:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6259:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6270:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6270:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6255:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6255:3:6"
																},
																"nativeSrc": "6255:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6255:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6247:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6247:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6327:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6327:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6340:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6340:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6351:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6351:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6336:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6336:3:6"
																		},
																		"nativeSrc": "6336:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6336:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6283:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6283:43:6"
																},
																"nativeSrc": "6283:71:6",
																"nodeType": "YulFunctionCall",
																"src": "6283:71:6"
															},
															"nativeSrc": "6283:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "6283:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6408:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6408:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6421:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6421:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6432:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6432:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6417:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6417:3:6"
																		},
																		"nativeSrc": "6417:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6417:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6364:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6364:43:6"
																},
																"nativeSrc": "6364:72:6",
																"nodeType": "YulFunctionCall",
																"src": "6364:72:6"
															},
															"nativeSrc": "6364:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "6364:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6111:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6201:9:6",
														"nodeType": "YulTypedName",
														"src": "6201:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6213:6:6",
														"nodeType": "YulTypedName",
														"src": "6213:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6221:6:6",
														"nodeType": "YulTypedName",
														"src": "6221:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6232:4:6",
														"nodeType": "YulTypedName",
														"src": "6232:4:6",
														"type": ""
													}
												],
												"src": "6111:332:6"
											},
											{
												"body": {
													"nativeSrc": "6555:60:6",
													"nodeType": "YulBlock",
													"src": "6555:60:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6577:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6577:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6585:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6585:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6573:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6573:3:6"
																		},
																		"nativeSrc": "6573:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6573:14:6"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e73207374616b6564",
																		"kind": "string",
																		"nativeSrc": "6589:18:6",
																		"nodeType": "YulLiteral",
																		"src": "6589:18:6",
																		"type": "",
																		"value": "No tokens staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6566:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6566:6:6"
																},
																"nativeSrc": "6566:42:6",
																"nodeType": "YulFunctionCall",
																"src": "6566:42:6"
															},
															"nativeSrc": "6566:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "6566:42:6"
														}
													]
												},
												"name": "store_literal_in_memory_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b",
												"nativeSrc": "6449:166:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6547:6:6",
														"nodeType": "YulTypedName",
														"src": "6547:6:6",
														"type": ""
													}
												],
												"src": "6449:166:6"
											},
											{
												"body": {
													"nativeSrc": "6767:220:6",
													"nodeType": "YulBlock",
													"src": "6767:220:6",
													"statements": [
														{
															"nativeSrc": "6777:74:6",
															"nodeType": "YulAssignment",
															"src": "6777:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6843:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6843:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6848:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6848:2:6",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6784:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "6784:58:6"
																},
																"nativeSrc": "6784:67:6",
																"nodeType": "YulFunctionCall",
																"src": "6784:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6777:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6777:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6949:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6949:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b",
																	"nativeSrc": "6860:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "6860:88:6"
																},
																"nativeSrc": "6860:93:6",
																"nodeType": "YulFunctionCall",
																"src": "6860:93:6"
															},
															"nativeSrc": "6860:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "6860:93:6"
														},
														{
															"nativeSrc": "6962:19:6",
															"nodeType": "YulAssignment",
															"src": "6962:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6973:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6973:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6978:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6978:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6969:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6969:3:6"
																},
																"nativeSrc": "6969:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6969:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6962:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6962:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6621:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6755:3:6",
														"nodeType": "YulTypedName",
														"src": "6755:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6763:3:6",
														"nodeType": "YulTypedName",
														"src": "6763:3:6",
														"type": ""
													}
												],
												"src": "6621:366:6"
											},
											{
												"body": {
													"nativeSrc": "7164:248:6",
													"nodeType": "YulBlock",
													"src": "7164:248:6",
													"statements": [
														{
															"nativeSrc": "7174:26:6",
															"nodeType": "YulAssignment",
															"src": "7174:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7186:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7186:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7197:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7197:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7182:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7182:3:6"
																},
																"nativeSrc": "7182:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7182:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7174:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7174:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7221:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7221:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7232:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7232:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7217:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7217:3:6"
																		},
																		"nativeSrc": "7217:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7217:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7240:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7240:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7246:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7246:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7236:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7236:3:6"
																		},
																		"nativeSrc": "7236:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7236:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7210:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7210:6:6"
																},
																"nativeSrc": "7210:47:6",
																"nodeType": "YulFunctionCall",
																"src": "7210:47:6"
															},
															"nativeSrc": "7210:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "7210:47:6"
														},
														{
															"nativeSrc": "7266:139:6",
															"nodeType": "YulAssignment",
															"src": "7266:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7400:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7400:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7274:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "7274:124:6"
																},
																"nativeSrc": "7274:131:6",
																"nodeType": "YulFunctionCall",
																"src": "7274:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7266:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7266:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6993:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7144:9:6",
														"nodeType": "YulTypedName",
														"src": "7144:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7159:4:6",
														"nodeType": "YulTypedName",
														"src": "7159:4:6",
														"type": ""
													}
												],
												"src": "6993:419:6"
											},
											{
												"body": {
													"nativeSrc": "7524:71:6",
													"nodeType": "YulBlock",
													"src": "7524:71:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7546:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7546:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7554:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7554:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7542:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7542:3:6"
																		},
																		"nativeSrc": "7542:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7542:14:6"
																	},
																	{
																		"hexValue": "5374616b696e6720706572696f64206e6f7420636f6d706c657465",
																		"kind": "string",
																		"nativeSrc": "7558:29:6",
																		"nodeType": "YulLiteral",
																		"src": "7558:29:6",
																		"type": "",
																		"value": "Staking period not complete"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7535:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7535:6:6"
																},
																"nativeSrc": "7535:53:6",
																"nodeType": "YulFunctionCall",
																"src": "7535:53:6"
															},
															"nativeSrc": "7535:53:6",
															"nodeType": "YulExpressionStatement",
															"src": "7535:53:6"
														}
													]
												},
												"name": "store_literal_in_memory_03d66f88b387025353c0b7c12d56a908fddc07af0740ccbc06cae83741b08055",
												"nativeSrc": "7418:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7516:6:6",
														"nodeType": "YulTypedName",
														"src": "7516:6:6",
														"type": ""
													}
												],
												"src": "7418:177:6"
											},
											{
												"body": {
													"nativeSrc": "7747:220:6",
													"nodeType": "YulBlock",
													"src": "7747:220:6",
													"statements": [
														{
															"nativeSrc": "7757:74:6",
															"nodeType": "YulAssignment",
															"src": "7757:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7823:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7823:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7828:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7828:2:6",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7764:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "7764:58:6"
																},
																"nativeSrc": "7764:67:6",
																"nodeType": "YulFunctionCall",
																"src": "7764:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7757:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7757:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7929:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7929:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_03d66f88b387025353c0b7c12d56a908fddc07af0740ccbc06cae83741b08055",
																	"nativeSrc": "7840:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "7840:88:6"
																},
																"nativeSrc": "7840:93:6",
																"nodeType": "YulFunctionCall",
																"src": "7840:93:6"
															},
															"nativeSrc": "7840:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "7840:93:6"
														},
														{
															"nativeSrc": "7942:19:6",
															"nodeType": "YulAssignment",
															"src": "7942:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7953:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7953:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7958:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7958:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7949:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7949:3:6"
																},
																"nativeSrc": "7949:12:6",
																"nodeType": "YulFunctionCall",
																"src": "7949:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7942:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7942:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_03d66f88b387025353c0b7c12d56a908fddc07af0740ccbc06cae83741b08055_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7601:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7735:3:6",
														"nodeType": "YulTypedName",
														"src": "7735:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7743:3:6",
														"nodeType": "YulTypedName",
														"src": "7743:3:6",
														"type": ""
													}
												],
												"src": "7601:366:6"
											},
											{
												"body": {
													"nativeSrc": "8144:248:6",
													"nodeType": "YulBlock",
													"src": "8144:248:6",
													"statements": [
														{
															"nativeSrc": "8154:26:6",
															"nodeType": "YulAssignment",
															"src": "8154:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8166:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8166:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8177:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8177:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8162:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8162:3:6"
																},
																"nativeSrc": "8162:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8162:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8154:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8154:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8201:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8201:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8212:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8212:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8197:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8197:3:6"
																		},
																		"nativeSrc": "8197:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8197:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8220:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8220:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8226:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8226:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8216:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8216:3:6"
																		},
																		"nativeSrc": "8216:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8216:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8190:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8190:6:6"
																},
																"nativeSrc": "8190:47:6",
																"nodeType": "YulFunctionCall",
																"src": "8190:47:6"
															},
															"nativeSrc": "8190:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "8190:47:6"
														},
														{
															"nativeSrc": "8246:139:6",
															"nodeType": "YulAssignment",
															"src": "8246:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8380:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8380:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_03d66f88b387025353c0b7c12d56a908fddc07af0740ccbc06cae83741b08055_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8254:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "8254:124:6"
																},
																"nativeSrc": "8254:131:6",
																"nodeType": "YulFunctionCall",
																"src": "8254:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8246:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8246:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_03d66f88b387025353c0b7c12d56a908fddc07af0740ccbc06cae83741b08055__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7973:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8124:9:6",
														"nodeType": "YulTypedName",
														"src": "8124:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8139:4:6",
														"nodeType": "YulTypedName",
														"src": "8139:4:6",
														"type": ""
													}
												],
												"src": "7973:419:6"
											},
											{
												"body": {
													"nativeSrc": "8443:149:6",
													"nodeType": "YulBlock",
													"src": "8443:149:6",
													"statements": [
														{
															"nativeSrc": "8453:25:6",
															"nodeType": "YulAssignment",
															"src": "8453:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8476:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8476:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8458:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8458:17:6"
																},
																"nativeSrc": "8458:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8458:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8453:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8453:1:6"
																}
															]
														},
														{
															"nativeSrc": "8487:25:6",
															"nodeType": "YulAssignment",
															"src": "8487:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8510:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8510:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8492:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8492:17:6"
																},
																"nativeSrc": "8492:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8492:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8487:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8487:1:6"
																}
															]
														},
														{
															"nativeSrc": "8521:17:6",
															"nodeType": "YulAssignment",
															"src": "8521:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8533:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8533:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8536:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8536:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8529:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8529:3:6"
																},
																"nativeSrc": "8529:9:6",
																"nodeType": "YulFunctionCall",
																"src": "8529:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8521:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8521:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8563:22:6",
																"nodeType": "YulBlock",
																"src": "8563:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8565:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "8565:16:6"
																			},
																			"nativeSrc": "8565:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8565:18:6"
																		},
																		"nativeSrc": "8565:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8565:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8554:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8554:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8560:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8560:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8551:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "8551:2:6"
																},
																"nativeSrc": "8551:11:6",
																"nodeType": "YulFunctionCall",
																"src": "8551:11:6"
															},
															"nativeSrc": "8548:37:6",
															"nodeType": "YulIf",
															"src": "8548:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8398:194:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8429:1:6",
														"nodeType": "YulTypedName",
														"src": "8429:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8432:1:6",
														"nodeType": "YulTypedName",
														"src": "8432:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8438:4:6",
														"nodeType": "YulTypedName",
														"src": "8438:4:6",
														"type": ""
													}
												],
												"src": "8398:194:6"
											},
											{
												"body": {
													"nativeSrc": "8704:68:6",
													"nodeType": "YulBlock",
													"src": "8704:68:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8726:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8726:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8734:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8734:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8722:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8722:3:6"
																		},
																		"nativeSrc": "8722:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8722:14:6"
																	},
																	{
																		"hexValue": "496e73756666696369656e742072657761726420706f6f6c",
																		"kind": "string",
																		"nativeSrc": "8738:26:6",
																		"nodeType": "YulLiteral",
																		"src": "8738:26:6",
																		"type": "",
																		"value": "Insufficient reward pool"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8715:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8715:6:6"
																},
																"nativeSrc": "8715:50:6",
																"nodeType": "YulFunctionCall",
																"src": "8715:50:6"
															},
															"nativeSrc": "8715:50:6",
															"nodeType": "YulExpressionStatement",
															"src": "8715:50:6"
														}
													]
												},
												"name": "store_literal_in_memory_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8",
												"nativeSrc": "8598:174:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8696:6:6",
														"nodeType": "YulTypedName",
														"src": "8696:6:6",
														"type": ""
													}
												],
												"src": "8598:174:6"
											},
											{
												"body": {
													"nativeSrc": "8924:220:6",
													"nodeType": "YulBlock",
													"src": "8924:220:6",
													"statements": [
														{
															"nativeSrc": "8934:74:6",
															"nodeType": "YulAssignment",
															"src": "8934:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9000:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9000:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9005:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9005:2:6",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8941:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "8941:58:6"
																},
																"nativeSrc": "8941:67:6",
																"nodeType": "YulFunctionCall",
																"src": "8941:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8934:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8934:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9106:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9106:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8",
																	"nativeSrc": "9017:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "9017:88:6"
																},
																"nativeSrc": "9017:93:6",
																"nodeType": "YulFunctionCall",
																"src": "9017:93:6"
															},
															"nativeSrc": "9017:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "9017:93:6"
														},
														{
															"nativeSrc": "9119:19:6",
															"nodeType": "YulAssignment",
															"src": "9119:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9130:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9130:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9135:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9135:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9126:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9126:3:6"
																},
																"nativeSrc": "9126:12:6",
																"nodeType": "YulFunctionCall",
																"src": "9126:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9119:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9119:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8778:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8912:3:6",
														"nodeType": "YulTypedName",
														"src": "8912:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8920:3:6",
														"nodeType": "YulTypedName",
														"src": "8920:3:6",
														"type": ""
													}
												],
												"src": "8778:366:6"
											},
											{
												"body": {
													"nativeSrc": "9321:248:6",
													"nodeType": "YulBlock",
													"src": "9321:248:6",
													"statements": [
														{
															"nativeSrc": "9331:26:6",
															"nodeType": "YulAssignment",
															"src": "9331:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9343:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9343:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9354:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9354:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9339:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9339:3:6"
																},
																"nativeSrc": "9339:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9339:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9331:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9331:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9378:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9378:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9389:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9389:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9374:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9374:3:6"
																		},
																		"nativeSrc": "9374:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9374:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9397:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9397:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9403:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9403:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9393:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9393:3:6"
																		},
																		"nativeSrc": "9393:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9393:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9367:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9367:6:6"
																},
																"nativeSrc": "9367:47:6",
																"nodeType": "YulFunctionCall",
																"src": "9367:47:6"
															},
															"nativeSrc": "9367:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "9367:47:6"
														},
														{
															"nativeSrc": "9423:139:6",
															"nodeType": "YulAssignment",
															"src": "9423:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9557:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9557:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9431:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "9431:124:6"
																},
																"nativeSrc": "9431:131:6",
																"nodeType": "YulFunctionCall",
																"src": "9431:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9423:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9423:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9150:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9301:9:6",
														"nodeType": "YulTypedName",
														"src": "9301:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9316:4:6",
														"nodeType": "YulTypedName",
														"src": "9316:4:6",
														"type": ""
													}
												],
												"src": "9150:419:6"
											},
											{
												"body": {
													"nativeSrc": "9640:53:6",
													"nodeType": "YulBlock",
													"src": "9640:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9657:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9657:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9680:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "9680:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9662:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "9662:17:6"
																		},
																		"nativeSrc": "9662:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9662:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9650:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9650:6:6"
																},
																"nativeSrc": "9650:37:6",
																"nodeType": "YulFunctionCall",
																"src": "9650:37:6"
															},
															"nativeSrc": "9650:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "9650:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9575:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9628:5:6",
														"nodeType": "YulTypedName",
														"src": "9628:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9635:3:6",
														"nodeType": "YulTypedName",
														"src": "9635:3:6",
														"type": ""
													}
												],
												"src": "9575:118:6"
											},
											{
												"body": {
													"nativeSrc": "9853:288:6",
													"nodeType": "YulBlock",
													"src": "9853:288:6",
													"statements": [
														{
															"nativeSrc": "9863:26:6",
															"nodeType": "YulAssignment",
															"src": "9863:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9875:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9875:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9886:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9886:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9871:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9871:3:6"
																},
																"nativeSrc": "9871:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9871:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9863:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9863:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9943:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9943:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9956:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9956:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9967:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9967:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9952:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9952:3:6"
																		},
																		"nativeSrc": "9952:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9952:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9899:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9899:43:6"
																},
																"nativeSrc": "9899:71:6",
																"nodeType": "YulFunctionCall",
																"src": "9899:71:6"
															},
															"nativeSrc": "9899:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "9899:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10024:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10024:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10037:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10037:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10048:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10048:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10033:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10033:3:6"
																		},
																		"nativeSrc": "10033:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10033:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9980:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9980:43:6"
																},
																"nativeSrc": "9980:72:6",
																"nodeType": "YulFunctionCall",
																"src": "9980:72:6"
															},
															"nativeSrc": "9980:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "9980:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10106:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10106:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10119:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10119:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10130:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10130:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10115:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10115:3:6"
																		},
																		"nativeSrc": "10115:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10115:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10062:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10062:43:6"
																},
																"nativeSrc": "10062:72:6",
																"nodeType": "YulFunctionCall",
																"src": "10062:72:6"
															},
															"nativeSrc": "10062:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "10062:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9699:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9809:9:6",
														"nodeType": "YulTypedName",
														"src": "9809:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9821:6:6",
														"nodeType": "YulTypedName",
														"src": "9821:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9829:6:6",
														"nodeType": "YulTypedName",
														"src": "9829:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9837:6:6",
														"nodeType": "YulTypedName",
														"src": "9837:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9848:4:6",
														"nodeType": "YulTypedName",
														"src": "9848:4:6",
														"type": ""
													}
												],
												"src": "9699:442:6"
											},
											{
												"body": {
													"nativeSrc": "10253:75:6",
													"nodeType": "YulBlock",
													"src": "10253:75:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10275:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10275:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10283:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10283:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10271:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10271:3:6"
																		},
																		"nativeSrc": "10271:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10271:14:6"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "10287:33:6",
																		"nodeType": "YulLiteral",
																		"src": "10287:33:6",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10264:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10264:6:6"
																},
																"nativeSrc": "10264:57:6",
																"nodeType": "YulFunctionCall",
																"src": "10264:57:6"
															},
															"nativeSrc": "10264:57:6",
															"nodeType": "YulExpressionStatement",
															"src": "10264:57:6"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "10147:181:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10245:6:6",
														"nodeType": "YulTypedName",
														"src": "10245:6:6",
														"type": ""
													}
												],
												"src": "10147:181:6"
											},
											{
												"body": {
													"nativeSrc": "10480:220:6",
													"nodeType": "YulBlock",
													"src": "10480:220:6",
													"statements": [
														{
															"nativeSrc": "10490:74:6",
															"nodeType": "YulAssignment",
															"src": "10490:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10556:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10556:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10561:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10561:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10497:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "10497:58:6"
																},
																"nativeSrc": "10497:67:6",
																"nodeType": "YulFunctionCall",
																"src": "10497:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10490:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10490:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10662:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10662:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "10573:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "10573:88:6"
																},
																"nativeSrc": "10573:93:6",
																"nodeType": "YulFunctionCall",
																"src": "10573:93:6"
															},
															"nativeSrc": "10573:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "10573:93:6"
														},
														{
															"nativeSrc": "10675:19:6",
															"nodeType": "YulAssignment",
															"src": "10675:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10686:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10686:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10691:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10691:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10682:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10682:3:6"
																},
																"nativeSrc": "10682:12:6",
																"nodeType": "YulFunctionCall",
																"src": "10682:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10675:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10675:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10334:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10468:3:6",
														"nodeType": "YulTypedName",
														"src": "10468:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10476:3:6",
														"nodeType": "YulTypedName",
														"src": "10476:3:6",
														"type": ""
													}
												],
												"src": "10334:366:6"
											},
											{
												"body": {
													"nativeSrc": "10877:248:6",
													"nodeType": "YulBlock",
													"src": "10877:248:6",
													"statements": [
														{
															"nativeSrc": "10887:26:6",
															"nodeType": "YulAssignment",
															"src": "10887:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10899:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10899:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10910:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10910:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10895:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10895:3:6"
																},
																"nativeSrc": "10895:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10895:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10887:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10887:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10934:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10934:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10945:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10945:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10930:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10930:3:6"
																		},
																		"nativeSrc": "10930:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10930:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10953:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "10953:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10959:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10959:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10949:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10949:3:6"
																		},
																		"nativeSrc": "10949:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10949:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10923:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10923:6:6"
																},
																"nativeSrc": "10923:47:6",
																"nodeType": "YulFunctionCall",
																"src": "10923:47:6"
															},
															"nativeSrc": "10923:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "10923:47:6"
														},
														{
															"nativeSrc": "10979:139:6",
															"nodeType": "YulAssignment",
															"src": "10979:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11113:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11113:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10987:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "10987:124:6"
																},
																"nativeSrc": "10987:131:6",
																"nodeType": "YulFunctionCall",
																"src": "10987:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10979:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10979:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10706:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10857:9:6",
														"nodeType": "YulTypedName",
														"src": "10857:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10872:4:6",
														"nodeType": "YulTypedName",
														"src": "10872:4:6",
														"type": ""
													}
												],
												"src": "10706:419:6"
											},
											{
												"body": {
													"nativeSrc": "11179:362:6",
													"nodeType": "YulBlock",
													"src": "11179:362:6",
													"statements": [
														{
															"nativeSrc": "11189:25:6",
															"nodeType": "YulAssignment",
															"src": "11189:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11212:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11212:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11194:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11194:17:6"
																},
																"nativeSrc": "11194:20:6",
																"nodeType": "YulFunctionCall",
																"src": "11194:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11189:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "11189:1:6"
																}
															]
														},
														{
															"nativeSrc": "11223:25:6",
															"nodeType": "YulAssignment",
															"src": "11223:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11246:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11246:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11228:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11228:17:6"
																},
																"nativeSrc": "11228:20:6",
																"nodeType": "YulFunctionCall",
																"src": "11228:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11223:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "11223:1:6"
																}
															]
														},
														{
															"nativeSrc": "11257:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "11257:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11280:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11280:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11283:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11283:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11276:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11276:3:6"
																},
																"nativeSrc": "11276:9:6",
																"nodeType": "YulFunctionCall",
																"src": "11276:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "11261:11:6",
																	"nodeType": "YulTypedName",
																	"src": "11261:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11294:41:6",
															"nodeType": "YulAssignment",
															"src": "11294:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "11323:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "11323:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11305:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11305:17:6"
																},
																"nativeSrc": "11305:30:6",
																"nodeType": "YulFunctionCall",
																"src": "11305:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "11294:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "11294:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11512:22:6",
																"nodeType": "YulBlock",
																"src": "11512:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11514:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "11514:16:6"
																			},
																			"nativeSrc": "11514:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11514:18:6"
																		},
																		"nativeSrc": "11514:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "11514:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "11445:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "11445:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "11438:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "11438:6:6"
																				},
																				"nativeSrc": "11438:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "11438:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "11468:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "11468:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "11475:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "11475:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "11484:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "11484:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "11471:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "11471:3:6"
																						},
																						"nativeSrc": "11471:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "11471:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "11465:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "11465:2:6"
																				},
																				"nativeSrc": "11465:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "11465:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "11418:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "11418:2:6"
																		},
																		"nativeSrc": "11418:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11418:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11398:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11398:6:6"
																},
																"nativeSrc": "11398:113:6",
																"nodeType": "YulFunctionCall",
																"src": "11398:113:6"
															},
															"nativeSrc": "11395:139:6",
															"nodeType": "YulIf",
															"src": "11395:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "11131:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11162:1:6",
														"nodeType": "YulTypedName",
														"src": "11162:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11165:1:6",
														"nodeType": "YulTypedName",
														"src": "11165:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "11171:7:6",
														"nodeType": "YulTypedName",
														"src": "11171:7:6",
														"type": ""
													}
												],
												"src": "11131:410:6"
											},
											{
												"body": {
													"nativeSrc": "11575:152:6",
													"nodeType": "YulBlock",
													"src": "11575:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11592:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11592:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11595:77:6",
																		"nodeType": "YulLiteral",
																		"src": "11595:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11585:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11585:6:6"
																},
																"nativeSrc": "11585:88:6",
																"nodeType": "YulFunctionCall",
																"src": "11585:88:6"
															},
															"nativeSrc": "11585:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "11585:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11689:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11689:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11692:4:6",
																		"nodeType": "YulLiteral",
																		"src": "11692:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11682:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11682:6:6"
																},
																"nativeSrc": "11682:15:6",
																"nodeType": "YulFunctionCall",
																"src": "11682:15:6"
															},
															"nativeSrc": "11682:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "11682:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11713:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11713:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11716:4:6",
																		"nodeType": "YulLiteral",
																		"src": "11716:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11706:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11706:6:6"
																},
																"nativeSrc": "11706:15:6",
																"nodeType": "YulFunctionCall",
																"src": "11706:15:6"
															},
															"nativeSrc": "11706:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "11706:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "11547:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "11547:180:6"
											},
											{
												"body": {
													"nativeSrc": "11775:143:6",
													"nodeType": "YulBlock",
													"src": "11775:143:6",
													"statements": [
														{
															"nativeSrc": "11785:25:6",
															"nodeType": "YulAssignment",
															"src": "11785:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11808:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11808:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11790:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11790:17:6"
																},
																"nativeSrc": "11790:20:6",
																"nodeType": "YulFunctionCall",
																"src": "11790:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11785:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "11785:1:6"
																}
															]
														},
														{
															"nativeSrc": "11819:25:6",
															"nodeType": "YulAssignment",
															"src": "11819:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11842:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11842:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11824:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11824:17:6"
																},
																"nativeSrc": "11824:20:6",
																"nodeType": "YulFunctionCall",
																"src": "11824:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11819:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "11819:1:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11866:22:6",
																"nodeType": "YulBlock",
																"src": "11866:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "11868:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "11868:16:6"
																			},
																			"nativeSrc": "11868:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11868:18:6"
																		},
																		"nativeSrc": "11868:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "11868:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11863:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11863:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11856:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11856:6:6"
																},
																"nativeSrc": "11856:9:6",
																"nodeType": "YulFunctionCall",
																"src": "11856:9:6"
															},
															"nativeSrc": "11853:35:6",
															"nodeType": "YulIf",
															"src": "11853:35:6"
														},
														{
															"nativeSrc": "11898:14:6",
															"nodeType": "YulAssignment",
															"src": "11898:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11907:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11907:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11910:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "11910:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11903:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11903:3:6"
																},
																"nativeSrc": "11903:9:6",
																"nodeType": "YulFunctionCall",
																"src": "11903:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "11898:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "11898:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "11733:185:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11764:1:6",
														"nodeType": "YulTypedName",
														"src": "11764:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11767:1:6",
														"nodeType": "YulTypedName",
														"src": "11767:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "11773:1:6",
														"nodeType": "YulTypedName",
														"src": "11773:1:6",
														"type": ""
													}
												],
												"src": "11733:185:6"
											},
											{
												"body": {
													"nativeSrc": "12050:206:6",
													"nodeType": "YulBlock",
													"src": "12050:206:6",
													"statements": [
														{
															"nativeSrc": "12060:26:6",
															"nodeType": "YulAssignment",
															"src": "12060:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12072:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "12072:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12083:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12083:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12068:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12068:3:6"
																},
																"nativeSrc": "12068:18:6",
																"nodeType": "YulFunctionCall",
																"src": "12068:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12060:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12060:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12140:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12140:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12153:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12153:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12164:1:6",
																				"nodeType": "YulLiteral",
																				"src": "12164:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12149:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12149:3:6"
																		},
																		"nativeSrc": "12149:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12149:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12096:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "12096:43:6"
																},
																"nativeSrc": "12096:71:6",
																"nodeType": "YulFunctionCall",
																"src": "12096:71:6"
															},
															"nativeSrc": "12096:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "12096:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12221:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12221:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12234:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12234:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12245:2:6",
																				"nodeType": "YulLiteral",
																				"src": "12245:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12230:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12230:3:6"
																		},
																		"nativeSrc": "12230:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12230:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12177:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "12177:43:6"
																},
																"nativeSrc": "12177:72:6",
																"nodeType": "YulFunctionCall",
																"src": "12177:72:6"
															},
															"nativeSrc": "12177:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "12177:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11924:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12014:9:6",
														"nodeType": "YulTypedName",
														"src": "12014:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12026:6:6",
														"nodeType": "YulTypedName",
														"src": "12026:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12034:6:6",
														"nodeType": "YulTypedName",
														"src": "12034:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12045:4:6",
														"nodeType": "YulTypedName",
														"src": "12045:4:6",
														"type": ""
													}
												],
												"src": "11924:332:6"
											},
											{
												"body": {
													"nativeSrc": "12302:76:6",
													"nodeType": "YulBlock",
													"src": "12302:76:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "12356:16:6",
																"nodeType": "YulBlock",
																"src": "12356:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12365:1:6",
																					"nodeType": "YulLiteral",
																					"src": "12365:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12368:1:6",
																					"nodeType": "YulLiteral",
																					"src": "12368:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12358:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "12358:6:6"
																			},
																			"nativeSrc": "12358:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "12358:12:6"
																		},
																		"nativeSrc": "12358:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "12358:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12325:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "12325:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12347:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "12347:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "12332:14:6",
																					"nodeType": "YulIdentifier",
																					"src": "12332:14:6"
																				},
																				"nativeSrc": "12332:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "12332:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12322:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "12322:2:6"
																		},
																		"nativeSrc": "12322:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12322:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12315:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12315:6:6"
																},
																"nativeSrc": "12315:40:6",
																"nodeType": "YulFunctionCall",
																"src": "12315:40:6"
															},
															"nativeSrc": "12312:60:6",
															"nodeType": "YulIf",
															"src": "12312:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "12262:116:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12295:5:6",
														"nodeType": "YulTypedName",
														"src": "12295:5:6",
														"type": ""
													}
												],
												"src": "12262:116:6"
											},
											{
												"body": {
													"nativeSrc": "12444:77:6",
													"nodeType": "YulBlock",
													"src": "12444:77:6",
													"statements": [
														{
															"nativeSrc": "12454:22:6",
															"nodeType": "YulAssignment",
															"src": "12454:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12469:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12469:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12463:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "12463:5:6"
																},
																"nativeSrc": "12463:13:6",
																"nodeType": "YulFunctionCall",
																"src": "12463:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12454:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "12454:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12509:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "12509:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "12485:23:6",
																	"nodeType": "YulIdentifier",
																	"src": "12485:23:6"
																},
																"nativeSrc": "12485:30:6",
																"nodeType": "YulFunctionCall",
																"src": "12485:30:6"
															},
															"nativeSrc": "12485:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "12485:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "12384:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12422:6:6",
														"nodeType": "YulTypedName",
														"src": "12422:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12430:3:6",
														"nodeType": "YulTypedName",
														"src": "12430:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12438:5:6",
														"nodeType": "YulTypedName",
														"src": "12438:5:6",
														"type": ""
													}
												],
												"src": "12384:137:6"
											},
											{
												"body": {
													"nativeSrc": "12601:271:6",
													"nodeType": "YulBlock",
													"src": "12601:271:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "12647:83:6",
																"nodeType": "YulBlock",
																"src": "12647:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12649:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "12649:77:6"
																			},
																			"nativeSrc": "12649:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "12649:79:6"
																		},
																		"nativeSrc": "12649:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "12649:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12622:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "12622:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12631:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12631:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12618:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12618:3:6"
																		},
																		"nativeSrc": "12618:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12618:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12643:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12643:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12614:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12614:3:6"
																},
																"nativeSrc": "12614:32:6",
																"nodeType": "YulFunctionCall",
																"src": "12614:32:6"
															},
															"nativeSrc": "12611:119:6",
															"nodeType": "YulIf",
															"src": "12611:119:6"
														},
														{
															"nativeSrc": "12740:125:6",
															"nodeType": "YulBlock",
															"src": "12740:125:6",
															"statements": [
																{
																	"nativeSrc": "12755:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12755:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12769:1:6",
																		"nodeType": "YulLiteral",
																		"src": "12769:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12759:6:6",
																			"nodeType": "YulTypedName",
																			"src": "12759:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12784:71:6",
																	"nodeType": "YulAssignment",
																	"src": "12784:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12827:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "12827:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12838:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "12838:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12823:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "12823:3:6"
																				},
																				"nativeSrc": "12823:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "12823:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12847:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "12847:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "12794:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "12794:28:6"
																		},
																		"nativeSrc": "12794:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12794:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12784:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "12784:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "12527:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12571:9:6",
														"nodeType": "YulTypedName",
														"src": "12571:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12582:7:6",
														"nodeType": "YulTypedName",
														"src": "12582:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12594:6:6",
														"nodeType": "YulTypedName",
														"src": "12594:6:6",
														"type": ""
													}
												],
												"src": "12527:345:6"
											},
											{
												"body": {
													"nativeSrc": "12976:124:6",
													"nodeType": "YulBlock",
													"src": "12976:124:6",
													"statements": [
														{
															"nativeSrc": "12986:26:6",
															"nodeType": "YulAssignment",
															"src": "12986:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12998:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "12998:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13009:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13009:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12994:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12994:3:6"
																},
																"nativeSrc": "12994:18:6",
																"nodeType": "YulFunctionCall",
																"src": "12994:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12986:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12986:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13066:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13066:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13079:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13079:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13090:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13090:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13075:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13075:3:6"
																		},
																		"nativeSrc": "13075:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13075:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13022:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13022:43:6"
																},
																"nativeSrc": "13022:71:6",
																"nodeType": "YulFunctionCall",
																"src": "13022:71:6"
															},
															"nativeSrc": "13022:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "13022:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "12878:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12948:9:6",
														"nodeType": "YulTypedName",
														"src": "12948:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12960:6:6",
														"nodeType": "YulTypedName",
														"src": "12960:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12971:4:6",
														"nodeType": "YulTypedName",
														"src": "12971:4:6",
														"type": ""
													}
												],
												"src": "12878:222:6"
											},
											{
												"body": {
													"nativeSrc": "13164:40:6",
													"nodeType": "YulBlock",
													"src": "13164:40:6",
													"statements": [
														{
															"nativeSrc": "13175:22:6",
															"nodeType": "YulAssignment",
															"src": "13175:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13191:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "13191:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13185:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "13185:5:6"
																},
																"nativeSrc": "13185:12:6",
																"nodeType": "YulFunctionCall",
																"src": "13185:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "13175:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13175:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "13106:98:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13147:5:6",
														"nodeType": "YulTypedName",
														"src": "13147:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "13157:6:6",
														"nodeType": "YulTypedName",
														"src": "13157:6:6",
														"type": ""
													}
												],
												"src": "13106:98:6"
											},
											{
												"body": {
													"nativeSrc": "13323:34:6",
													"nodeType": "YulBlock",
													"src": "13323:34:6",
													"statements": [
														{
															"nativeSrc": "13333:18:6",
															"nodeType": "YulAssignment",
															"src": "13333:18:6",
															"value": {
																"name": "pos",
																"nativeSrc": "13348:3:6",
																"nodeType": "YulIdentifier",
																"src": "13348:3:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "13333:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "13333:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "13210:147:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13295:3:6",
														"nodeType": "YulTypedName",
														"src": "13295:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "13300:6:6",
														"nodeType": "YulTypedName",
														"src": "13300:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "13311:11:6",
														"nodeType": "YulTypedName",
														"src": "13311:11:6",
														"type": ""
													}
												],
												"src": "13210:147:6"
											},
											{
												"body": {
													"nativeSrc": "13425:77:6",
													"nodeType": "YulBlock",
													"src": "13425:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "13442:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13442:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "13447:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13447:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13452:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13452:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "13436:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "13436:5:6"
																},
																"nativeSrc": "13436:23:6",
																"nodeType": "YulFunctionCall",
																"src": "13436:23:6"
															},
															"nativeSrc": "13436:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "13436:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "13479:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "13479:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "13484:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "13484:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13475:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13475:3:6"
																		},
																		"nativeSrc": "13475:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13475:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13493:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13493:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13468:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13468:6:6"
																},
																"nativeSrc": "13468:27:6",
																"nodeType": "YulFunctionCall",
																"src": "13468:27:6"
															},
															"nativeSrc": "13468:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "13468:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "13363:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "13407:3:6",
														"nodeType": "YulTypedName",
														"src": "13407:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "13412:3:6",
														"nodeType": "YulTypedName",
														"src": "13412:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "13417:6:6",
														"nodeType": "YulTypedName",
														"src": "13417:6:6",
														"type": ""
													}
												],
												"src": "13363:139:6"
											},
											{
												"body": {
													"nativeSrc": "13616:278:6",
													"nodeType": "YulBlock",
													"src": "13616:278:6",
													"statements": [
														{
															"nativeSrc": "13626:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "13626:52:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13672:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "13672:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "13640:31:6",
																	"nodeType": "YulIdentifier",
																	"src": "13640:31:6"
																},
																"nativeSrc": "13640:38:6",
																"nodeType": "YulFunctionCall",
																"src": "13640:38:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13630:6:6",
																	"nodeType": "YulTypedName",
																	"src": "13630:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13687:95:6",
															"nodeType": "YulAssignment",
															"src": "13687:95:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13770:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13770:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13775:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13775:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13694:75:6",
																	"nodeType": "YulIdentifier",
																	"src": "13694:75:6"
																},
																"nativeSrc": "13694:88:6",
																"nodeType": "YulFunctionCall",
																"src": "13694:88:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13687:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13687:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13830:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "13830:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13837:4:6",
																				"nodeType": "YulLiteral",
																				"src": "13837:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13826:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13826:3:6"
																		},
																		"nativeSrc": "13826:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13826:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13844:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13844:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13849:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13849:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "13791:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "13791:34:6"
																},
																"nativeSrc": "13791:65:6",
																"nodeType": "YulFunctionCall",
																"src": "13791:65:6"
															},
															"nativeSrc": "13791:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "13791:65:6"
														},
														{
															"nativeSrc": "13865:23:6",
															"nodeType": "YulAssignment",
															"src": "13865:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13876:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13876:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13881:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13881:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13872:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13872:3:6"
																},
																"nativeSrc": "13872:16:6",
																"nodeType": "YulFunctionCall",
																"src": "13872:16:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13865:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13865:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "13508:386:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13597:5:6",
														"nodeType": "YulTypedName",
														"src": "13597:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13604:3:6",
														"nodeType": "YulTypedName",
														"src": "13604:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13612:3:6",
														"nodeType": "YulTypedName",
														"src": "13612:3:6",
														"type": ""
													}
												],
												"src": "13508:386:6"
											},
											{
												"body": {
													"nativeSrc": "14034:137:6",
													"nodeType": "YulBlock",
													"src": "14034:137:6",
													"statements": [
														{
															"nativeSrc": "14045:100:6",
															"nodeType": "YulAssignment",
															"src": "14045:100:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14132:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14132:6:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14141:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "14141:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14052:79:6",
																	"nodeType": "YulIdentifier",
																	"src": "14052:79:6"
																},
																"nativeSrc": "14052:93:6",
																"nodeType": "YulFunctionCall",
																"src": "14052:93:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14045:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14045:3:6"
																}
															]
														},
														{
															"nativeSrc": "14155:10:6",
															"nodeType": "YulAssignment",
															"src": "14155:10:6",
															"value": {
																"name": "pos",
																"nativeSrc": "14162:3:6",
																"nodeType": "YulIdentifier",
																"src": "14162:3:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14155:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14155:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13900:271:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14013:3:6",
														"nodeType": "YulTypedName",
														"src": "14013:3:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14019:6:6",
														"nodeType": "YulTypedName",
														"src": "14019:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14030:3:6",
														"nodeType": "YulTypedName",
														"src": "14030:3:6",
														"type": ""
													}
												],
												"src": "13900:271:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$142_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$142_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$142__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already staked\")\n\n    }\n\n    function abi_encode_t_stringliteral_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tokens staked\")\n\n    }\n\n    function abi_encode_t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_03d66f88b387025353c0b7c12d56a908fddc07af0740ccbc06cae83741b08055(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking period not complete\")\n\n    }\n\n    function abi_encode_t_stringliteral_03d66f88b387025353c0b7c12d56a908fddc07af0740ccbc06cae83741b08055_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_03d66f88b387025353c0b7c12d56a908fddc07af0740ccbc06cae83741b08055(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_03d66f88b387025353c0b7c12d56a908fddc07af0740ccbc06cae83741b08055__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_03d66f88b387025353c0b7c12d56a908fddc07af0740ccbc06cae83741b08055_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient reward pool\")\n\n    }\n\n    function abi_encode_t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100a7575f3560e01c8063750142e61161006f578063750142e6146101525780639168ae72146101705780639af01c2d146101a3578063a67e12a8146101c1578063f7c618c1146101f1578063f985021a1461020f576100a7565b80631d583e0d146100ab5780633b7b6188146100c75780634ad84b34146100e357806372f702f314610101578063733bdef01461011f575b5f5ffd5b6100c560048036038101906100c09190610c32565b610219565b005b6100e160048036038101906100dc9190610c5d565b61029a565b005b6100eb610413565b6040516100f89190610caa565b60405180910390f35b610109610419565b6040516101169190610d3d565b60405180910390f35b61013960048036038101906101349190610d91565b61043e565b6040516101499493929190610dd6565b60405180910390f35b61015a6104e7565b6040516101679190610caa565b60405180910390f35b61018a60048036038101906101859190610d91565b6104ed565b60405161019a9493929190610dd6565b60405180910390f35b6101ab610525565b6040516101b89190610caa565b60405180910390f35b6101db60048036038101906101d69190610d91565b610532565b6040516101e89190610e19565b60405180910390f35b6101f9610587565b6040516102069190610d3d565b60405180910390f35b6102176105ac565b005b8060035f82825461022a9190610e5f565b925050819055508060045f8282546102429190610e5f565b9250508190555061029733308360025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610828909392919063ffffffff16565b50565b6102a26108aa565b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f015414610327576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031e90610eec565b60405180910390fd5b82815f0181905550818160010181905550428160020181905550683635c9adc5dea00000831015816003015f6101000a81548160ff0219169083151502179055506103b633308560015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610828909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f5af417134f72a9d41143ace85b0a26dce6f550f894f2cbc1eeee8810603d91b684846040516103fe929190610f0a565b60405180910390a25061040f6108f7565b5050565b60045481565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f5f5f5f60055f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060800160405290815f82015481526020016001820154815260200160028201548152602001600382015f9054906101000a900460ff1615151515815250509050805f01518160200151826040015183606001519450945094509450509193509193565b60035481565b6005602052805f5260405f205f91509050805f015490806001015490806002015490806003015f9054906101000a900460ff16905084565b683635c9adc5dea0000081565b5f60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206003015f9054906101000a900460ff169050919050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105b46108aa565b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f015411610639576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063090610f7b565b60405180910390fd5b8060010154816002015461064d9190610e5f565b42101561068f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068690610fe3565b60405180910390fd5b5f6106ac825f01548360020154426106a79190611001565b610900565b90508060045410156106f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ea9061107e565b60405180910390fd5b61074233835f015460015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166109389092919063ffffffff16565b61078e338260025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166109389092919063ffffffff16565b8060045f82825461079f9190611001565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167ff960dbf9e5d0682f7a298ed974e33a28b4464914b7a2bfac12ae419a9afeb280835f0154836040516107f1929190610f0a565b60405180910390a25f825f01819055505f826003015f6101000a81548160ff02191690831515021790555050506108266108f7565b565b6108a4848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161085d939291906110ab565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506109b7565b50505050565b60025f54036108ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e59061112a565b60405180910390fd5b60025f81905550565b60015f81905550565b5f5f62278d0083856109129190611148565b61091c91906111b6565b905060045481111561092e5760045490505b8091505092915050565b6109b2838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858560405160240161096b9291906111e6565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506109b7565b505050565b5f6109e1828473ffffffffffffffffffffffffffffffffffffffff16610a4c90919063ffffffff16565b90505f815114158015610a05575080806020019051810190610a039190611237565b155b15610a4757826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610a3e9190611262565b60405180910390fd5b505050565b6060610a5983835f610a61565b905092915050565b606081471015610aa857306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401610a9f9190611262565b60405180910390fd5b5f5f8573ffffffffffffffffffffffffffffffffffffffff168486604051610ad091906112cd565b5f6040518083038185875af1925050503d805f8114610b0a576040519150601f19603f3d011682016040523d82523d5f602084013e610b0f565b606091505b5091509150610b1f868383610b2a565b925050509392505050565b606082610b3f57610b3a82610bb7565b610baf565b5f8251148015610b6557505f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610ba757836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401610b9e9190611262565b60405180910390fd5b819050610bb0565b5b9392505050565b5f81511115610bc95780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f5ffd5b5f819050919050565b610c1181610bff565b8114610c1b575f5ffd5b50565b5f81359050610c2c81610c08565b92915050565b5f60208284031215610c4757610c46610bfb565b5b5f610c5484828501610c1e565b91505092915050565b5f5f60408385031215610c7357610c72610bfb565b5b5f610c8085828601610c1e565b9250506020610c9185828601610c1e565b9150509250929050565b610ca481610bff565b82525050565b5f602082019050610cbd5f830184610c9b565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610d05610d00610cfb84610cc3565b610ce2565b610cc3565b9050919050565b5f610d1682610ceb565b9050919050565b5f610d2782610d0c565b9050919050565b610d3781610d1d565b82525050565b5f602082019050610d505f830184610d2e565b92915050565b5f610d6082610cc3565b9050919050565b610d7081610d56565b8114610d7a575f5ffd5b50565b5f81359050610d8b81610d67565b92915050565b5f60208284031215610da657610da5610bfb565b5b5f610db384828501610d7d565b91505092915050565b5f8115159050919050565b610dd081610dbc565b82525050565b5f608082019050610de95f830187610c9b565b610df66020830186610c9b565b610e036040830185610c9b565b610e106060830184610dc7565b95945050505050565b5f602082019050610e2c5f830184610dc7565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610e6982610bff565b9150610e7483610bff565b9250828201905080821115610e8c57610e8b610e32565b5b92915050565b5f82825260208201905092915050565b7f416c7265616479207374616b65640000000000000000000000000000000000005f82015250565b5f610ed6600e83610e92565b9150610ee182610ea2565b602082019050919050565b5f6020820190508181035f830152610f0381610eca565b9050919050565b5f604082019050610f1d5f830185610c9b565b610f2a6020830184610c9b565b9392505050565b7f4e6f20746f6b656e73207374616b6564000000000000000000000000000000005f82015250565b5f610f65601083610e92565b9150610f7082610f31565b602082019050919050565b5f6020820190508181035f830152610f9281610f59565b9050919050565b7f5374616b696e6720706572696f64206e6f7420636f6d706c65746500000000005f82015250565b5f610fcd601b83610e92565b9150610fd882610f99565b602082019050919050565b5f6020820190508181035f830152610ffa81610fc1565b9050919050565b5f61100b82610bff565b915061101683610bff565b925082820390508181111561102e5761102d610e32565b5b92915050565b7f496e73756666696369656e742072657761726420706f6f6c00000000000000005f82015250565b5f611068601883610e92565b915061107382611034565b602082019050919050565b5f6020820190508181035f8301526110958161105c565b9050919050565b6110a581610d56565b82525050565b5f6060820190506110be5f83018661109c565b6110cb602083018561109c565b6110d86040830184610c9b565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611114601f83610e92565b915061111f826110e0565b602082019050919050565b5f6020820190508181035f83015261114181611108565b9050919050565b5f61115282610bff565b915061115d83610bff565b925082820261116b81610bff565b9150828204841483151761118257611181610e32565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6111c082610bff565b91506111cb83610bff565b9250826111db576111da611189565b5b828204905092915050565b5f6040820190506111f95f83018561109c565b6112066020830184610c9b565b9392505050565b61121681610dbc565b8114611220575f5ffd5b50565b5f815190506112318161120d565b92915050565b5f6020828403121561124c5761124b610bfb565b5b5f61125984828501611223565b91505092915050565b5f6020820190506112755f83018461109c565b92915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f6112a78261127b565b6112b18185611285565b93506112c181856020860161128f565b80840191505092915050565b5f6112d8828461129d565b91508190509291505056fea2646970667358221220088f596a1ca9ce215cedcd8a0bbde6017813c39aba47f7d652d4e4f3051ead4264736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x750142E6 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x750142E6 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x9168AE72 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x9AF01C2D EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0xA67E12A8 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xF985021A EQ PUSH2 0x20F JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0x1D583E0D EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x3B7B6188 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x4AD84B34 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x733BDEF0 EQ PUSH2 0x11F JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xC32 JUMP JUMPDEST PUSH2 0x219 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDC SWAP2 SWAP1 PUSH2 0xC5D JUMP JUMPDEST PUSH2 0x29A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEB PUSH2 0x413 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8 SWAP2 SWAP1 PUSH2 0xCAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xD3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0xD91 JUMP JUMPDEST PUSH2 0x43E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xCAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xD91 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AB PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0xCAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0xD91 JUMP JUMPDEST PUSH2 0x532 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0xE19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F9 PUSH2 0x587 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0xD3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x217 PUSH2 0x5AC JUMP JUMPDEST STOP JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x22A SWAP2 SWAP1 PUSH2 0xE5F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0xE5F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x297 CALLER ADDRESS DUP4 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x828 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x8AA JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD EQ PUSH2 0x327 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31E SWAP1 PUSH2 0xEEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH0 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH9 0x3635C9ADC5DEA00000 DUP4 LT ISZERO DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x3B6 CALLER ADDRESS DUP6 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x828 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5AF417134F72A9D41143ACE85B0A26DCE6F550F894F2CBC1EEEE8810603D91B6 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3FE SWAP3 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x40F PUSH2 0x8F7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x5 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH0 ADD MLOAD DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x60 ADD MLOAD SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH9 0x3635C9ADC5DEA00000 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x5B4 PUSH2 0x8AA JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD GT PUSH2 0x639 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x630 SWAP1 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP2 PUSH1 0x2 ADD SLOAD PUSH2 0x64D SWAP2 SWAP1 PUSH2 0xE5F JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x68F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x686 SWAP1 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x6AC DUP3 PUSH0 ADD SLOAD DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x6A7 SWAP2 SWAP1 PUSH2 0x1001 JUMP JUMPDEST PUSH2 0x900 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 SLOAD LT ISZERO PUSH2 0x6F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EA SWAP1 PUSH2 0x107E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x742 CALLER DUP4 PUSH0 ADD SLOAD PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x938 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x78E CALLER DUP3 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x938 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x79F SWAP2 SWAP1 PUSH2 0x1001 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF960DBF9E5D0682F7A298ED974E33A28B4464914B7A2BFAC12AE419A9AFEB280 DUP4 PUSH0 ADD SLOAD DUP4 PUSH1 0x40 MLOAD PUSH2 0x7F1 SWAP3 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP3 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH0 DUP3 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x826 PUSH2 0x8F7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x8A4 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x85D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x9B7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x8EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E5 SWAP1 PUSH2 0x112A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH3 0x278D00 DUP4 DUP6 PUSH2 0x912 SWAP2 SWAP1 PUSH2 0x1148 JUMP JUMPDEST PUSH2 0x91C SWAP2 SWAP1 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 SLOAD DUP2 GT ISZERO PUSH2 0x92E JUMPI PUSH1 0x4 SLOAD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9B2 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x96B SWAP3 SWAP2 SWAP1 PUSH2 0x11E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x9B7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9E1 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA4C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0xA05 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xA03 SWAP2 SWAP1 PUSH2 0x1237 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xA47 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3E SWAP2 SWAP1 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA59 DUP4 DUP4 PUSH0 PUSH2 0xA61 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0xAA8 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9F SWAP2 SWAP1 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0xAD0 SWAP2 SWAP1 PUSH2 0x12CD JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xB0A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB0F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xB1F DUP7 DUP4 DUP4 PUSH2 0xB2A JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0xB3F JUMPI PUSH2 0xB3A DUP3 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0xBAF JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0xB65 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xBA7 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9E SWAP2 SWAP1 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0xBB0 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0xBC9 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC11 DUP2 PUSH2 0xBFF JUMP JUMPDEST DUP2 EQ PUSH2 0xC1B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC2C DUP2 PUSH2 0xC08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC47 JUMPI PUSH2 0xC46 PUSH2 0xBFB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC54 DUP5 DUP3 DUP6 ADD PUSH2 0xC1E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC73 JUMPI PUSH2 0xC72 PUSH2 0xBFB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC80 DUP6 DUP3 DUP7 ADD PUSH2 0xC1E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC91 DUP6 DUP3 DUP7 ADD PUSH2 0xC1E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xCA4 DUP2 PUSH2 0xBFF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCBD PUSH0 DUP4 ADD DUP5 PUSH2 0xC9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD05 PUSH2 0xD00 PUSH2 0xCFB DUP5 PUSH2 0xCC3 JUMP JUMPDEST PUSH2 0xCE2 JUMP JUMPDEST PUSH2 0xCC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD16 DUP3 PUSH2 0xCEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD27 DUP3 PUSH2 0xD0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD37 DUP2 PUSH2 0xD1D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD50 PUSH0 DUP4 ADD DUP5 PUSH2 0xD2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD60 DUP3 PUSH2 0xCC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD70 DUP2 PUSH2 0xD56 JUMP JUMPDEST DUP2 EQ PUSH2 0xD7A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD8B DUP2 PUSH2 0xD67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDA6 JUMPI PUSH2 0xDA5 PUSH2 0xBFB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDB3 DUP5 DUP3 DUP6 ADD PUSH2 0xD7D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDD0 DUP2 PUSH2 0xDBC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xDE9 PUSH0 DUP4 ADD DUP8 PUSH2 0xC9B JUMP JUMPDEST PUSH2 0xDF6 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xC9B JUMP JUMPDEST PUSH2 0xE03 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xC9B JUMP JUMPDEST PUSH2 0xE10 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xDC7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE2C PUSH0 DUP4 ADD DUP5 PUSH2 0xDC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE69 DUP3 PUSH2 0xBFF JUMP JUMPDEST SWAP2 POP PUSH2 0xE74 DUP4 PUSH2 0xBFF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE8C JUMPI PUSH2 0xE8B PUSH2 0xE32 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C7265616479207374616B6564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xED6 PUSH1 0xE DUP4 PUSH2 0xE92 JUMP JUMPDEST SWAP2 POP PUSH2 0xEE1 DUP3 PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF03 DUP2 PUSH2 0xECA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF1D PUSH0 DUP4 ADD DUP6 PUSH2 0xC9B JUMP JUMPDEST PUSH2 0xF2A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC9B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E73207374616B656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF65 PUSH1 0x10 DUP4 PUSH2 0xE92 JUMP JUMPDEST SWAP2 POP PUSH2 0xF70 DUP3 PUSH2 0xF31 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF92 DUP2 PUSH2 0xF59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B696E6720706572696F64206E6F7420636F6D706C6574650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFCD PUSH1 0x1B DUP4 PUSH2 0xE92 JUMP JUMPDEST SWAP2 POP PUSH2 0xFD8 DUP3 PUSH2 0xF99 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFFA DUP2 PUSH2 0xFC1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x100B DUP3 PUSH2 0xBFF JUMP JUMPDEST SWAP2 POP PUSH2 0x1016 DUP4 PUSH2 0xBFF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x102E JUMPI PUSH2 0x102D PUSH2 0xE32 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742072657761726420706F6F6C0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1068 PUSH1 0x18 DUP4 PUSH2 0xE92 JUMP JUMPDEST SWAP2 POP PUSH2 0x1073 DUP3 PUSH2 0x1034 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1095 DUP2 PUSH2 0x105C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10A5 DUP2 PUSH2 0xD56 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10BE PUSH0 DUP4 ADD DUP7 PUSH2 0x109C JUMP JUMPDEST PUSH2 0x10CB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x109C JUMP JUMPDEST PUSH2 0x10D8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC9B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1114 PUSH1 0x1F DUP4 PUSH2 0xE92 JUMP JUMPDEST SWAP2 POP PUSH2 0x111F DUP3 PUSH2 0x10E0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1141 DUP2 PUSH2 0x1108 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1152 DUP3 PUSH2 0xBFF JUMP JUMPDEST SWAP2 POP PUSH2 0x115D DUP4 PUSH2 0xBFF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x116B DUP2 PUSH2 0xBFF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1182 JUMPI PUSH2 0x1181 PUSH2 0xE32 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11C0 DUP3 PUSH2 0xBFF JUMP JUMPDEST SWAP2 POP PUSH2 0x11CB DUP4 PUSH2 0xBFF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x11DB JUMPI PUSH2 0x11DA PUSH2 0x1189 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x11F9 PUSH0 DUP4 ADD DUP6 PUSH2 0x109C JUMP JUMPDEST PUSH2 0x1206 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC9B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1216 DUP2 PUSH2 0xDBC JUMP JUMPDEST DUP2 EQ PUSH2 0x1220 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1231 DUP2 PUSH2 0x120D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x124C JUMPI PUSH2 0x124B PUSH2 0xBFB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1259 DUP5 DUP3 DUP6 ADD PUSH2 0x1223 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1275 PUSH0 DUP4 ADD DUP5 PUSH2 0x109C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12A7 DUP3 PUSH2 0x127B JUMP JUMPDEST PUSH2 0x12B1 DUP2 DUP6 PUSH2 0x1285 JUMP JUMPDEST SWAP4 POP PUSH2 0x12C1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x128F JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12D8 DUP3 DUP5 PUSH2 0x129D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD DUP16 MSIZE PUSH11 0x1CA9CE215CEDCD8A0BBDE6 ADD PUSH25 0x13C39ABA47F7D652D4E4F3051EAD4264736F6C634300081B00 CALLER ",
							"sourceMap": "492:6596:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2528:266;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3001:728;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;880:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;619:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6643:443;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;791:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1359:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;986:55;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6115:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;697:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3829:1254;;;:::i;:::-;;2528:266;2603:7;2588:11;;:22;;;;;;;:::i;:::-;;;;;;;;2639:7;2620:15;;:26;;;;;;;:::i;:::-;;;;;;;;2723:64;2752:10;2772:4;2779:7;2723:11;;;;;;;;;;;:28;;;;:64;;;;;;:::i;:::-;2528:266;:::o;3001:728::-;2261:21:0;:19;:21::i;:::-;3095::5::1;3119:7;:19;3127:10;3119:19;;;;;;;;;;;;;;;3095:43;;3229:1;3206:6;:19;;;:24;3198:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;3319:7;3297:6;:19;;:29;;;;3359:14;3336:6;:20;;:37;;;;3402:15;3383:6;:16;;:34;;;;1030:11;3453:7;:28;;3427:6;:23;;;:54;;;;;;;;;;;;;;;;;;3548:65;3578:10;3598:4;3605:7;3548:12;;;;;;;;;;;:29;;;;:65;;;;;;:::i;:::-;3686:10;3680:42;;;3698:7;3707:14;3680:42;;;;;;;:::i;:::-;;;;;;;;3085:644;2303:20:0::0;:18;:20::i;:::-;3001:728:5;;:::o;880:30::-;;;;:::o;619:26::-;;;;;;;;;;;;;:::o;6643:443::-;6741:20;6775:21;6810:17;6841:15;6881:20;6904:7;:14;6912:5;6904:14;;;;;;;;;;;;;;;6881:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6949:6;:19;;;6982:6;:20;;;7016:6;:16;;;7046:6;:23;;;6928:151;;;;;;;;;6643:443;;;;;:::o;791:26::-;;;;:::o;1359:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;986:55::-;1030:11;986:55;:::o;6115:125::-;6179:4;6202:7;:14;6210:5;6202:14;;;;;;;;;;;;;;;:31;;;;;;;;;;;;6195:38;;6115:125;;;:::o;697:25::-;;;;;;;;;;;;;:::o;3829:1254::-;2261:21:0;:19;:21::i;:::-;3888::5::1;3912:7;:19;3920:10;3912:19;;;;;;;;;;;;;;;3888:43;;4017:1;3995:6;:19;;;:23;3987:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;4158:6;:20;;;4139:6;:16;;;:39;;;;:::i;:::-;4120:15;:58;;4099:132;;;;;;;;;;;;:::i;:::-;;;;;;;;;4305:14;4322:106;4351:6;:19;;;4402:6;:16;;;4384:15;:34;;;;:::i;:::-;4322:15;:106::i;:::-;4305:123;;4517:6;4498:15;;:25;;4490:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;4610:58;4636:10;4648:6;:19;;;4610:12;;;;;;;;;;;:25;;;;:58;;;;;:::i;:::-;4721:44;4746:10;4758:6;4721:11;;;;;;;;;;;:24;;;;:44;;;;;:::i;:::-;4842:6;4823:15;;:25;;;;;;;:::i;:::-;;;;;;;;4925:10;4917:48;;;4937:6;:19;;;4958:6;4917:48;;;;;;;:::i;:::-;;;;;;;;5034:1;5012:6;:19;;:23;;;;5071:5;5045:6;:23;;;:31;;;;;;;;;;;;;;;;;;3878:1205;;2303:20:0::0;:18;:20::i;:::-;3829:1254:5:o;1702:188:3:-;1802:81;1822:5;1844;:18;;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;2336:287:0:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;5397:505:5:-;5514:7;5670:14;5720:7;5704:12;5688:13;:28;;;;:::i;:::-;5687:40;;;;:::i;:::-;5670:57;;5806:15;;5797:6;:24;5793:79;;;5846:15;;5837:24;;5793:79;5889:6;5882:13;;;5397:505;;;;:::o;1303:160:3:-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;4059:629::-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;2705:151:4:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;88:117:6;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:474::-;1093:6;1101;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1403:2;1429:53;1474:7;1465:6;1454:9;1450:22;1429:53;:::i;:::-;1419:63;;1374:118;1025:474;;;;;:::o;1505:118::-;1592:24;1610:5;1592:24;:::i;:::-;1587:3;1580:37;1505:118;;:::o;1629:222::-;1722:4;1760:2;1749:9;1745:18;1737:26;;1773:71;1841:1;1830:9;1826:17;1817:6;1773:71;:::i;:::-;1629:222;;;;:::o;1857:126::-;1894:7;1934:42;1927:5;1923:54;1912:65;;1857:126;;;:::o;1989:60::-;2017:3;2038:5;2031:12;;1989:60;;;:::o;2055:142::-;2105:9;2138:53;2156:34;2165:24;2183:5;2165:24;:::i;:::-;2156:34;:::i;:::-;2138:53;:::i;:::-;2125:66;;2055:142;;;:::o;2203:126::-;2253:9;2286:37;2317:5;2286:37;:::i;:::-;2273:50;;2203:126;;;:::o;2335:140::-;2399:9;2432:37;2463:5;2432:37;:::i;:::-;2419:50;;2335:140;;;:::o;2481:159::-;2582:51;2627:5;2582:51;:::i;:::-;2577:3;2570:64;2481:159;;:::o;2646:250::-;2753:4;2791:2;2780:9;2776:18;2768:26;;2804:85;2886:1;2875:9;2871:17;2862:6;2804:85;:::i;:::-;2646:250;;;;:::o;2902:96::-;2939:7;2968:24;2986:5;2968:24;:::i;:::-;2957:35;;2902:96;;;:::o;3004:122::-;3077:24;3095:5;3077:24;:::i;:::-;3070:5;3067:35;3057:63;;3116:1;3113;3106:12;3057:63;3004:122;:::o;3132:139::-;3178:5;3216:6;3203:20;3194:29;;3232:33;3259:5;3232:33;:::i;:::-;3132:139;;;;:::o;3277:329::-;3336:6;3385:2;3373:9;3364:7;3360:23;3356:32;3353:119;;;3391:79;;:::i;:::-;3353:119;3511:1;3536:53;3581:7;3572:6;3561:9;3557:22;3536:53;:::i;:::-;3526:63;;3482:117;3277:329;;;;:::o;3612:90::-;3646:7;3689:5;3682:13;3675:21;3664:32;;3612:90;;;:::o;3708:109::-;3789:21;3804:5;3789:21;:::i;:::-;3784:3;3777:34;3708:109;;:::o;3823:541::-;3994:4;4032:3;4021:9;4017:19;4009:27;;4046:71;4114:1;4103:9;4099:17;4090:6;4046:71;:::i;:::-;4127:72;4195:2;4184:9;4180:18;4171:6;4127:72;:::i;:::-;4209;4277:2;4266:9;4262:18;4253:6;4209:72;:::i;:::-;4291:66;4353:2;4342:9;4338:18;4329:6;4291:66;:::i;:::-;3823:541;;;;;;;:::o;4370:210::-;4457:4;4495:2;4484:9;4480:18;4472:26;;4508:65;4570:1;4559:9;4555:17;4546:6;4508:65;:::i;:::-;4370:210;;;;:::o;4586:180::-;4634:77;4631:1;4624:88;4731:4;4728:1;4721:15;4755:4;4752:1;4745:15;4772:191;4812:3;4831:20;4849:1;4831:20;:::i;:::-;4826:25;;4865:20;4883:1;4865:20;:::i;:::-;4860:25;;4908:1;4905;4901:9;4894:16;;4929:3;4926:1;4923:10;4920:36;;;4936:18;;:::i;:::-;4920:36;4772:191;;;;:::o;4969:169::-;5053:11;5087:6;5082:3;5075:19;5127:4;5122:3;5118:14;5103:29;;4969:169;;;;:::o;5144:164::-;5284:16;5280:1;5272:6;5268:14;5261:40;5144:164;:::o;5314:366::-;5456:3;5477:67;5541:2;5536:3;5477:67;:::i;:::-;5470:74;;5553:93;5642:3;5553:93;:::i;:::-;5671:2;5666:3;5662:12;5655:19;;5314:366;;;:::o;5686:419::-;5852:4;5890:2;5879:9;5875:18;5867:26;;5939:9;5933:4;5929:20;5925:1;5914:9;5910:17;5903:47;5967:131;6093:4;5967:131;:::i;:::-;5959:139;;5686:419;;;:::o;6111:332::-;6232:4;6270:2;6259:9;6255:18;6247:26;;6283:71;6351:1;6340:9;6336:17;6327:6;6283:71;:::i;:::-;6364:72;6432:2;6421:9;6417:18;6408:6;6364:72;:::i;:::-;6111:332;;;;;:::o;6449:166::-;6589:18;6585:1;6577:6;6573:14;6566:42;6449:166;:::o;6621:366::-;6763:3;6784:67;6848:2;6843:3;6784:67;:::i;:::-;6777:74;;6860:93;6949:3;6860:93;:::i;:::-;6978:2;6973:3;6969:12;6962:19;;6621:366;;;:::o;6993:419::-;7159:4;7197:2;7186:9;7182:18;7174:26;;7246:9;7240:4;7236:20;7232:1;7221:9;7217:17;7210:47;7274:131;7400:4;7274:131;:::i;:::-;7266:139;;6993:419;;;:::o;7418:177::-;7558:29;7554:1;7546:6;7542:14;7535:53;7418:177;:::o;7601:366::-;7743:3;7764:67;7828:2;7823:3;7764:67;:::i;:::-;7757:74;;7840:93;7929:3;7840:93;:::i;:::-;7958:2;7953:3;7949:12;7942:19;;7601:366;;;:::o;7973:419::-;8139:4;8177:2;8166:9;8162:18;8154:26;;8226:9;8220:4;8216:20;8212:1;8201:9;8197:17;8190:47;8254:131;8380:4;8254:131;:::i;:::-;8246:139;;7973:419;;;:::o;8398:194::-;8438:4;8458:20;8476:1;8458:20;:::i;:::-;8453:25;;8492:20;8510:1;8492:20;:::i;:::-;8487:25;;8536:1;8533;8529:9;8521:17;;8560:1;8554:4;8551:11;8548:37;;;8565:18;;:::i;:::-;8548:37;8398:194;;;;:::o;8598:174::-;8738:26;8734:1;8726:6;8722:14;8715:50;8598:174;:::o;8778:366::-;8920:3;8941:67;9005:2;9000:3;8941:67;:::i;:::-;8934:74;;9017:93;9106:3;9017:93;:::i;:::-;9135:2;9130:3;9126:12;9119:19;;8778:366;;;:::o;9150:419::-;9316:4;9354:2;9343:9;9339:18;9331:26;;9403:9;9397:4;9393:20;9389:1;9378:9;9374:17;9367:47;9431:131;9557:4;9431:131;:::i;:::-;9423:139;;9150:419;;;:::o;9575:118::-;9662:24;9680:5;9662:24;:::i;:::-;9657:3;9650:37;9575:118;;:::o;9699:442::-;9848:4;9886:2;9875:9;9871:18;9863:26;;9899:71;9967:1;9956:9;9952:17;9943:6;9899:71;:::i;:::-;9980:72;10048:2;10037:9;10033:18;10024:6;9980:72;:::i;:::-;10062;10130:2;10119:9;10115:18;10106:6;10062:72;:::i;:::-;9699:442;;;;;;:::o;10147:181::-;10287:33;10283:1;10275:6;10271:14;10264:57;10147:181;:::o;10334:366::-;10476:3;10497:67;10561:2;10556:3;10497:67;:::i;:::-;10490:74;;10573:93;10662:3;10573:93;:::i;:::-;10691:2;10686:3;10682:12;10675:19;;10334:366;;;:::o;10706:419::-;10872:4;10910:2;10899:9;10895:18;10887:26;;10959:9;10953:4;10949:20;10945:1;10934:9;10930:17;10923:47;10987:131;11113:4;10987:131;:::i;:::-;10979:139;;10706:419;;;:::o;11131:410::-;11171:7;11194:20;11212:1;11194:20;:::i;:::-;11189:25;;11228:20;11246:1;11228:20;:::i;:::-;11223:25;;11283:1;11280;11276:9;11305:30;11323:11;11305:30;:::i;:::-;11294:41;;11484:1;11475:7;11471:15;11468:1;11465:22;11445:1;11438:9;11418:83;11395:139;;11514:18;;:::i;:::-;11395:139;11179:362;11131:410;;;;:::o;11547:180::-;11595:77;11592:1;11585:88;11692:4;11689:1;11682:15;11716:4;11713:1;11706:15;11733:185;11773:1;11790:20;11808:1;11790:20;:::i;:::-;11785:25;;11824:20;11842:1;11824:20;:::i;:::-;11819:25;;11863:1;11853:35;;11868:18;;:::i;:::-;11853:35;11910:1;11907;11903:9;11898:14;;11733:185;;;;:::o;11924:332::-;12045:4;12083:2;12072:9;12068:18;12060:26;;12096:71;12164:1;12153:9;12149:17;12140:6;12096:71;:::i;:::-;12177:72;12245:2;12234:9;12230:18;12221:6;12177:72;:::i;:::-;11924:332;;;;;:::o;12262:116::-;12332:21;12347:5;12332:21;:::i;:::-;12325:5;12322:32;12312:60;;12368:1;12365;12358:12;12312:60;12262:116;:::o;12384:137::-;12438:5;12469:6;12463:13;12454:22;;12485:30;12509:5;12485:30;:::i;:::-;12384:137;;;;:::o;12527:345::-;12594:6;12643:2;12631:9;12622:7;12618:23;12614:32;12611:119;;;12649:79;;:::i;:::-;12611:119;12769:1;12794:61;12847:7;12838:6;12827:9;12823:22;12794:61;:::i;:::-;12784:71;;12740:125;12527:345;;;;:::o;12878:222::-;12971:4;13009:2;12998:9;12994:18;12986:26;;13022:71;13090:1;13079:9;13075:17;13066:6;13022:71;:::i;:::-;12878:222;;;;:::o;13106:98::-;13157:6;13191:5;13185:12;13175:22;;13106:98;;;:::o;13210:147::-;13311:11;13348:3;13333:18;;13210:147;;;;:::o;13363:139::-;13452:6;13447:3;13442;13436:23;13493:1;13484:6;13479:3;13475:16;13468:27;13363:139;;;:::o;13508:386::-;13612:3;13640:38;13672:5;13640:38;:::i;:::-;13694:88;13775:6;13770:3;13694:88;:::i;:::-;13687:95;;13791:65;13849:6;13844:3;13837:4;13830:5;13826:16;13791:65;:::i;:::-;13881:6;13876:3;13872:16;13865:23;;13616:278;13508:386;;;;:::o;13900:271::-;14030:3;14052:93;14141:3;14132:6;14052:93;:::i;:::-;14045:100;;14162:3;14155:10;;13900:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "977800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"PREMIUM_THRESHOLD()": "369",
								"availableReward()": "2470",
								"fundRewardPool(uint256)": "infinite",
								"getStakerInfo(address)": "infinite",
								"hasPremiumAccess(address)": "2942",
								"rewardToken()": "infinite",
								"stakeTokens(uint256,uint256)": "infinite",
								"stakers(address)": "infinite",
								"stakingToken()": "infinite",
								"totalReward()": "2425",
								"unstakeAndClaim()": "infinite"
							},
							"internal": {
								"calculateReward(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 492,
									"end": 7088,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 492,
									"end": 7088,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 492,
									"end": 7088,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 2246,
									"end": 2382,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2326,
									"end": 2339,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2311,
									"end": 2323,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2311,
									"end": 2323,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2311,
									"end": 2339,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 2311,
									"end": 2339,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 2311,
									"end": 2339,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2311,
									"end": 2339,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2311,
									"end": 2339,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2311,
									"end": 2339,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2311,
									"end": 2339,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 2311,
									"end": 2339,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2311,
									"end": 2339,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2311,
									"end": 2339,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2311,
									"end": 2339,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2311,
									"end": 2339,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2311,
									"end": 2339,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2311,
									"end": 2339,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 2311,
									"end": 2339,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 2311,
									"end": 2339,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2311,
									"end": 2339,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2311,
									"end": 2339,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2363,
									"end": 2375,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2349,
									"end": 2360,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 2349,
									"end": 2360,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2349,
									"end": 2375,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 2349,
									"end": 2375,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 2349,
									"end": 2375,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2349,
									"end": 2375,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2349,
									"end": 2375,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2349,
									"end": 2375,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2349,
									"end": 2375,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 2349,
									"end": 2375,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2349,
									"end": 2375,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2349,
									"end": 2375,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2349,
									"end": 2375,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2349,
									"end": 2375,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2349,
									"end": 2375,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2349,
									"end": 2375,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 2349,
									"end": 2375,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 2349,
									"end": 2375,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2349,
									"end": 2375,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2349,
									"end": 2375,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2246,
									"end": 2382,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 492,
									"end": 7088,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 492,
									"end": 7088,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 568,
									"end": 678,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 619,
									"end": 626,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 666,
									"end": 671,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 648,
									"end": 672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 648,
									"end": 672,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 637,
									"end": 672,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 637,
									"end": 672,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 684,
									"end": 834,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 684,
									"end": 834,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 803,
									"end": 808,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 771,
									"end": 809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 771,
									"end": 809,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 771,
									"end": 809,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 761,
									"end": 810,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 751,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 824,
									"end": 825,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 821,
									"end": 822,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 814,
									"end": 826,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 751,
									"end": 828,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 684,
									"end": 834,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 684,
									"end": 834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 911,
									"end": 916,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 948,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 936,
									"end": 949,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 927,
									"end": 949,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 927,
									"end": 949,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 999,
									"end": 1004,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 958,
									"end": 1005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 840,
									"end": 1011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1580,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1017,
									"end": 1580,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1124,
									"end": 1130,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1138,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1181,
									"end": 1183,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1169,
									"end": 1178,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1160,
									"end": 1167,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1179,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1152,
									"end": 1184,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1149,
									"end": 1268,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1149,
									"end": 1268,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1149,
									"end": 1268,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1187,
									"end": 1266,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1187,
									"end": 1266,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1187,
									"end": 1266,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1187,
									"end": 1266,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1187,
									"end": 1266,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1149,
									"end": 1268,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1149,
									"end": 1268,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1307,
									"end": 1308,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1332,
									"end": 1410,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1402,
									"end": 1409,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1393,
									"end": 1399,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1382,
									"end": 1391,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1378,
									"end": 1400,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1332,
									"end": 1410,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1332,
									"end": 1410,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1332,
									"end": 1410,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1332,
									"end": 1410,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1322,
									"end": 1410,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1322,
									"end": 1410,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1278,
									"end": 1420,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1459,
									"end": 1461,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1485,
									"end": 1563,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1555,
									"end": 1562,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1546,
									"end": 1552,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1535,
									"end": 1544,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1531,
									"end": 1553,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1485,
									"end": 1563,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1485,
									"end": 1563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1485,
									"end": 1563,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1485,
									"end": 1563,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1475,
									"end": 1563,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1475,
									"end": 1563,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1430,
									"end": 1573,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1580,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1580,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1580,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1580,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1580,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1017,
									"end": 1580,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 492,
									"end": 7088,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 492,
									"end": 7088,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 492,
									"end": 7088,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 492,
									"end": 7088,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 492,
									"end": 7088,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 492,
									"end": 7088,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 492,
									"end": 7088,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 492,
									"end": 7088,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 492,
									"end": 7088,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220088f596a1ca9ce215cedcd8a0bbde6017813c39aba47f7d652d4e4f3051ead4264736f6c634300081b0033",
									".code": [
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH",
											"source": 5,
											"value": "750142E6"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH",
											"source": 5,
											"value": "750142E6"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH",
											"source": 5,
											"value": "9168AE72"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH",
											"source": 5,
											"value": "9AF01C2D"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH",
											"source": 5,
											"value": "A67E12A8"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH",
											"source": 5,
											"value": "F7C618C1"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH",
											"source": 5,
											"value": "F985021A"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH",
											"source": 5,
											"value": "1D583E0D"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH",
											"source": 5,
											"value": "3B7B6188"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH",
											"source": 5,
											"value": "4AD84B34"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH",
											"source": 5,
											"value": "72F702F3"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH",
											"source": 5,
											"value": "733BDEF0"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 492,
											"end": 7088,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2528,
											"end": 2794,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2528,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2528,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 2528,
											"end": 2794,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2528,
											"end": 2794,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2528,
											"end": 2794,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2528,
											"end": 2794,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2528,
											"end": 2794,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2528,
											"end": 2794,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2528,
											"end": 2794,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2528,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2528,
											"end": 2794,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2528,
											"end": 2794,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2528,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2528,
											"end": 2794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2528,
											"end": 2794,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2528,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2528,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2528,
											"end": 2794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2528,
											"end": 2794,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 2528,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2528,
											"end": 2794,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3001,
											"end": 3729,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3001,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3001,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 3001,
											"end": 3729,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3001,
											"end": 3729,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3001,
											"end": 3729,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3001,
											"end": 3729,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3001,
											"end": 3729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3001,
											"end": 3729,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3001,
											"end": 3729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3001,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3001,
											"end": 3729,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3001,
											"end": 3729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3001,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3001,
											"end": 3729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3001,
											"end": 3729,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3001,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3001,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3001,
											"end": 3729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3001,
											"end": 3729,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 3001,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3001,
											"end": 3729,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 880,
											"end": 910,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 880,
											"end": 910,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 880,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 880,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 880,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 880,
											"end": 910,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 880,
											"end": 910,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 880,
											"end": 910,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 880,
											"end": 910,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 880,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 880,
											"end": 910,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 880,
											"end": 910,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 880,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 880,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 880,
											"end": 910,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 880,
											"end": 910,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 880,
											"end": 910,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 880,
											"end": 910,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 880,
											"end": 910,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 880,
											"end": 910,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 880,
											"end": 910,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 880,
											"end": 910,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 880,
											"end": 910,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 619,
											"end": 645,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 619,
											"end": 645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 619,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 619,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 619,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 619,
											"end": 645,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 619,
											"end": 645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 619,
											"end": 645,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 619,
											"end": 645,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 619,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 619,
											"end": 645,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 619,
											"end": 645,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 619,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 619,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 619,
											"end": 645,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 619,
											"end": 645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 619,
											"end": 645,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 619,
											"end": 645,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 619,
											"end": 645,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 619,
											"end": 645,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 619,
											"end": 645,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 619,
											"end": 645,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 619,
											"end": 645,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 6643,
											"end": 7086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 6643,
											"end": 7086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 6643,
											"end": 7086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 791,
											"end": 817,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 791,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 791,
											"end": 817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 791,
											"end": 817,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 791,
											"end": 817,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 791,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 791,
											"end": 817,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 791,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 791,
											"end": 817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 791,
											"end": 817,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 791,
											"end": 817,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 791,
											"end": 817,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 791,
											"end": 817,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 791,
											"end": 817,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 791,
											"end": 817,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 791,
											"end": 817,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1359,
											"end": 1400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1359,
											"end": 1400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1359,
											"end": 1400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 986,
											"end": 1041,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 986,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 986,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 986,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 986,
											"end": 1041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 986,
											"end": 1041,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 986,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 986,
											"end": 1041,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 986,
											"end": 1041,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 986,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 986,
											"end": 1041,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 986,
											"end": 1041,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 986,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 986,
											"end": 1041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 986,
											"end": 1041,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 986,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 986,
											"end": 1041,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 986,
											"end": 1041,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 986,
											"end": 1041,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 986,
											"end": 1041,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 986,
											"end": 1041,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 986,
											"end": 1041,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 986,
											"end": 1041,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 6115,
											"end": 6240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 6115,
											"end": 6240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 6115,
											"end": 6240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 697,
											"end": 722,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 697,
											"end": 722,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 697,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 697,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 697,
											"end": 722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 697,
											"end": 722,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 697,
											"end": 722,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 697,
											"end": 722,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 722,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 697,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 697,
											"end": 722,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 697,
											"end": 722,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 697,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 697,
											"end": 722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 697,
											"end": 722,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 697,
											"end": 722,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 697,
											"end": 722,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 722,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 697,
											"end": 722,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 697,
											"end": 722,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 697,
											"end": 722,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 697,
											"end": 722,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 697,
											"end": 722,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3829,
											"end": 5083,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 3829,
											"end": 5083,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3829,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3829,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 3829,
											"end": 5083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3829,
											"end": 5083,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3829,
											"end": 5083,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3829,
											"end": 5083,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2528,
											"end": 2794,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2528,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2610,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2588,
											"end": 2599,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2588,
											"end": 2599,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2588,
											"end": 2610,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2588,
											"end": 2610,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2588,
											"end": 2610,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2588,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2588,
											"end": 2610,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2588,
											"end": 2610,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2588,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 2588,
											"end": 2610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2588,
											"end": 2610,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2588,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2588,
											"end": 2610,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2588,
											"end": 2610,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2588,
											"end": 2610,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2588,
											"end": 2610,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2588,
											"end": 2610,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2588,
											"end": 2610,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2588,
											"end": 2610,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2639,
											"end": 2646,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2620,
											"end": 2635,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2620,
											"end": 2635,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2646,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2620,
											"end": 2646,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2620,
											"end": 2646,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2620,
											"end": 2646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2620,
											"end": 2646,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2620,
											"end": 2646,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2620,
											"end": 2646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 2620,
											"end": 2646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2620,
											"end": 2646,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2620,
											"end": 2646,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2620,
											"end": 2646,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2620,
											"end": 2646,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2620,
											"end": 2646,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2620,
											"end": 2646,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2620,
											"end": 2646,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2620,
											"end": 2646,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2620,
											"end": 2646,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2752,
											"end": 2762,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2772,
											"end": 2776,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2779,
											"end": 2786,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 2734,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2723,
											"end": 2734,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2734,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 2734,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 2734,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 2734,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2723,
											"end": 2734,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 2734,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 2734,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 2734,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2723,
											"end": 2734,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 2751,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2723,
											"end": 2751,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2723,
											"end": 2751,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 2787,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 2787,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 2787,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 2787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 2787,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2723,
											"end": 2787,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 2787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 2787,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2723,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2528,
											"end": 2794,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2528,
											"end": 2794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3001,
											"end": 3729,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3001,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3119,
											"end": 3126,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3119,
											"end": 3138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3127,
											"end": 3137,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3119,
											"end": 3138,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3119,
											"end": 3138,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3138,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3138,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3119,
											"end": 3138,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3138,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3138,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3138,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3119,
											"end": 3138,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3119,
											"end": 3138,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3138,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3138,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3229,
											"end": 3230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3212,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3206,
											"end": 3225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3225,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3206,
											"end": 3225,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3206,
											"end": 3230,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3198,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3198,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3198,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3198,
											"end": 3249,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3198,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3198,
											"end": 3249,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3198,
											"end": 3249,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3198,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3198,
											"end": 3249,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3198,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 3198,
											"end": 3249,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3198,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 3198,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3198,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 3198,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3198,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3198,
											"end": 3249,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3198,
											"end": 3249,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3198,
											"end": 3249,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3198,
											"end": 3249,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3198,
											"end": 3249,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3198,
											"end": 3249,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3198,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3198,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3319,
											"end": 3326,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3297,
											"end": 3303,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3297,
											"end": 3316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3297,
											"end": 3316,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3297,
											"end": 3326,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3297,
											"end": 3326,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3297,
											"end": 3326,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3297,
											"end": 3326,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3373,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3342,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3336,
											"end": 3356,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3373,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3373,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3336,
											"end": 3373,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3402,
											"end": 3417,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3389,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3399,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3383,
											"end": 3399,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3417,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3417,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3417,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3383,
											"end": 3417,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 3453,
											"end": 3460,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3453,
											"end": 3481,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3453,
											"end": 3481,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3427,
											"end": 3433,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3427,
											"end": 3450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3427,
											"end": 3450,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3427,
											"end": 3450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3427,
											"end": 3481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3427,
											"end": 3481,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3427,
											"end": 3481,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3427,
											"end": 3481,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3427,
											"end": 3481,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3427,
											"end": 3481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3427,
											"end": 3481,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3427,
											"end": 3481,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3427,
											"end": 3481,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3427,
											"end": 3481,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3427,
											"end": 3481,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3427,
											"end": 3481,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3427,
											"end": 3481,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3427,
											"end": 3481,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3427,
											"end": 3481,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3427,
											"end": 3481,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3427,
											"end": 3481,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3427,
											"end": 3481,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 3578,
											"end": 3588,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3598,
											"end": 3602,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3605,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 3560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3548,
											"end": 3560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3548,
											"end": 3560,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 3560,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 3560,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 3560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3548,
											"end": 3560,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 3560,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 3560,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 3560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3548,
											"end": 3560,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 3577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3548,
											"end": 3577,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 3577,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3548,
											"end": 3577,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 3613,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 3613,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 3613,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 3613,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3548,
											"end": 3613,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 3548,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3686,
											"end": 3696,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3680,
											"end": 3722,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5AF417134F72A9D41143ACE85B0A26DCE6F550F894F2CBC1EEEE8810603D91B6"
										},
										{
											"begin": 3698,
											"end": 3705,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3721,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3680,
											"end": 3722,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 3680,
											"end": 3722,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3722,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3722,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 3680,
											"end": 3722,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3722,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 3680,
											"end": 3722,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3680,
											"end": 3722,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3722,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3722,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3722,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3722,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3722,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3729,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3001,
											"end": 3729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3001,
											"end": 3729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3001,
											"end": 3729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 880,
											"end": 910,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 880,
											"end": 910,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 880,
											"end": 910,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 880,
											"end": 910,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 880,
											"end": 910,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 880,
											"end": 910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 619,
											"end": 645,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 619,
											"end": 645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 619,
											"end": 645,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 619,
											"end": 645,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 619,
											"end": 645,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 619,
											"end": 645,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 619,
											"end": 645,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 619,
											"end": 645,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 619,
											"end": 645,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 619,
											"end": 645,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 619,
											"end": 645,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 619,
											"end": 645,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 619,
											"end": 645,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 619,
											"end": 645,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 619,
											"end": 645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6741,
											"end": 6761,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6775,
											"end": 6796,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6827,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6841,
											"end": 6856,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6881,
											"end": 6901,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6904,
											"end": 6911,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 6904,
											"end": 6918,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6912,
											"end": 6917,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6904,
											"end": 6918,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6904,
											"end": 6918,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6904,
											"end": 6918,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6904,
											"end": 6918,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6904,
											"end": 6918,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6904,
											"end": 6918,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6904,
											"end": 6918,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6904,
											"end": 6918,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6904,
											"end": 6918,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6904,
											"end": 6918,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6904,
											"end": 6918,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6904,
											"end": 6918,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6904,
											"end": 6918,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6904,
											"end": 6918,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6904,
											"end": 6918,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6949,
											"end": 6955,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6949,
											"end": 6968,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6949,
											"end": 6968,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6949,
											"end": 6968,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6982,
											"end": 6988,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6982,
											"end": 7002,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6982,
											"end": 7002,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6982,
											"end": 7002,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7016,
											"end": 7022,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7016,
											"end": 7032,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7016,
											"end": 7032,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7016,
											"end": 7032,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7046,
											"end": 7052,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7046,
											"end": 7069,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7046,
											"end": 7069,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7046,
											"end": 7069,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6928,
											"end": 7079,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 6928,
											"end": 7079,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6928,
											"end": 7079,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 6928,
											"end": 7079,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6928,
											"end": 7079,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 6928,
											"end": 7079,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6928,
											"end": 7079,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 6928,
											"end": 7079,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6928,
											"end": 7079,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 791,
											"end": 817,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 791,
											"end": 817,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 791,
											"end": 817,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 791,
											"end": 817,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 791,
											"end": 817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 986,
											"end": 1041,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 986,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1041,
											"name": "PUSH",
											"source": 5,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 986,
											"end": 1041,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 986,
											"end": 1041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6183,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6202,
											"end": 6209,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 6202,
											"end": 6216,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6210,
											"end": 6215,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6202,
											"end": 6216,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6202,
											"end": 6216,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6202,
											"end": 6216,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6202,
											"end": 6216,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6202,
											"end": 6216,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6202,
											"end": 6216,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6202,
											"end": 6216,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6202,
											"end": 6216,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6202,
											"end": 6216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6202,
											"end": 6216,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6202,
											"end": 6216,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6202,
											"end": 6216,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6202,
											"end": 6216,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6202,
											"end": 6216,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6202,
											"end": 6216,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6202,
											"end": 6233,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 6202,
											"end": 6233,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6202,
											"end": 6233,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6202,
											"end": 6233,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6202,
											"end": 6233,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6202,
											"end": 6233,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6202,
											"end": 6233,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6202,
											"end": 6233,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6202,
											"end": 6233,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6202,
											"end": 6233,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6202,
											"end": 6233,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 6202,
											"end": 6233,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6195,
											"end": 6233,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6195,
											"end": 6233,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6240,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 697,
											"end": 722,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 697,
											"end": 722,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 697,
											"end": 722,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 697,
											"end": 722,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 722,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 697,
											"end": 722,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 697,
											"end": 722,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 697,
											"end": 722,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 697,
											"end": 722,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 697,
											"end": 722,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 697,
											"end": 722,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 697,
											"end": 722,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 697,
											"end": 722,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 697,
											"end": 722,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 697,
											"end": 722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3829,
											"end": 5083,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 3829,
											"end": 5083,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3888,
											"end": 3909,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3912,
											"end": 3919,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3912,
											"end": 3931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3920,
											"end": 3930,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3912,
											"end": 3931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3912,
											"end": 3931,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3912,
											"end": 3931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3912,
											"end": 3931,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3912,
											"end": 3931,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3912,
											"end": 3931,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3912,
											"end": 3931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3912,
											"end": 3931,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3912,
											"end": 3931,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3912,
											"end": 3931,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3912,
											"end": 3931,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3912,
											"end": 3931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3912,
											"end": 3931,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3912,
											"end": 3931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3912,
											"end": 3931,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 3931,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 3931,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4017,
											"end": 4018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 4001,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3995,
											"end": 4014,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 4014,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3995,
											"end": 4014,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3995,
											"end": 4018,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4039,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3987,
											"end": 4039,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4039,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3987,
											"end": 4039,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4039,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3987,
											"end": 4039,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4039,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4039,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4039,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4039,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3987,
											"end": 4039,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4039,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3987,
											"end": 4039,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4039,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3987,
											"end": 4039,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4039,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3987,
											"end": 4039,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4039,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4039,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4039,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4039,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4039,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4039,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3987,
											"end": 4039,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4158,
											"end": 4164,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4158,
											"end": 4178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4158,
											"end": 4178,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4158,
											"end": 4178,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4139,
											"end": 4145,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4139,
											"end": 4155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4139,
											"end": 4155,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4139,
											"end": 4155,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4139,
											"end": 4178,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 4139,
											"end": 4178,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4139,
											"end": 4178,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4139,
											"end": 4178,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 4139,
											"end": 4178,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4139,
											"end": 4178,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 4139,
											"end": 4178,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4120,
											"end": 4135,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 4120,
											"end": 4178,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4120,
											"end": 4178,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4099,
											"end": 4231,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4099,
											"end": 4231,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4099,
											"end": 4231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4099,
											"end": 4231,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4099,
											"end": 4231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4099,
											"end": 4231,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4099,
											"end": 4231,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4099,
											"end": 4231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4099,
											"end": 4231,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4099,
											"end": 4231,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 4099,
											"end": 4231,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4099,
											"end": 4231,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 4099,
											"end": 4231,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4099,
											"end": 4231,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 4099,
											"end": 4231,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4099,
											"end": 4231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4099,
											"end": 4231,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4099,
											"end": 4231,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4099,
											"end": 4231,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4099,
											"end": 4231,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4099,
											"end": 4231,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4099,
											"end": 4231,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4099,
											"end": 4231,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4099,
											"end": 4231,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4305,
											"end": 4319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4322,
											"end": 4428,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 4351,
											"end": 4357,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4351,
											"end": 4370,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4370,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4402,
											"end": 4408,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4402,
											"end": 4418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4402,
											"end": 4418,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4402,
											"end": 4418,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4399,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4418,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 4384,
											"end": 4418,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4418,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4418,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 4384,
											"end": 4418,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4418,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 4384,
											"end": 4418,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4337,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 4322,
											"end": 4428,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4322,
											"end": 4428,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 4322,
											"end": 4428,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4305,
											"end": 4428,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4305,
											"end": 4428,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4517,
											"end": 4523,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4498,
											"end": 4513,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4498,
											"end": 4513,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4498,
											"end": 4523,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4498,
											"end": 4523,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4490,
											"end": 4552,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 4490,
											"end": 4552,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4490,
											"end": 4552,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4490,
											"end": 4552,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4490,
											"end": 4552,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4490,
											"end": 4552,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4490,
											"end": 4552,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4490,
											"end": 4552,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4490,
											"end": 4552,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4490,
											"end": 4552,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 4490,
											"end": 4552,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4490,
											"end": 4552,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 4490,
											"end": 4552,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4490,
											"end": 4552,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 4490,
											"end": 4552,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4490,
											"end": 4552,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4490,
											"end": 4552,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4490,
											"end": 4552,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4490,
											"end": 4552,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4490,
											"end": 4552,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4490,
											"end": 4552,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4490,
											"end": 4552,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4490,
											"end": 4552,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 4490,
											"end": 4552,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4668,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 4636,
											"end": 4646,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4648,
											"end": 4654,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4648,
											"end": 4667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 4667,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4648,
											"end": 4667,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4610,
											"end": 4622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4610,
											"end": 4622,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4622,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4622,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4610,
											"end": 4622,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4622,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4622,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4622,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4635,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4635,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 4610,
											"end": 4635,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4668,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4668,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4668,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4668,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4668,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4610,
											"end": 4668,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 4610,
											"end": 4668,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4765,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 4746,
											"end": 4756,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4758,
											"end": 4764,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4721,
											"end": 4732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4721,
											"end": 4732,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4732,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4732,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4721,
											"end": 4732,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4732,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4732,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4721,
											"end": 4732,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4721,
											"end": 4745,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4745,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 4721,
											"end": 4745,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4765,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4765,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4765,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4721,
											"end": 4765,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4765,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4765,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 4721,
											"end": 4765,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4842,
											"end": 4848,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4823,
											"end": 4838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4823,
											"end": 4848,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4848,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4848,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4848,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 4823,
											"end": 4848,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4848,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4848,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 4823,
											"end": 4848,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4848,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 4823,
											"end": 4848,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4848,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4848,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4848,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4848,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4848,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4848,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4848,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4925,
											"end": 4935,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4917,
											"end": 4965,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "F960DBF9E5D0682F7A298ED974E33A28B4464914B7A2BFAC12AE419A9AFEB280"
										},
										{
											"begin": 4937,
											"end": 4943,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 4956,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4937,
											"end": 4956,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4937,
											"end": 4956,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4958,
											"end": 4964,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4917,
											"end": 4965,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4965,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 4917,
											"end": 4965,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4965,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4965,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4965,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 4917,
											"end": 4965,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4965,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 4917,
											"end": 4965,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4917,
											"end": 4965,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4965,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4965,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4965,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4965,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4917,
											"end": 4965,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5012,
											"end": 5018,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5012,
											"end": 5031,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5035,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5035,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5035,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5035,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5071,
											"end": 5076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5051,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 5045,
											"end": 5068,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5076,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 5083,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 5083,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3829,
											"end": 5083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1844,
											"end": 1849,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1865,
											"end": 1869,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1829,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1802,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5902,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 5397,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5514,
											"end": 5521,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5670,
											"end": 5684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5720,
											"end": 5727,
											"name": "PUSH",
											"source": 5,
											"value": "278D00"
										},
										{
											"begin": 5704,
											"end": 5716,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5688,
											"end": 5701,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5688,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 5688,
											"end": 5716,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5688,
											"end": 5716,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5688,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 5688,
											"end": 5716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5688,
											"end": 5716,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 5688,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5687,
											"end": 5727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 5687,
											"end": 5727,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5687,
											"end": 5727,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5687,
											"end": 5727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 5687,
											"end": 5727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5687,
											"end": 5727,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 5687,
											"end": 5727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5670,
											"end": 5727,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5670,
											"end": 5727,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5806,
											"end": 5821,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5806,
											"end": 5821,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5797,
											"end": 5803,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5797,
											"end": 5821,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5793,
											"end": 5872,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5793,
											"end": 5872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 5793,
											"end": 5872,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5846,
											"end": 5861,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5846,
											"end": 5861,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5837,
											"end": 5861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5837,
											"end": 5861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5793,
											"end": 5872,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 5793,
											"end": 5872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5895,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5882,
											"end": 5895,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5882,
											"end": 5895,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5882,
											"end": 5895,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5397,
											"end": 5902,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5397,
											"end": 5902,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5397,
											"end": 5902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5397,
											"end": 5902,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5397,
											"end": 5902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1412,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 4631,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3359,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 4,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1499,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1025,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1093,
											"end": 1099,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1156,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1344,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1301,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1354,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1247,
											"end": 1364,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1403,
											"end": 1405,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1429,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 1474,
											"end": 1481,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1471,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1463,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1429,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1429,
											"end": 1482,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 1429,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1419,
											"end": 1482,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1419,
											"end": 1482,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1499,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1499,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1499,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1499,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1499,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1025,
											"end": 1499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1505,
											"end": 1623,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1505,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1592,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 1610,
											"end": 1615,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1592,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1592,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1592,
											"end": 1616,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 1592,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1587,
											"end": 1590,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1580,
											"end": 1617,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1505,
											"end": 1623,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1505,
											"end": 1623,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1505,
											"end": 1623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1629,
											"end": 1851,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1629,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1722,
											"end": 1726,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1762,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1749,
											"end": 1758,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1763,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1737,
											"end": 1763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1737,
											"end": 1763,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1841,
											"end": 1842,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1839,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1826,
											"end": 1843,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1817,
											"end": 1823,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1773,
											"end": 1844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1844,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1773,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1629,
											"end": 1851,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1629,
											"end": 1851,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1629,
											"end": 1851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1629,
											"end": 1851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1629,
											"end": 1851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1894,
											"end": 1901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1934,
											"end": 1976,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1927,
											"end": 1932,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 1977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1857,
											"end": 1983,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1857,
											"end": 1983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1989,
											"end": 2049,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1989,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2017,
											"end": 2020,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2038,
											"end": 2043,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2043,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2043,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1989,
											"end": 2049,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1989,
											"end": 2049,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1989,
											"end": 2049,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1989,
											"end": 2049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2055,
											"end": 2197,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2055,
											"end": 2197,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2138,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 2156,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 2165,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 2183,
											"end": 2188,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2165,
											"end": 2189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2189,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 2165,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2156,
											"end": 2190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2156,
											"end": 2190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2156,
											"end": 2190,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 2156,
											"end": 2190,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2138,
											"end": 2191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2191,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 2138,
											"end": 2191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2191,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2191,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2055,
											"end": 2197,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2055,
											"end": 2197,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2055,
											"end": 2197,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2055,
											"end": 2197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2203,
											"end": 2329,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2203,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2262,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 2317,
											"end": 2322,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2286,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2323,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 2286,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2273,
											"end": 2323,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2273,
											"end": 2323,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2203,
											"end": 2329,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2203,
											"end": 2329,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2203,
											"end": 2329,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2203,
											"end": 2329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2335,
											"end": 2475,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2335,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2408,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 2463,
											"end": 2468,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2432,
											"end": 2469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2469,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 2432,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2419,
											"end": 2469,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2419,
											"end": 2469,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2335,
											"end": 2475,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2335,
											"end": 2475,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2335,
											"end": 2475,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2335,
											"end": 2475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2640,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2481,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 2627,
											"end": 2632,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2582,
											"end": 2633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2582,
											"end": 2633,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 2582,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2577,
											"end": 2580,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2634,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2640,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2640,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2481,
											"end": 2640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2896,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2646,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2753,
											"end": 2757,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2791,
											"end": 2793,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2780,
											"end": 2789,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2776,
											"end": 2794,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2794,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2794,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 2886,
											"end": 2887,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2875,
											"end": 2884,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2871,
											"end": 2888,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2862,
											"end": 2868,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2804,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 2889,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 2804,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2896,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2896,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2896,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2896,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 2998,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2902,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2939,
											"end": 2946,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 2986,
											"end": 2991,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2968,
											"end": 2992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2992,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 2968,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 2992,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 2992,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 2998,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 2998,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 2998,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 2998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3126,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 3004,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3077,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 3095,
											"end": 3100,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3077,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3077,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3077,
											"end": 3101,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 3077,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3070,
											"end": 3075,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3067,
											"end": 3102,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 3057,
											"end": 3120,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3116,
											"end": 3117,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3113,
											"end": 3114,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 3118,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3120,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 3057,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3271,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 3132,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3178,
											"end": 3183,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3216,
											"end": 3222,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3203,
											"end": 3223,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3194,
											"end": 3223,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3194,
											"end": 3223,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3232,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 3259,
											"end": 3264,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3232,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 3232,
											"end": 3265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3232,
											"end": 3265,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 3232,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3271,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3271,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3271,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3271,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3277,
											"end": 3606,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 3277,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3336,
											"end": 3342,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3385,
											"end": 3387,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3373,
											"end": 3382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3360,
											"end": 3383,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3356,
											"end": 3388,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3472,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 3353,
											"end": 3472,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3391,
											"end": 3470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 3391,
											"end": 3470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 3391,
											"end": 3470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3391,
											"end": 3470,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 3391,
											"end": 3470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3472,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 3353,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3511,
											"end": 3512,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 3581,
											"end": 3588,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 3578,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3570,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3557,
											"end": 3579,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 3536,
											"end": 3589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3589,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 3536,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3589,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3526,
											"end": 3589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3482,
											"end": 3599,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3277,
											"end": 3606,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3277,
											"end": 3606,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3277,
											"end": 3606,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3277,
											"end": 3606,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3277,
											"end": 3606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3612,
											"end": 3702,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 3612,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3646,
											"end": 3653,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3689,
											"end": 3694,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3682,
											"end": 3695,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3696,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3664,
											"end": 3696,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3664,
											"end": 3696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3612,
											"end": 3702,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3612,
											"end": 3702,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3612,
											"end": 3702,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3612,
											"end": 3702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3817,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 3708,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3789,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 3804,
											"end": 3809,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3789,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 3789,
											"end": 3810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3789,
											"end": 3810,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 3789,
											"end": 3810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3784,
											"end": 3787,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3777,
											"end": 3811,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3817,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3817,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3708,
											"end": 3817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 4364,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 3823,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3994,
											"end": 3998,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4035,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4021,
											"end": 4030,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4017,
											"end": 4036,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4009,
											"end": 4036,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4009,
											"end": 4036,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 4114,
											"end": 4115,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4112,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4099,
											"end": 4116,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4090,
											"end": 4096,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4046,
											"end": 4117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4117,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 4046,
											"end": 4117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4127,
											"end": 4199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 4195,
											"end": 4197,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4184,
											"end": 4193,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4180,
											"end": 4198,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4171,
											"end": 4177,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4127,
											"end": 4199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4127,
											"end": 4199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4127,
											"end": 4199,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 4127,
											"end": 4199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4209,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 4277,
											"end": 4279,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4266,
											"end": 4275,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4262,
											"end": 4280,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4253,
											"end": 4259,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4209,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4209,
											"end": 4281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4209,
											"end": 4281,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 4209,
											"end": 4281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4291,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 4353,
											"end": 4355,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4342,
											"end": 4351,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4338,
											"end": 4356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4329,
											"end": 4335,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4291,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 4291,
											"end": 4357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4291,
											"end": 4357,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 4291,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 4364,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 4364,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 4364,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 4364,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 4364,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 4364,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 4364,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 4364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4370,
											"end": 4580,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 4370,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 4461,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4495,
											"end": 4497,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4484,
											"end": 4493,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4480,
											"end": 4498,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4472,
											"end": 4498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4472,
											"end": 4498,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 4570,
											"end": 4571,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4559,
											"end": 4568,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4555,
											"end": 4572,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4546,
											"end": 4552,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 4508,
											"end": 4573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4508,
											"end": 4573,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 4508,
											"end": 4573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4370,
											"end": 4580,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4370,
											"end": 4580,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4370,
											"end": 4580,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4370,
											"end": 4580,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4370,
											"end": 4580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4586,
											"end": 4766,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 4586,
											"end": 4766,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4634,
											"end": 4711,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4632,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4624,
											"end": 4712,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4731,
											"end": 4735,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 4728,
											"end": 4729,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4721,
											"end": 4736,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4755,
											"end": 4759,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4752,
											"end": 4753,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4745,
											"end": 4760,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4772,
											"end": 4963,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 4772,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4812,
											"end": 4815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4831,
											"end": 4851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 4849,
											"end": 4850,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4831,
											"end": 4851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 4831,
											"end": 4851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4831,
											"end": 4851,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 4831,
											"end": 4851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4826,
											"end": 4851,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4826,
											"end": 4851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4865,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 4883,
											"end": 4884,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4865,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 4865,
											"end": 4885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4865,
											"end": 4885,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 4865,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 4885,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 4885,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4908,
											"end": 4909,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4905,
											"end": 4906,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4901,
											"end": 4910,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4894,
											"end": 4910,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4894,
											"end": 4910,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4929,
											"end": 4932,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4927,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4933,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 4956,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 4920,
											"end": 4956,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4936,
											"end": 4954,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 4936,
											"end": 4954,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 4936,
											"end": 4954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4936,
											"end": 4954,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 4936,
											"end": 4954,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 4956,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 4920,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4772,
											"end": 4963,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4772,
											"end": 4963,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4772,
											"end": 4963,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4772,
											"end": 4963,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4772,
											"end": 4963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5138,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 4969,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5053,
											"end": 5064,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5087,
											"end": 5093,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5082,
											"end": 5085,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5075,
											"end": 5094,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5127,
											"end": 5131,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5122,
											"end": 5125,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5118,
											"end": 5132,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5103,
											"end": 5132,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5103,
											"end": 5132,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5138,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5138,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5138,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5138,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 5138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5144,
											"end": 5308,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 5144,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5300,
											"name": "PUSH",
											"source": 6,
											"value": "416C7265616479207374616B6564000000000000000000000000000000000000"
										},
										{
											"begin": 5280,
											"end": 5281,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5272,
											"end": 5278,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5268,
											"end": 5282,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5261,
											"end": 5301,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5144,
											"end": 5308,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5144,
											"end": 5308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5680,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 5314,
											"end": 5680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5456,
											"end": 5459,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5477,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 5541,
											"end": 5543,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 5536,
											"end": 5539,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5477,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 5477,
											"end": 5544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5477,
											"end": 5544,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 5477,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5544,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5544,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5553,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 5642,
											"end": 5645,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5553,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 5553,
											"end": 5646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5553,
											"end": 5646,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 5553,
											"end": 5646,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5673,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5666,
											"end": 5669,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5662,
											"end": 5674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5655,
											"end": 5674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5655,
											"end": 5674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5680,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5686,
											"end": 6105,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 5686,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5852,
											"end": 5856,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5890,
											"end": 5892,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5879,
											"end": 5888,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 5893,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5867,
											"end": 5893,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5867,
											"end": 5893,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5939,
											"end": 5948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5929,
											"end": 5949,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5925,
											"end": 5926,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5914,
											"end": 5923,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5910,
											"end": 5927,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5903,
											"end": 5950,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5967,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 6093,
											"end": 6097,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5967,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 5967,
											"end": 6098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5967,
											"end": 6098,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 5967,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 6098,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 6098,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5686,
											"end": 6105,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5686,
											"end": 6105,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5686,
											"end": 6105,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5686,
											"end": 6105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6111,
											"end": 6443,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 6111,
											"end": 6443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6232,
											"end": 6236,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6270,
											"end": 6272,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6259,
											"end": 6268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6255,
											"end": 6273,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6247,
											"end": 6273,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6247,
											"end": 6273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6283,
											"end": 6354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 6351,
											"end": 6352,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6340,
											"end": 6349,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6336,
											"end": 6353,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6327,
											"end": 6333,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6283,
											"end": 6354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 6283,
											"end": 6354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6283,
											"end": 6354,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 6283,
											"end": 6354,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6364,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 6432,
											"end": 6434,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6421,
											"end": 6430,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6417,
											"end": 6435,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6408,
											"end": 6414,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6364,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 6364,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6364,
											"end": 6436,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 6364,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6111,
											"end": 6443,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6111,
											"end": 6443,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6111,
											"end": 6443,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6111,
											"end": 6443,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6111,
											"end": 6443,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6111,
											"end": 6443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6449,
											"end": 6615,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 6449,
											"end": 6615,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6589,
											"end": 6607,
											"name": "PUSH",
											"source": 6,
											"value": "4E6F20746F6B656E73207374616B656400000000000000000000000000000000"
										},
										{
											"begin": 6585,
											"end": 6586,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6577,
											"end": 6583,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6573,
											"end": 6587,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6566,
											"end": 6608,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6449,
											"end": 6615,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6449,
											"end": 6615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6621,
											"end": 6987,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 6621,
											"end": 6987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6763,
											"end": 6766,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6784,
											"end": 6851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 6848,
											"end": 6850,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 6843,
											"end": 6846,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6784,
											"end": 6851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 6784,
											"end": 6851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6784,
											"end": 6851,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 6784,
											"end": 6851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6777,
											"end": 6851,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6777,
											"end": 6851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6860,
											"end": 6953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 6949,
											"end": 6952,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6860,
											"end": 6953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 6860,
											"end": 6953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6860,
											"end": 6953,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 6860,
											"end": 6953,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6978,
											"end": 6980,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6973,
											"end": 6976,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6969,
											"end": 6981,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6962,
											"end": 6981,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6962,
											"end": 6981,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6621,
											"end": 6987,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6621,
											"end": 6987,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6621,
											"end": 6987,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6621,
											"end": 6987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6993,
											"end": 7412,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 6993,
											"end": 7412,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7159,
											"end": 7163,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7197,
											"end": 7199,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7186,
											"end": 7195,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7182,
											"end": 7200,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7174,
											"end": 7200,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7174,
											"end": 7200,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7246,
											"end": 7255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7244,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7236,
											"end": 7256,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7232,
											"end": 7233,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7230,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7217,
											"end": 7234,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7210,
											"end": 7257,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7274,
											"end": 7405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 7400,
											"end": 7404,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7274,
											"end": 7405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 7274,
											"end": 7405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7274,
											"end": 7405,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 7274,
											"end": 7405,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7266,
											"end": 7405,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7266,
											"end": 7405,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6993,
											"end": 7412,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6993,
											"end": 7412,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6993,
											"end": 7412,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6993,
											"end": 7412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7418,
											"end": 7595,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 7418,
											"end": 7595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7558,
											"end": 7587,
											"name": "PUSH",
											"source": 6,
											"value": "5374616B696E6720706572696F64206E6F7420636F6D706C6574650000000000"
										},
										{
											"begin": 7554,
											"end": 7555,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7546,
											"end": 7552,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7542,
											"end": 7556,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7535,
											"end": 7588,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7418,
											"end": 7595,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7418,
											"end": 7595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7601,
											"end": 7967,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 7601,
											"end": 7967,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7743,
											"end": 7746,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7764,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 7828,
											"end": 7830,
											"name": "PUSH",
											"source": 6,
											"value": "1B"
										},
										{
											"begin": 7823,
											"end": 7826,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7764,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 7764,
											"end": 7831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7764,
											"end": 7831,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 7764,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7757,
											"end": 7831,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7757,
											"end": 7831,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7840,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 7929,
											"end": 7932,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7840,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 7840,
											"end": 7933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7840,
											"end": 7933,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 7840,
											"end": 7933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7958,
											"end": 7960,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7953,
											"end": 7956,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7949,
											"end": 7961,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7942,
											"end": 7961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7942,
											"end": 7961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7601,
											"end": 7967,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7601,
											"end": 7967,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7601,
											"end": 7967,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7601,
											"end": 7967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7973,
											"end": 8392,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 7973,
											"end": 8392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8139,
											"end": 8143,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8179,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8166,
											"end": 8175,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8162,
											"end": 8180,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8154,
											"end": 8180,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8154,
											"end": 8180,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8226,
											"end": 8235,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8220,
											"end": 8224,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8216,
											"end": 8236,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8212,
											"end": 8213,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8201,
											"end": 8210,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8197,
											"end": 8214,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8190,
											"end": 8237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 8380,
											"end": 8384,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 8254,
											"end": 8385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8385,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 8254,
											"end": 8385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8246,
											"end": 8385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8246,
											"end": 8385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7973,
											"end": 8392,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7973,
											"end": 8392,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7973,
											"end": 8392,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7973,
											"end": 8392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8398,
											"end": 8592,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 8398,
											"end": 8592,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8438,
											"end": 8442,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8458,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 8476,
											"end": 8477,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8458,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 8458,
											"end": 8478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8458,
											"end": 8478,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 8458,
											"end": 8478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8453,
											"end": 8478,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8453,
											"end": 8478,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8492,
											"end": 8512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 8510,
											"end": 8511,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8492,
											"end": 8512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 8492,
											"end": 8512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8492,
											"end": 8512,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 8492,
											"end": 8512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8487,
											"end": 8512,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8487,
											"end": 8512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8536,
											"end": 8537,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8533,
											"end": 8534,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8529,
											"end": 8538,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8521,
											"end": 8538,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8521,
											"end": 8538,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8560,
											"end": 8561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8554,
											"end": 8558,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8551,
											"end": 8562,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8548,
											"end": 8585,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8548,
											"end": 8585,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 8548,
											"end": 8585,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8565,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 8565,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 8565,
											"end": 8583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8565,
											"end": 8583,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 8565,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8548,
											"end": 8585,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 8548,
											"end": 8585,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8398,
											"end": 8592,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8398,
											"end": 8592,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8398,
											"end": 8592,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8398,
											"end": 8592,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8398,
											"end": 8592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8598,
											"end": 8772,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 8598,
											"end": 8772,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8738,
											"end": 8764,
											"name": "PUSH",
											"source": 6,
											"value": "496E73756666696369656E742072657761726420706F6F6C0000000000000000"
										},
										{
											"begin": 8734,
											"end": 8735,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8726,
											"end": 8732,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8722,
											"end": 8736,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8765,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8598,
											"end": 8772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8598,
											"end": 8772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8778,
											"end": 9144,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 8778,
											"end": 9144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8920,
											"end": 8923,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8941,
											"end": 9008,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 9005,
											"end": 9007,
											"name": "PUSH",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 9000,
											"end": 9003,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8941,
											"end": 9008,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 8941,
											"end": 9008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8941,
											"end": 9008,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 8941,
											"end": 9008,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 9008,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8934,
											"end": 9008,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9017,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 9106,
											"end": 9109,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9017,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 9017,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9017,
											"end": 9110,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 9017,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9135,
											"end": 9137,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9130,
											"end": 9133,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9126,
											"end": 9138,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9119,
											"end": 9138,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9119,
											"end": 9138,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8778,
											"end": 9144,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8778,
											"end": 9144,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8778,
											"end": 9144,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8778,
											"end": 9144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9150,
											"end": 9569,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 9150,
											"end": 9569,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9316,
											"end": 9320,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9354,
											"end": 9356,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9343,
											"end": 9352,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9339,
											"end": 9357,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9331,
											"end": 9357,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9331,
											"end": 9357,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9403,
											"end": 9412,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9397,
											"end": 9401,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9393,
											"end": 9413,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9389,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9387,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9374,
											"end": 9391,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9367,
											"end": 9414,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9431,
											"end": 9562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 9557,
											"end": 9561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9431,
											"end": 9562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 9431,
											"end": 9562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9431,
											"end": 9562,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 9431,
											"end": 9562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9423,
											"end": 9562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9423,
											"end": 9562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9150,
											"end": 9569,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9150,
											"end": 9569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9150,
											"end": 9569,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9150,
											"end": 9569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9575,
											"end": 9693,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 9575,
											"end": 9693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9662,
											"end": 9686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 9680,
											"end": 9685,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9662,
											"end": 9686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 9662,
											"end": 9686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9662,
											"end": 9686,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 9662,
											"end": 9686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9657,
											"end": 9660,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9650,
											"end": 9687,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9575,
											"end": 9693,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9575,
											"end": 9693,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9575,
											"end": 9693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9699,
											"end": 10141,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 9699,
											"end": 10141,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9848,
											"end": 9852,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9886,
											"end": 9888,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 9875,
											"end": 9884,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9871,
											"end": 9889,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9863,
											"end": 9889,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9863,
											"end": 9889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9899,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 9967,
											"end": 9968,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9956,
											"end": 9965,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9952,
											"end": 9969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9943,
											"end": 9949,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9899,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 9899,
											"end": 9970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9899,
											"end": 9970,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 9899,
											"end": 9970,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9980,
											"end": 10052,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 10048,
											"end": 10050,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10037,
											"end": 10046,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10033,
											"end": 10051,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10024,
											"end": 10030,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9980,
											"end": 10052,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 9980,
											"end": 10052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9980,
											"end": 10052,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 9980,
											"end": 10052,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10062,
											"end": 10134,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 10130,
											"end": 10132,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10119,
											"end": 10128,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10115,
											"end": 10133,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10106,
											"end": 10112,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10062,
											"end": 10134,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 10062,
											"end": 10134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10062,
											"end": 10134,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 10062,
											"end": 10134,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9699,
											"end": 10141,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 9699,
											"end": 10141,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9699,
											"end": 10141,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9699,
											"end": 10141,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9699,
											"end": 10141,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9699,
											"end": 10141,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9699,
											"end": 10141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10147,
											"end": 10328,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 10147,
											"end": 10328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10287,
											"end": 10320,
											"name": "PUSH",
											"source": 6,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 10283,
											"end": 10284,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10275,
											"end": 10281,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10271,
											"end": 10285,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10264,
											"end": 10321,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10147,
											"end": 10328,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10147,
											"end": 10328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10334,
											"end": 10700,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 10334,
											"end": 10700,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10476,
											"end": 10479,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10497,
											"end": 10564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 10561,
											"end": 10563,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 10556,
											"end": 10559,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10497,
											"end": 10564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 10497,
											"end": 10564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10497,
											"end": 10564,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 10497,
											"end": 10564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10490,
											"end": 10564,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10490,
											"end": 10564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10573,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 10662,
											"end": 10665,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10573,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 10573,
											"end": 10666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10573,
											"end": 10666,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 10573,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10691,
											"end": 10693,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10686,
											"end": 10689,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10682,
											"end": 10694,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10675,
											"end": 10694,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10675,
											"end": 10694,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10334,
											"end": 10700,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10334,
											"end": 10700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10334,
											"end": 10700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10334,
											"end": 10700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10706,
											"end": 11125,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 10706,
											"end": 11125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10872,
											"end": 10876,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10910,
											"end": 10912,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10899,
											"end": 10908,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10895,
											"end": 10913,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10887,
											"end": 10913,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10887,
											"end": 10913,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10959,
											"end": 10968,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10953,
											"end": 10957,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10949,
											"end": 10969,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 10946,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10934,
											"end": 10943,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10930,
											"end": 10947,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10923,
											"end": 10970,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10987,
											"end": 11118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 11113,
											"end": 11117,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10987,
											"end": 11118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 10987,
											"end": 11118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10987,
											"end": 11118,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 10987,
											"end": 11118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10979,
											"end": 11118,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10979,
											"end": 11118,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10706,
											"end": 11125,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10706,
											"end": 11125,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10706,
											"end": 11125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10706,
											"end": 11125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11131,
											"end": 11541,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 11131,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11171,
											"end": 11178,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11194,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 11212,
											"end": 11213,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11194,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 11194,
											"end": 11214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11194,
											"end": 11214,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 11194,
											"end": 11214,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11189,
											"end": 11214,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11189,
											"end": 11214,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11228,
											"end": 11248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 11246,
											"end": 11247,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11228,
											"end": 11248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 11228,
											"end": 11248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11228,
											"end": 11248,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 11228,
											"end": 11248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11223,
											"end": 11248,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11223,
											"end": 11248,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11283,
											"end": 11284,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11280,
											"end": 11281,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11276,
											"end": 11285,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11305,
											"end": 11335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 11323,
											"end": 11334,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11305,
											"end": 11335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 11305,
											"end": 11335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11305,
											"end": 11335,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 11305,
											"end": 11335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11294,
											"end": 11335,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11294,
											"end": 11335,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11484,
											"end": 11485,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11475,
											"end": 11482,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11471,
											"end": 11486,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11468,
											"end": 11469,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11465,
											"end": 11487,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 11445,
											"end": 11446,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11438,
											"end": 11447,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11418,
											"end": 11501,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 11395,
											"end": 11534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 11395,
											"end": 11534,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11514,
											"end": 11532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 11514,
											"end": 11532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 11514,
											"end": 11532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11514,
											"end": 11532,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 11514,
											"end": 11532,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11395,
											"end": 11534,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 11395,
											"end": 11534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11179,
											"end": 11541,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11131,
											"end": 11541,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11131,
											"end": 11541,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11131,
											"end": 11541,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11131,
											"end": 11541,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11131,
											"end": 11541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11547,
											"end": 11727,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 11547,
											"end": 11727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11595,
											"end": 11672,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11592,
											"end": 11593,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11585,
											"end": 11673,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11692,
											"end": 11696,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 11689,
											"end": 11690,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11682,
											"end": 11697,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11716,
											"end": 11720,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 11713,
											"end": 11714,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11706,
											"end": 11721,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11733,
											"end": 11918,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 11733,
											"end": 11918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11773,
											"end": 11774,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11790,
											"end": 11810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 11808,
											"end": 11809,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11790,
											"end": 11810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 11790,
											"end": 11810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11790,
											"end": 11810,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 11790,
											"end": 11810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11785,
											"end": 11810,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11785,
											"end": 11810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11824,
											"end": 11844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 11842,
											"end": 11843,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11824,
											"end": 11844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 11824,
											"end": 11844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11824,
											"end": 11844,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 11824,
											"end": 11844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11819,
											"end": 11844,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11819,
											"end": 11844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11863,
											"end": 11864,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11853,
											"end": 11888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 11853,
											"end": 11888,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11868,
											"end": 11886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 11868,
											"end": 11886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 11868,
											"end": 11886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11868,
											"end": 11886,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 11868,
											"end": 11886,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11853,
											"end": 11888,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 11853,
											"end": 11888,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11910,
											"end": 11911,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11907,
											"end": 11908,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11903,
											"end": 11912,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11898,
											"end": 11912,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11898,
											"end": 11912,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11733,
											"end": 11918,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11733,
											"end": 11918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11733,
											"end": 11918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11733,
											"end": 11918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11733,
											"end": 11918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11924,
											"end": 12256,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 11924,
											"end": 12256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12045,
											"end": 12049,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12083,
											"end": 12085,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12072,
											"end": 12081,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12068,
											"end": 12086,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12060,
											"end": 12086,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12060,
											"end": 12086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12096,
											"end": 12167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 12164,
											"end": 12165,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12153,
											"end": 12162,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12149,
											"end": 12166,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12140,
											"end": 12146,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 12096,
											"end": 12167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 12096,
											"end": 12167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12096,
											"end": 12167,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 12096,
											"end": 12167,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12177,
											"end": 12249,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 12245,
											"end": 12247,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12234,
											"end": 12243,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12230,
											"end": 12248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12221,
											"end": 12227,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12177,
											"end": 12249,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 12177,
											"end": 12249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12177,
											"end": 12249,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 12177,
											"end": 12249,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11924,
											"end": 12256,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 11924,
											"end": 12256,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11924,
											"end": 12256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11924,
											"end": 12256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11924,
											"end": 12256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11924,
											"end": 12256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12262,
											"end": 12378,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 12262,
											"end": 12378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12332,
											"end": 12353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 12347,
											"end": 12352,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12332,
											"end": 12353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 12332,
											"end": 12353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12332,
											"end": 12353,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 12332,
											"end": 12353,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12325,
											"end": 12330,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12322,
											"end": 12354,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 12312,
											"end": 12372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 12312,
											"end": 12372,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12368,
											"end": 12369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12365,
											"end": 12366,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12358,
											"end": 12370,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12312,
											"end": 12372,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 12312,
											"end": 12372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12262,
											"end": 12378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12262,
											"end": 12378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12384,
											"end": 12521,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 12384,
											"end": 12521,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12438,
											"end": 12443,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12469,
											"end": 12475,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12463,
											"end": 12476,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12454,
											"end": 12476,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12454,
											"end": 12476,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12485,
											"end": 12515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 12509,
											"end": 12514,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12485,
											"end": 12515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 12485,
											"end": 12515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12485,
											"end": 12515,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 12485,
											"end": 12515,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12384,
											"end": 12521,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12384,
											"end": 12521,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12384,
											"end": 12521,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12384,
											"end": 12521,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12384,
											"end": 12521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12527,
											"end": 12872,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 12527,
											"end": 12872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12594,
											"end": 12600,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12643,
											"end": 12645,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12631,
											"end": 12640,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12622,
											"end": 12629,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12618,
											"end": 12641,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12614,
											"end": 12646,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 12611,
											"end": 12730,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12611,
											"end": 12730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 12611,
											"end": 12730,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12649,
											"end": 12728,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 12649,
											"end": 12728,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 12649,
											"end": 12728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12649,
											"end": 12728,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 12649,
											"end": 12728,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12611,
											"end": 12730,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 12611,
											"end": 12730,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12769,
											"end": 12770,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12794,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 12847,
											"end": 12854,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12838,
											"end": 12844,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12827,
											"end": 12836,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 12823,
											"end": 12845,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12794,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 12794,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12794,
											"end": 12855,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 12794,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12784,
											"end": 12855,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12784,
											"end": 12855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12740,
											"end": 12865,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12527,
											"end": 12872,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12527,
											"end": 12872,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12527,
											"end": 12872,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12527,
											"end": 12872,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12527,
											"end": 12872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12878,
											"end": 13100,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 12878,
											"end": 13100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12971,
											"end": 12975,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13009,
											"end": 13011,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12998,
											"end": 13007,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12994,
											"end": 13012,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12986,
											"end": 13012,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12986,
											"end": 13012,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13022,
											"end": 13093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 13090,
											"end": 13091,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13079,
											"end": 13088,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13075,
											"end": 13092,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13066,
											"end": 13072,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13022,
											"end": 13093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 13022,
											"end": 13093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13022,
											"end": 13093,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 13022,
											"end": 13093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12878,
											"end": 13100,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12878,
											"end": 13100,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12878,
											"end": 13100,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12878,
											"end": 13100,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12878,
											"end": 13100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13106,
											"end": 13204,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 13106,
											"end": 13204,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13157,
											"end": 13163,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13191,
											"end": 13196,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13185,
											"end": 13197,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13175,
											"end": 13197,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13175,
											"end": 13197,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13106,
											"end": 13204,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13106,
											"end": 13204,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13106,
											"end": 13204,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13106,
											"end": 13204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13210,
											"end": 13357,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 13210,
											"end": 13357,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13311,
											"end": 13322,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13348,
											"end": 13351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13333,
											"end": 13351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13333,
											"end": 13351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13210,
											"end": 13357,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13210,
											"end": 13357,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13210,
											"end": 13357,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13210,
											"end": 13357,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13210,
											"end": 13357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13363,
											"end": 13502,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 13363,
											"end": 13502,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13452,
											"end": 13458,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13447,
											"end": 13450,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13442,
											"end": 13445,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13436,
											"end": 13459,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 13493,
											"end": 13494,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13484,
											"end": 13490,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13479,
											"end": 13482,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13475,
											"end": 13491,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13468,
											"end": 13495,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13363,
											"end": 13502,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13363,
											"end": 13502,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13363,
											"end": 13502,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13363,
											"end": 13502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13508,
											"end": 13894,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 13508,
											"end": 13894,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13612,
											"end": 13615,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13640,
											"end": 13678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 13672,
											"end": 13677,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13640,
											"end": 13678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 13640,
											"end": 13678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13640,
											"end": 13678,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 13640,
											"end": 13678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13694,
											"end": 13782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 13775,
											"end": 13781,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13770,
											"end": 13773,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 13694,
											"end": 13782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 13694,
											"end": 13782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13694,
											"end": 13782,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 13694,
											"end": 13782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13687,
											"end": 13782,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 13687,
											"end": 13782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13791,
											"end": 13856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 13849,
											"end": 13855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13844,
											"end": 13847,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 13837,
											"end": 13841,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13830,
											"end": 13835,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 13826,
											"end": 13842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13791,
											"end": 13856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 13791,
											"end": 13856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13791,
											"end": 13856,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 13791,
											"end": 13856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13881,
											"end": 13887,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13876,
											"end": 13879,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13872,
											"end": 13888,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13865,
											"end": 13888,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13865,
											"end": 13888,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13616,
											"end": 13894,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13508,
											"end": 13894,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13508,
											"end": 13894,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13508,
											"end": 13894,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13508,
											"end": 13894,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13508,
											"end": 13894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13900,
											"end": 14171,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 13900,
											"end": 14171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14030,
											"end": 14033,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14052,
											"end": 14145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 14141,
											"end": 14144,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14132,
											"end": 14138,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 14052,
											"end": 14145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 14052,
											"end": 14145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14052,
											"end": 14145,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 14052,
											"end": 14145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14045,
											"end": 14145,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14045,
											"end": 14145,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14162,
											"end": 14165,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14155,
											"end": 14165,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14155,
											"end": 14165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13900,
											"end": 14171,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13900,
											"end": 14171,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13900,
											"end": 14171,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13900,
											"end": 14171,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13900,
											"end": 14171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"contracts/StakingAirdrop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"PREMIUM_THRESHOLD()": "9af01c2d",
							"availableReward()": "4ad84b34",
							"fundRewardPool(uint256)": "1d583e0d",
							"getStakerInfo(address)": "733bdef0",
							"hasPremiumAccess(address)": "a67e12a8",
							"rewardToken()": "f7c618c1",
							"stakeTokens(uint256,uint256)": "3b7b6188",
							"stakers(address)": "9168ae72",
							"stakingToken()": "72f702f3",
							"totalReward()": "750142e6",
							"unstakeAndClaim()": "f985021a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_rewardToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakingPeriod\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PREMIUM_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"availableReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"fundRewardPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getStakerInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasPremium\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"hasPremiumAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stakingPeriod\",\"type\":\"uint256\"}],\"name\":\"stakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasPremiumAccess\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstakeAndClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract implements a staking-based airdrop system. Users can stake ERC20 tokens,  earn rewards based on the staking duration, and get premium access if they stake above a threshold.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"Stake(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of tokens staked\",\"stakingPeriod\":\"The duration for which tokens are staked\",\"user\":\"The address of the user staking tokens\"}},\"Unstake(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of tokens unstaked\",\"reward\":\"The reward tokens claimed by the user\",\"user\":\"The address of the user unstaking tokens\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor to initialize staking and reward tokens\",\"params\":{\"_rewardToken\":\"The ERC20 token used for rewards\",\"_stakingToken\":\"The ERC20 token used for staking\"}},\"fundRewardPool(uint256)\":{\"params\":{\"_amount\":\"The amount of reward tokens to add to the pool\"}},\"getStakerInfo(address)\":{\"params\":{\"_user\":\"The address of the user\"},\"returns\":{\"amountStaked\":\"The amount of tokens staked by the user\",\"hasPremium\":\"True if the user has premium access, false otherwise\",\"stakingPeriod\":\"The duration for which the user staked tokens\",\"startTime\":\"The time when the staking began\"}},\"hasPremiumAccess(address)\":{\"params\":{\"_user\":\"The address of the user\"},\"returns\":{\"_0\":\"True if the user has premium access, false otherwise\"}},\"stakeTokens(uint256,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to stake\",\"_stakingPeriod\":\"The duration (in seconds) for which tokens are staked\"}}},\"title\":\"StakingAirdrop\",\"version\":1},\"userdoc\":{\"events\":{\"Stake(address,uint256,uint256)\":{\"notice\":\"Event emitted when a user stakes tokens\"},\"Unstake(address,uint256,uint256)\":{\"notice\":\"Event emitted when a user unstakes tokens and claims rewards\"}},\"kind\":\"user\",\"methods\":{\"PREMIUM_THRESHOLD()\":{\"notice\":\"Minimum amount of tokens required for premium access\"},\"availableReward()\":{\"notice\":\"Available rewards remaining in the pool\"},\"fundRewardPool(uint256)\":{\"notice\":\"Fund the reward pool with reward tokens\"},\"getStakerInfo(address)\":{\"notice\":\"Get staker information for a specific user\"},\"hasPremiumAccess(address)\":{\"notice\":\"Check if a user has premium access based on their staked amount\"},\"rewardToken()\":{\"notice\":\"ERC20 token used for rewards\"},\"stakeTokens(uint256,uint256)\":{\"notice\":\"Stake tokens into the staking pool\"},\"stakers(address)\":{\"notice\":\"Mapping from user address to staker information\"},\"stakingToken()\":{\"notice\":\"ERC20 token used for staking\"},\"totalReward()\":{\"notice\":\"Total amount of rewards available in the pool\"},\"unstakeAndClaim()\":{\"notice\":\"Unstake tokens and claim rewards after the staking period ends\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingAirdrop.sol\":\"StakingAirdrop\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"contracts/StakingAirdrop.sol\":{\"keccak256\":\"0xee986a4b725286a541645afe13e400f26d8199f0e441e4be0374a8d2ef1b1511\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6821d366c3083cea335493c5588d021b58b95631cc770894f95cce981aea6bac\",\"dweb:/ipfs/QmYiVdymcJX4aGt1nobPSnSoVSYw8R8W6P86n2SetQHxdw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "contracts/StakingAirdrop.sol:StakingAirdrop",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 736,
								"contract": "contracts/StakingAirdrop.sol:StakingAirdrop",
								"label": "stakingToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)142"
							},
							{
								"astId": 740,
								"contract": "contracts/StakingAirdrop.sol:StakingAirdrop",
								"label": "rewardToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)142"
							},
							{
								"astId": 743,
								"contract": "contracts/StakingAirdrop.sol:StakingAirdrop",
								"label": "totalReward",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 746,
								"contract": "contracts/StakingAirdrop.sol:StakingAirdrop",
								"label": "availableReward",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 768,
								"contract": "contracts/StakingAirdrop.sol:StakingAirdrop",
								"label": "stakers",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(Staker)762_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)142": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Staker)762_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StakingAirdrop.Staker)",
								"numberOfBytes": "32",
								"value": "t_struct(Staker)762_storage"
							},
							"t_struct(Staker)762_storage": {
								"encoding": "inplace",
								"label": "struct StakingAirdrop.Staker",
								"members": [
									{
										"astId": 755,
										"contract": "contracts/StakingAirdrop.sol:StakingAirdrop",
										"label": "amountStaked",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 757,
										"contract": "contracts/StakingAirdrop.sol:StakingAirdrop",
										"label": "stakingPeriod",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 759,
										"contract": "contracts/StakingAirdrop.sol:StakingAirdrop",
										"label": "startTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 761,
										"contract": "contracts/StakingAirdrop.sol:StakingAirdrop",
										"label": "hasPremiumAccess",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"Stake(address,uint256,uint256)": {
								"notice": "Event emitted when a user stakes tokens"
							},
							"Unstake(address,uint256,uint256)": {
								"notice": "Event emitted when a user unstakes tokens and claims rewards"
							}
						},
						"kind": "user",
						"methods": {
							"PREMIUM_THRESHOLD()": {
								"notice": "Minimum amount of tokens required for premium access"
							},
							"availableReward()": {
								"notice": "Available rewards remaining in the pool"
							},
							"fundRewardPool(uint256)": {
								"notice": "Fund the reward pool with reward tokens"
							},
							"getStakerInfo(address)": {
								"notice": "Get staker information for a specific user"
							},
							"hasPremiumAccess(address)": {
								"notice": "Check if a user has premium access based on their staked amount"
							},
							"rewardToken()": {
								"notice": "ERC20 token used for rewards"
							},
							"stakeTokens(uint256,uint256)": {
								"notice": "Stake tokens into the staking pool"
							},
							"stakers(address)": {
								"notice": "Mapping from user address to staker information"
							},
							"stakingToken()": {
								"notice": "ERC20 token used for staking"
							},
							"totalReward()": {
								"notice": "Total amount of rewards available in the pool"
							},
							"unstakeAndClaim()": {
								"notice": "Unstake tokens and claim rewards after the staking period ends"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							64
						]
					},
					"id": 65,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 64,
							"linearizedBaseContracts": [
								64
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1676:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1723:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1767:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1811:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1821:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1831:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:0"
									},
									"scope": 64,
									"src": "1797:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "2251:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 21,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "2261:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:0"
											},
											{
												"id": 24,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 25,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "2303:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 29,
									"name": "nonReentrant",
									"nameLocation": "2236:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:0"
									},
									"src": "2227:103:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2375:248:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 33,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2468:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 34,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2479:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 32,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2598:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2608:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:0"
											}
										]
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:0"
									},
									"scope": 64,
									"src": "2336:287:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "2667:171:0",
										"statements": [
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 47,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2809:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 48,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2819:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:0"
											}
										]
									},
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:0"
									},
									"scope": 64,
									"src": "2629:209:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "3081:43:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 58,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "3098:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 59,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3109:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 57,
												"id": 61,
												"nodeType": "Return",
												"src": "3091:26:0"
											}
										]
									},
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:0",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "3075:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:0"
									},
									"scope": 64,
									"src": "3017:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 65,
							"src": "888:2238:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							142
						]
					},
					"id": 143,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 66,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 67,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 142,
							"linearizedBaseContracts": [
								142
							],
							"name": "IERC20",
							"nameLocation": "213:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 76,
									"name": "Transfer",
									"nameLocation": "395:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "404:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "426:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "446:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:1"
									},
									"src": "389:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 85,
									"name": "Approval",
									"nameLocation": "626:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "635:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "658:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:1"
									},
									"src": "620:78:1"
								},
								{
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 91,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 142,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "930:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:1"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "970:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:1"
									},
									"scope": 142,
									"src": "911:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 100,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1233:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:1"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1266:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:1"
									},
									"scope": 142,
									"src": "1203:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1566:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1581:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:1"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1621:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:1"
									},
									"scope": 142,
									"src": "1547:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 129,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2325:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2375:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 126,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:1"
									},
									"scope": 142,
									"src": "2308:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2711:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2725:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2737:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2770:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:1"
									},
									"scope": 142,
									"src": "2689:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 143,
							"src": "203:2575:1",
							"usedErrors": [],
							"usedEvents": [
								76,
								85
							]
						}
					],
					"src": "106:2673:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							178
						]
					},
					"id": 179,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 144,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 145,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:2",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 178,
							"linearizedBaseContracts": [
								178
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:2",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3022:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3045:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3070:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3093:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3119:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 155,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3136:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 157,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3155:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 159,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:2"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:2"
									},
									"scope": 178,
									"src": "2997:183:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:2",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "3501:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:2"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "3539:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:2"
									},
									"scope": 178,
									"src": "3485:63:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:2",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:2"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "3791:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 174,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:2"
									},
									"scope": 178,
									"src": "3740:60:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 179,
							"src": "2113:1689:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							721
						],
						"IERC20": [
							142
						],
						"IERC20Permit": [
							178
						],
						"SafeERC20": [
							468
						]
					},
					"id": 469,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 180,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 182,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 469,
							"sourceUnit": 143,
							"src": "141:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 181,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 142,
										"src": "149:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 184,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 469,
							"sourceUnit": 179,
							"src": "179:60:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 183,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 178,
										"src": "187:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 186,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 469,
							"sourceUnit": 722,
							"src": "240:51:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 185,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 721,
										"src": "248:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 187,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 468,
							"linearizedBaseContracts": [
								468
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 190,
									"libraryName": {
										"id": 188,
										"name": "Address",
										"nameLocations": [
											"781:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 721,
										"src": "781:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:3",
									"typeName": {
										"id": 189,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:3",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 195,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "907:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:3"
									},
									"src": "876:46:3"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:3",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 204,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1043:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1060:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1086:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:3"
									},
									"src": "1004:109:3"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "1375:88:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 216,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "1405:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 219,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 208,
																		"src": "1427:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:3",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 109,
																	"src": "1427:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 221,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 210,
																			"src": "1444:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 222,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 212,
																			"src": "1448:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 223,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 217,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:3",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 215,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "1385:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:3"
											}
										]
									},
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:3",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1325:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 207,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 206,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "1325:6:3"
													},
													"referencedDeclaration": 142,
													"src": "1325:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1339:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1351:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:3"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:3"
									},
									"scope": 468,
									"src": "1303:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "1792:98:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 242,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "1822:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 245,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 232,
																		"src": "1844:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:3",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 141,
																	"src": "1844:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 247,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 234,
																			"src": "1865:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 248,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 236,
																			"src": "1871:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 249,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 238,
																			"src": "1875:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 250,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 243,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:3",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 241,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "1802:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 253,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:3"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:3",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "1728:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 231,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 230,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "1728:6:3"
													},
													"referencedDeclaration": 142,
													"src": "1728:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "1742:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "1756:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "1768:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:3"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:3"
									},
									"scope": 468,
									"src": "1702:188:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "2167:139:3",
										"statements": [
											{
												"assignments": [
													267
												],
												"declarations": [
													{
														"constant": false,
														"id": 267,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 285,
														"src": "2177:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 266,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 276,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 272,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$468",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$468",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 270,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 274,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "2231:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 268,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "2200:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														"id": 269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:3",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 119,
														"src": "2200:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 278,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "2262:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 279,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "2269:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 280,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "2278:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 281,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "2293:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 277,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "2249:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:3"
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:3",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "2112:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 258,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 257,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "2112:6:3"
													},
													"referencedDeclaration": 142,
													"src": "2112:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "2126:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "2143:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:3"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:3"
									},
									"scope": 468,
									"src": "2081:225:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "2607:370:3",
										"statements": [
											{
												"id": 327,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:3",
												"statements": [
													{
														"assignments": [
															298
														],
														"declarations": [
															{
																"constant": false,
																"id": 298,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:3",
																"nodeType": "VariableDeclaration",
																"scope": 327,
																"src": "2641:24:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 297,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 307,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 303,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$468",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$468",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 301,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 305,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "2699:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 299,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 290,
																	"src": "2668:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:3",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 119,
																"src": "2668:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 308,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "2725:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 309,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "2744:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 318,
														"nodeType": "IfStatement",
														"src": "2721:160:3",
														"trueBody": {
															"id": 317,
															"nodeType": "Block",
															"src": "2763:118:3",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 312,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 292,
																				"src": "2821:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 313,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 298,
																				"src": "2830:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 314,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 294,
																				"src": "2848:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 311,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 204,
																			"src": "2788:32:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 316,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:3"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 320,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 290,
																	"src": "2907:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 321,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "2914:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 322,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 298,
																		"src": "2923:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 323,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 294,
																		"src": "2942:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 319,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 376,
																"src": "2894:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 326,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:3",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "2540:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 289,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 288,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "2540:6:3"
													},
													"referencedDeclaration": 142,
													"src": "2540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "2554:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "2571:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:3"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:3"
									},
									"scope": 468,
									"src": "2509:468:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "3373:303:3",
										"statements": [
											{
												"assignments": [
													341
												],
												"declarations": [
													{
														"constant": false,
														"id": 341,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 375,
														"src": "3383:25:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 340,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 350,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 344,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "3426:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$142",
																	"typeString": "contract IERC20"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:3",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 129,
															"src": "3426:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 346,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "3442:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 347,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 337,
																	"src": "3451:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 348,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 342,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 343,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:3",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:3"
											},
											{
												"condition": {
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:3",
													"subExpression": {
														"arguments": [
															{
																"id": 352,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "3498:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$142",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 353,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "3505:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$142",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 351,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "3474:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 374,
												"nodeType": "IfStatement",
												"src": "3469:201:3",
												"trueBody": {
													"id": 373,
													"nodeType": "Block",
													"src": "3520:150:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 357,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "3554:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 360,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 333,
																					"src": "3576:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$142",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 361,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:3",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 129,
																				"src": "3576:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 362,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 335,
																						"src": "3592:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 363,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 364,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 358,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:3",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 356,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "3534:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 367,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 369,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "3639:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 370,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 341,
																		"src": "3646:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 368,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "3619:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 372,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:3",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "3318:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 332,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 331,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "3318:6:3"
													},
													"referencedDeclaration": 142,
													"src": "3318:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "3332:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "3349:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:3"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:3"
									},
									"scope": 468,
									"src": "3296:380:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "4129:559:3",
										"statements": [
											{
												"assignments": [
													386
												],
												"declarations": [
													{
														"constant": false,
														"id": 386,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 417,
														"src": "4478:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 385,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 394,
												"initialValue": {
													"arguments": [
														{
															"id": 392,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "4532:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 389,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "4512:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 387,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:3",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 542,
														"src": "4504:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 395,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "4551:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:3",
														"subExpression": {
															"arguments": [
																{
																	"id": 401,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "4589:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 402,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:3",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 404,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 399,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:3",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 416,
												"nodeType": "IfStatement",
												"src": "4547:135:3",
												"trueBody": {
													"id": 415,
													"nodeType": "Block",
													"src": "4610:72:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 411,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 380,
																				"src": "4664:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$142",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$142",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 410,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 409,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 408,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "4631:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 414,
															"nodeType": "RevertStatement",
															"src": "4624:47:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "4088:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 379,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 378,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "4088:6:3"
													},
													"referencedDeclaration": 142,
													"src": "4088:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "4102:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 381,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:3"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:3"
									},
									"scope": 468,
									"src": "4059:629:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "5278:489:3",
										"statements": [
											{
												"assignments": [
													430,
													432
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 466,
														"src": "5574:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 429,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 432,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 466,
														"src": "5588:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 431,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [
														{
															"id": 438,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "5635:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 435,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 422,
																	"src": "5623:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 433,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 441,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "5657:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 442,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 432,
																				"src": "5669:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:3",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 448,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 432,
																				"src": "5706:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 450,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 449,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:3",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 451,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 446,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:3",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 454,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 458,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 422,
																			"src": "5738:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$142",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$142",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 456,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:3",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 428,
												"id": 465,
												"nodeType": "Return",
												"src": "5650:110:3"
											}
										]
									},
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "5222:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 421,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 420,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "5222:6:3"
													},
													"referencedDeclaration": 142,
													"src": "5222:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "5236:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 423,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:3"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "5272:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 426,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:3"
									},
									"scope": 468,
									"src": "5189:578:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 469,
							"src": "751:5018:3",
							"usedErrors": [
								195,
								204
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							721
						]
					},
					"id": 722,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 470,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 471,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 721,
							"linearizedBaseContracts": [
								721
							],
							"name": "Address",
							"nameLocation": "203:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:4",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 476,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "349:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:4"
									},
									"src": "316:50:4"
								},
								{
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:4",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 481,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "475:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:4"
									},
									"src": "452:39:4"
								},
								{
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:4",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 484,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:4"
									},
									"src": "591:24:4"
								},
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "1602:260:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 494,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$721",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$721",
																		"typeString": "library Address"
																	}
																],
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 492,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:4",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 497,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "1640:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 507,
												"nodeType": "IfStatement",
												"src": "1612:109:4",
												"trueBody": {
													"id": 506,
													"nodeType": "Block",
													"src": "1648:73:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 502,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$721",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$721",
																					"typeString": "library Address"
																				}
																			],
																			"id": 501,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 500,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 499,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 476,
																	"src": "1669:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 505,
															"nodeType": "RevertStatement",
															"src": "1662:48:4"
														}
													]
												}
											},
											{
												"assignments": [
													509,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 509,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 524,
														"src": "1732:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 508,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 516,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 510,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "1750:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 513,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 512,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "1772:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:4"
											},
											{
												"condition": {
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:4",
													"subExpression": {
														"id": 517,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "1798:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 523,
												"nodeType": "IfStatement",
												"src": "1793:63:4",
												"trueBody": {
													"id": 522,
													"nodeType": "Block",
													"src": "1807:49:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 519,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "1828:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 521,
															"nodeType": "RevertStatement",
															"src": "1821:24:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "1550:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "1577:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:4"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:4"
									},
									"scope": 721,
									"src": "1531:331:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "2794:62:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 536,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "2833:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "2841:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 535,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "2811:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 534,
												"id": 540,
												"nodeType": "Return",
												"src": "2804:45:4"
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "2727:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "2743:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 529,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:4"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "2780:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 532,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:4"
									},
									"scope": 721,
									"src": "2705:151:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "3293:279:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 556,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$721",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$721",
																		"typeString": "library Address"
																	}
																],
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 554,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:4",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 559,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "3331:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 569,
												"nodeType": "IfStatement",
												"src": "3303:108:4",
												"trueBody": {
													"id": 568,
													"nodeType": "Block",
													"src": "3338:73:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 564,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$721",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$721",
																					"typeString": "library Address"
																				}
																			],
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 562,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 561,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 476,
																	"src": "3359:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 567,
															"nodeType": "RevertStatement",
															"src": "3352:48:4"
														}
													]
												}
											},
											{
												"assignments": [
													571,
													573
												],
												"declarations": [
													{
														"constant": false,
														"id": 571,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 587,
														"src": "3421:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 570,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 573,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 587,
														"src": "3435:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 572,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 580,
												"initialValue": {
													"arguments": [
														{
															"id": 578,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "3488:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 574,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "3462:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 576,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 549,
																"src": "3481:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 582,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "3537:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 583,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "3545:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 584,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "3554:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 581,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "3510:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 553,
												"id": 586,
												"nodeType": "Return",
												"src": "3503:62:4"
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "3211:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "3227:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 546,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "3246:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:4"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "3279:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 551,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:4"
									},
									"scope": 721,
									"src": "3180:392:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "3811:154:4",
										"statements": [
											{
												"assignments": [
													599,
													601
												],
												"declarations": [
													{
														"constant": false,
														"id": 599,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 613,
														"src": "3822:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 598,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 601,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 613,
														"src": "3836:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 600,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 606,
												"initialValue": {
													"arguments": [
														{
															"id": 604,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "3881:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 602,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "3863:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:4",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 608,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "3930:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 609,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "3938:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 610,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "3947:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 607,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "3903:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 597,
												"id": 612,
												"nodeType": "Return",
												"src": "3896:62:4"
											}
										]
									},
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "3739:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "3755:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 592,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:4"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "3797:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 595,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:4"
									},
									"scope": 721,
									"src": "3711:254:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "4203:156:4",
										"statements": [
											{
												"assignments": [
													625,
													627
												],
												"declarations": [
													{
														"constant": false,
														"id": 625,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "4214:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 624,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 627,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "4228:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 626,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 632,
												"initialValue": {
													"arguments": [
														{
															"id": 630,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "4275:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 628,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "4255:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:4",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 634,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "4324:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "4332:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 636,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "4341:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 633,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "4297:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 623,
												"id": 638,
												"nodeType": "Return",
												"src": "4290:62:4"
											}
										]
									},
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "4136:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "4152:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 618,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:4"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "4189:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 621,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:4"
									},
									"scope": 721,
									"src": "4106:253:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "4783:424:4",
										"statements": [
											{
												"condition": {
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:4",
													"subExpression": {
														"id": 652,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "4798:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 677,
													"nodeType": "Block",
													"src": "4857:344:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 659,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 647,
																			"src": "5045:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 663,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 643,
																				"src": "5071:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:4",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 674,
															"nodeType": "IfStatement",
															"src": "5041:119:4",
															"trueBody": {
																"id": 673,
																"nodeType": "Block",
																"src": "5096:64:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 670,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 643,
																					"src": "5138:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 669,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 481,
																				"src": "5121:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 672,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:4"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 675,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "5180:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 651,
															"id": 676,
															"nodeType": "Return",
															"src": "5173:17:4"
														}
													]
												},
												"id": 678,
												"nodeType": "IfStatement",
												"src": "4793:408:4",
												"trueBody": {
													"id": 658,
													"nodeType": "Block",
													"src": "4807:44:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 655,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 647,
																		"src": "4829:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 654,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "4821:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 657,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:4",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "4670:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "4694:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 644,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "4716:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 646,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:4"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "4769:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 649,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:4"
									},
									"scope": 721,
									"src": "4625:582:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "5509:122:4",
										"statements": [
											{
												"condition": {
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:4",
													"subExpression": {
														"id": 690,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "5524:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 699,
													"nodeType": "Block",
													"src": "5583:42:4",
													"statements": [
														{
															"expression": {
																"id": 697,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "5604:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 689,
															"id": 698,
															"nodeType": "Return",
															"src": "5597:17:4"
														}
													]
												},
												"id": 700,
												"nodeType": "IfStatement",
												"src": "5519:106:4",
												"trueBody": {
													"id": 696,
													"nodeType": "Block",
													"src": "5533:44:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 693,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 685,
																		"src": "5555:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 692,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "5547:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 695,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:4",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "5433:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 682,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "5447:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 684,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:4"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "5495:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 687,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:4"
									},
									"scope": 721,
									"src": "5407:224:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "5798:461:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 708,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "5874:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 709,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 710,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 717,
													"nodeType": "Block",
													"src": "6204:49:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 714,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "6225:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 716,
															"nodeType": "RevertStatement",
															"src": "6218:24:4"
														}
													]
												},
												"id": 718,
												"nodeType": "IfStatement",
												"src": "5870:383:4",
												"trueBody": {
													"id": 713,
													"nodeType": "Block",
													"src": "5897:301:4",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:4",
																"nodeType": "YulBlock",
																"src": "6055:133:4",
																"statements": [
																	{
																		"nativeSrc": "6073:40:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:4",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:4"
																			},
																			"nativeSrc": "6096:17:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:4"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:4",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:4",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:4",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:4",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:4"
																					},
																					"nativeSrc": "6137:19:4",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:4"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:4",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:4"
																			},
																			"nativeSrc": "6130:44:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:4"
																		},
																		"nativeSrc": "6130:44:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:4"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 705,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:4",
																	"valueSize": 1
																},
																{
																	"declaration": 705,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:4",
																	"valueSize": 1
																}
															],
															"id": 712,
															"nodeType": "InlineAssembly",
															"src": "6046:142:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:4",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "5760:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 704,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:4"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:4"
									},
									"scope": 721,
									"src": "5743:516:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 722,
							"src": "195:6066:4",
							"usedErrors": [
								476,
								481,
								484
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:4"
				},
				"id": 4
			},
			"contracts/StakingAirdrop.sol": {
				"ast": {
					"absolutePath": "contracts/StakingAirdrop.sol",
					"exportedSymbols": {
						"Address": [
							721
						],
						"IERC20": [
							142
						],
						"IERC20Permit": [
							178
						],
						"ReentrancyGuard": [
							64
						],
						"SafeERC20": [
							468
						],
						"StakingAirdrop": [
							1078
						]
					},
					"id": 1079,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 723,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".27"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 724,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1079,
							"sourceUnit": 469,
							"src": "130:65:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 725,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1079,
							"sourceUnit": 65,
							"src": "196:62:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 727,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"519:15:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 64,
										"src": "519:15:5"
									},
									"id": 728,
									"nodeType": "InheritanceSpecifier",
									"src": "519:15:5"
								}
							],
							"canonicalName": "StakingAirdrop",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 726,
								"nodeType": "StructuredDocumentation",
								"src": "260:231:5",
								"text": " @title StakingAirdrop\n @dev This contract implements a staking-based airdrop system. Users can stake ERC20 tokens, \n earn rewards based on the staking duration, and get premium access if they stake above a threshold."
							},
							"fullyImplemented": true,
							"id": 1078,
							"linearizedBaseContracts": [
								1078,
								64
							],
							"name": "StakingAirdrop",
							"nameLocation": "501:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 732,
									"libraryName": {
										"id": 729,
										"name": "SafeERC20",
										"nameLocations": [
											"547:9:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 468,
										"src": "547:9:5"
									},
									"nodeType": "UsingForDirective",
									"src": "541:27:5",
									"typeName": {
										"id": 731,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 730,
											"name": "IERC20",
											"nameLocations": [
												"561:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 142,
											"src": "561:6:5"
										},
										"referencedDeclaration": 142,
										"src": "561:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$142",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "574:40:5",
										"text": "@notice ERC20 token used for staking"
									},
									"functionSelector": "72f702f3",
									"id": 736,
									"mutability": "mutable",
									"name": "stakingToken",
									"nameLocation": "633:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1078,
									"src": "619:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$142",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 735,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 734,
											"name": "IERC20",
											"nameLocations": [
												"619:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 142,
											"src": "619:6:5"
										},
										"referencedDeclaration": 142,
										"src": "619:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$142",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "652:40:5",
										"text": "@notice ERC20 token used for rewards"
									},
									"functionSelector": "f7c618c1",
									"id": 740,
									"mutability": "mutable",
									"name": "rewardToken",
									"nameLocation": "711:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1078,
									"src": "697:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$142",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 739,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 738,
											"name": "IERC20",
											"nameLocations": [
												"697:6:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 142,
											"src": "697:6:5"
										},
										"referencedDeclaration": 142,
										"src": "697:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$142",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 741,
										"nodeType": "StructuredDocumentation",
										"src": "729:57:5",
										"text": "@notice Total amount of rewards available in the pool"
									},
									"functionSelector": "750142e6",
									"id": 743,
									"mutability": "mutable",
									"name": "totalReward",
									"nameLocation": "806:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1078,
									"src": "791:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 742,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "791:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "824:51:5",
										"text": "@notice Available rewards remaining in the pool"
									},
									"functionSelector": "4ad84b34",
									"id": 746,
									"mutability": "mutable",
									"name": "availableReward",
									"nameLocation": "895:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 1078,
									"src": "880:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 745,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "880:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "917:64:5",
										"text": "@notice Minimum amount of tokens required for premium access"
									},
									"functionSelector": "9af01c2d",
									"id": 752,
									"mutability": "constant",
									"name": "PREMIUM_THRESHOLD",
									"nameLocation": "1010:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 1078,
									"src": "986:55:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 748,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "986:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000"
										},
										"id": 751,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31303030",
											"id": 749,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1030:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000_by_1",
												"typeString": "int_const 1000"
											},
											"value": "1000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653138",
											"id": 750,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1037:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "1030:11:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "StakingAirdrop.Staker",
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "1080:64:5",
										"text": "@notice Struct to store information about individual stakers"
									},
									"id": 762,
									"members": [
										{
											"constant": false,
											"id": 755,
											"mutability": "mutable",
											"name": "amountStaked",
											"nameLocation": "1181:12:5",
											"nodeType": "VariableDeclaration",
											"scope": 762,
											"src": "1173:20:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 754,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1173:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 757,
											"mutability": "mutable",
											"name": "stakingPeriod",
											"nameLocation": "1211:13:5",
											"nodeType": "VariableDeclaration",
											"scope": 762,
											"src": "1203:21:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 756,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1203:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 759,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "1242:9:5",
											"nodeType": "VariableDeclaration",
											"scope": 762,
											"src": "1234:17:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 758,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1234:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 761,
											"mutability": "mutable",
											"name": "hasPremiumAccess",
											"nameLocation": "1266:16:5",
											"nodeType": "VariableDeclaration",
											"scope": 762,
											"src": "1261:21:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 760,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1261:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Staker",
									"nameLocation": "1156:6:5",
									"nodeType": "StructDefinition",
									"scope": 1078,
									"src": "1149:140:5",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "1295:59:5",
										"text": "@notice Mapping from user address to staker information"
									},
									"functionSelector": "9168ae72",
									"id": 768,
									"mutability": "mutable",
									"name": "stakers",
									"nameLocation": "1393:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1078,
									"src": "1359:41:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$762_storage_$",
										"typeString": "mapping(address => struct StakingAirdrop.Staker)"
									},
									"typeName": {
										"id": 767,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 764,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1367:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1359:26:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$762_storage_$",
											"typeString": "mapping(address => struct StakingAirdrop.Staker)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 766,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 765,
												"name": "Staker",
												"nameLocations": [
													"1378:6:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 762,
												"src": "1378:6:5"
											},
											"referencedDeclaration": 762,
											"src": "1378:6:5",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Staker_$762_storage_ptr",
												"typeString": "struct StakingAirdrop.Staker"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 769,
										"nodeType": "StructuredDocumentation",
										"src": "1407:230:5",
										"text": "@notice Event emitted when a user stakes tokens\n @param user The address of the user staking tokens\n @param amount The amount of tokens staked\n @param stakingPeriod The duration for which tokens are staked"
									},
									"eventSelector": "5af417134f72a9d41143ace85b0a26dce6f550f894f2cbc1eeee8810603d91b6",
									"id": 777,
									"name": "Stake",
									"nameLocation": "1648:5:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1670:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "1654:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1654:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1684:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "1676:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1676:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakingPeriod",
												"nameLocation": "1700:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "1692:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1653:61:5"
									},
									"src": "1642:73:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "1721:245:5",
										"text": "@notice Event emitted when a user unstakes tokens and claims rewards\n @param user The address of the user unstaking tokens\n @param amount The amount of tokens unstaked\n @param reward The reward tokens claimed by the user"
									},
									"eventSelector": "f960dbf9e5d0682f7a298ed974e33a28b4464914b7a2bfac12ae419a9afeb280",
									"id": 786,
									"name": "Unstake",
									"nameLocation": "1977:7:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2001:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "1985:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1985:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2015:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "2007:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2007:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "2031:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "2023:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1984:54:5"
									},
									"src": "1971:68:5"
								},
								{
									"body": {
										"id": 804,
										"nodeType": "Block",
										"src": "2301:81:5",
										"statements": [
											{
												"expression": {
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 796,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "2311:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$142",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 797,
														"name": "_stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "2326:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$142",
															"typeString": "contract IERC20"
														}
													},
													"src": "2311:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "2311:28:5"
											},
											{
												"expression": {
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 800,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "2349:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$142",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 801,
														"name": "_rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "2363:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$142",
															"typeString": "contract IERC20"
														}
													},
													"src": "2349:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"id": 803,
												"nodeType": "ExpressionStatement",
												"src": "2349:26:5"
											}
										]
									},
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "2045:196:5",
										"text": " @dev Constructor to initialize staking and reward tokens\n @param _stakingToken The ERC20 token used for staking\n @param _rewardToken The ERC20 token used for rewards"
									},
									"id": 805,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "_stakingToken",
												"nameLocation": "2265:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "2258:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 789,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 788,
														"name": "IERC20",
														"nameLocations": [
															"2258:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "2258:6:5"
													},
													"referencedDeclaration": 142,
													"src": "2258:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "_rewardToken",
												"nameLocation": "2287:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "2280:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 792,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 791,
														"name": "IERC20",
														"nameLocations": [
															"2280:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "2280:6:5"
													},
													"referencedDeclaration": 142,
													"src": "2280:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2257:43:5"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2301:0:5"
									},
									"scope": 1078,
									"src": "2246:136:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 831,
										"nodeType": "Block",
										"src": "2578:216:5",
										"statements": [
											{
												"expression": {
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 811,
														"name": "totalReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 743,
														"src": "2588:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 812,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "2603:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2588:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 814,
												"nodeType": "ExpressionStatement",
												"src": "2588:22:5"
											},
											{
												"expression": {
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 815,
														"name": "availableReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "2620:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 816,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "2639:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2620:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "2620:26:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 822,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2752:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2756:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2752:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 826,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2772:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingAirdrop_$1078",
																		"typeString": "contract StakingAirdrop"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingAirdrop_$1078",
																		"typeString": "contract StakingAirdrop"
																	}
																],
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2764:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 824,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2764:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2764:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 828,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "2779:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 819,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "2723:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														"id": 821,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2735:16:5",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 255,
														"src": "2723:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$142_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:64:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 830,
												"nodeType": "ExpressionStatement",
												"src": "2723:64:5"
											}
										]
									},
									"documentation": {
										"id": 806,
										"nodeType": "StructuredDocumentation",
										"src": "2388:135:5",
										"text": " @notice Fund the reward pool with reward tokens\n @param _amount The amount of reward tokens to add to the pool"
									},
									"functionSelector": "1d583e0d",
									"id": 832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fundRewardPool",
									"nameLocation": "2537:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2560:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "2552:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2552:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2551:17:5"
									},
									"returnParameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2578:0:5"
									},
									"scope": 1078,
									"src": "2528:266:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "3085:644:5",
										"statements": [
											{
												"assignments": [
													844
												],
												"declarations": [
													{
														"constant": false,
														"id": 844,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "3110:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 904,
														"src": "3095:21:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$762_storage_ptr",
															"typeString": "struct StakingAirdrop.Staker"
														},
														"typeName": {
															"id": 843,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 842,
																"name": "Staker",
																"nameLocations": [
																	"3095:6:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 762,
																"src": "3095:6:5"
															},
															"referencedDeclaration": 762,
															"src": "3095:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$762_storage_ptr",
																"typeString": "struct StakingAirdrop.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 849,
												"initialValue": {
													"baseExpression": {
														"id": 845,
														"name": "stakers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "3119:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$762_storage_$",
															"typeString": "mapping(address => struct StakingAirdrop.Staker storage ref)"
														}
													},
													"id": 848,
													"indexExpression": {
														"expression": {
															"id": 846,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3127:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3131:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3127:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3119:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$762_storage",
														"typeString": "struct StakingAirdrop.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3095:43:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 851,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 844,
																	"src": "3206:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$762_storage_ptr",
																		"typeString": "struct StakingAirdrop.Staker storage pointer"
																	}
																},
																"id": 852,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3213:12:5",
																"memberName": "amountStaked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 755,
																"src": "3206:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3229:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3206:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c7265616479207374616b6564",
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3232:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04",
																"typeString": "literal_string \"Already staked\""
															},
															"value": "Already staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_95b7b77e513d16b36a2faa03d539fb2a99e3aaf7b1d9ac931c129d674f579e04",
																"typeString": "literal_string \"Already staked\""
															}
														],
														"id": 850,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3198:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3198:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "3198:51:5"
											},
											{
												"expression": {
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 858,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "3297:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$762_storage_ptr",
																"typeString": "struct StakingAirdrop.Staker storage pointer"
															}
														},
														"id": 860,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3304:12:5",
														"memberName": "amountStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 755,
														"src": "3297:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 861,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "3319:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3297:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "3297:29:5"
											},
											{
												"expression": {
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 864,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "3336:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$762_storage_ptr",
																"typeString": "struct StakingAirdrop.Staker storage pointer"
															}
														},
														"id": 866,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3343:13:5",
														"memberName": "stakingPeriod",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 757,
														"src": "3336:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 867,
														"name": "_stakingPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "3359:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3336:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 869,
												"nodeType": "ExpressionStatement",
												"src": "3336:37:5"
											},
											{
												"expression": {
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 870,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "3383:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$762_storage_ptr",
																"typeString": "struct StakingAirdrop.Staker storage pointer"
															}
														},
														"id": 872,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3390:9:5",
														"memberName": "startTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 759,
														"src": "3383:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 873,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3402:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 874,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3408:9:5",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3402:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3383:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "3383:34:5"
											},
											{
												"expression": {
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 877,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "3427:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$762_storage_ptr",
																"typeString": "struct StakingAirdrop.Staker storage pointer"
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3434:16:5",
														"memberName": "hasPremiumAccess",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 761,
														"src": "3427:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 880,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "3453:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 881,
															"name": "PREMIUM_THRESHOLD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "3464:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3453:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3427:54:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 884,
												"nodeType": "ExpressionStatement",
												"src": "3427:54:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 888,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3578:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3582:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3578:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 892,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3598:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingAirdrop_$1078",
																		"typeString": "contract StakingAirdrop"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingAirdrop_$1078",
																		"typeString": "contract StakingAirdrop"
																	}
																],
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3590:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 890,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3590:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3590:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 894,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "3605:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 885,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "3548:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														"id": 887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3561:16:5",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 255,
														"src": "3548:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$142_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3548:65:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 896,
												"nodeType": "ExpressionStatement",
												"src": "3548:65:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 898,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3686:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3690:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3686:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 900,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "3698:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 901,
															"name": "_stakingPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "3707:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 897,
														"name": "Stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "3680:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3680:42:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 903,
												"nodeType": "EmitStatement",
												"src": "3675:47:5"
											}
										]
									},
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "2800:196:5",
										"text": " @notice Stake tokens into the staking pool\n @param _amount The amount of tokens to stake\n @param _stakingPeriod The duration (in seconds) for which tokens are staked"
									},
									"functionSelector": "3b7b6188",
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 840,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 839,
												"name": "nonReentrant",
												"nameLocations": [
													"3072:12:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "3072:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "3072:12:5"
										}
									],
									"name": "stakeTokens",
									"nameLocation": "3010:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3030:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "3022:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "_stakingPeriod",
												"nameLocation": "3047:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "3039:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3039:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3021:41:5"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3085:0:5"
									},
									"scope": 1078,
									"src": "3001:728:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 999,
										"nodeType": "Block",
										"src": "3878:1205:5",
										"statements": [
											{
												"assignments": [
													913
												],
												"declarations": [
													{
														"constant": false,
														"id": 913,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "3903:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 999,
														"src": "3888:21:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$762_storage_ptr",
															"typeString": "struct StakingAirdrop.Staker"
														},
														"typeName": {
															"id": 912,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 911,
																"name": "Staker",
																"nameLocations": [
																	"3888:6:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 762,
																"src": "3888:6:5"
															},
															"referencedDeclaration": 762,
															"src": "3888:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$762_storage_ptr",
																"typeString": "struct StakingAirdrop.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 918,
												"initialValue": {
													"baseExpression": {
														"id": 914,
														"name": "stakers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "3912:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$762_storage_$",
															"typeString": "mapping(address => struct StakingAirdrop.Staker storage ref)"
														}
													},
													"id": 917,
													"indexExpression": {
														"expression": {
															"id": 915,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3920:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 916,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3924:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3920:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3912:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$762_storage",
														"typeString": "struct StakingAirdrop.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3888:43:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 920,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "3995:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$762_storage_ptr",
																		"typeString": "struct StakingAirdrop.Staker storage pointer"
																	}
																},
																"id": 921,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4002:12:5",
																"memberName": "amountStaked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 755,
																"src": "3995:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4017:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3995:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e73207374616b6564",
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4020:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b",
																"typeString": "literal_string \"No tokens staked\""
															},
															"value": "No tokens staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b",
																"typeString": "literal_string \"No tokens staked\""
															}
														],
														"id": 919,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3987:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3987:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "3987:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 928,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4120:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4126:9:5",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4120:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 930,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 913,
																		"src": "4139:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$762_storage_ptr",
																			"typeString": "struct StakingAirdrop.Staker storage pointer"
																		}
																	},
																	"id": 931,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4146:9:5",
																	"memberName": "startTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 759,
																	"src": "4139:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"expression": {
																		"id": 932,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 913,
																		"src": "4158:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$762_storage_ptr",
																			"typeString": "struct StakingAirdrop.Staker storage pointer"
																		}
																	},
																	"id": 933,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4165:13:5",
																	"memberName": "stakingPeriod",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 757,
																	"src": "4158:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4139:39:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4120:58:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e6720706572696f64206e6f7420636f6d706c657465",
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4192:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_03d66f88b387025353c0b7c12d56a908fddc07af0740ccbc06cae83741b08055",
																"typeString": "literal_string \"Staking period not complete\""
															},
															"value": "Staking period not complete"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_03d66f88b387025353c0b7c12d56a908fddc07af0740ccbc06cae83741b08055",
																"typeString": "literal_string \"Staking period not complete\""
															}
														],
														"id": 927,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4099:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4099:132:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 938,
												"nodeType": "ExpressionStatement",
												"src": "4099:132:5"
											},
											{
												"assignments": [
													940
												],
												"declarations": [
													{
														"constant": false,
														"id": 940,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "4313:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 999,
														"src": "4305:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 939,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4305:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 950,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 942,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "4351:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$762_storage_ptr",
																	"typeString": "struct StakingAirdrop.Staker storage pointer"
																}
															},
															"id": 943,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4358:12:5",
															"memberName": "amountStaked",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 755,
															"src": "4351:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 944,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4384:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 945,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4390:9:5",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4384:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"expression": {
																	"id": 946,
																	"name": "staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "4402:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$762_storage_ptr",
																		"typeString": "struct StakingAirdrop.Staker storage pointer"
																	}
																},
																"id": 947,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4409:9:5",
																"memberName": "startTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 759,
																"src": "4402:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4384:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 941,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "4322:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4322:106:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4305:123:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 952,
																"name": "availableReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "4498:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 953,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 940,
																"src": "4517:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4498:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742072657761726420706f6f6c",
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4525:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8",
																"typeString": "literal_string \"Insufficient reward pool\""
															},
															"value": "Insufficient reward pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8",
																"typeString": "literal_string \"Insufficient reward pool\""
															}
														],
														"id": 951,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4490:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4490:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 957,
												"nodeType": "ExpressionStatement",
												"src": "4490:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 961,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4636:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4640:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4636:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 963,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "4648:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$762_storage_ptr",
																	"typeString": "struct StakingAirdrop.Staker storage pointer"
																}
															},
															"id": 964,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4655:12:5",
															"memberName": "amountStaked",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 755,
															"src": "4648:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 958,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "4610:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														"id": 960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4623:12:5",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 228,
														"src": "4610:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$142_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4610:58:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "4610:58:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 970,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4746:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4750:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4746:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 972,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "4758:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 967,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "4721:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4733:12:5",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 228,
														"src": "4721:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$142_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4721:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 974,
												"nodeType": "ExpressionStatement",
												"src": "4721:44:5"
											},
											{
												"expression": {
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 975,
														"name": "availableReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "4823:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 976,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "4842:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4823:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "4823:25:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 980,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4925:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4929:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4925:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 982,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "4937:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$762_storage_ptr",
																	"typeString": "struct StakingAirdrop.Staker storage pointer"
																}
															},
															"id": 983,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4944:12:5",
															"memberName": "amountStaked",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 755,
															"src": "4937:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 984,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "4958:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 979,
														"name": "Unstake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "4917:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4917:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 986,
												"nodeType": "EmitStatement",
												"src": "4912:53:5"
											},
											{
												"expression": {
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 987,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "5012:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$762_storage_ptr",
																"typeString": "struct StakingAirdrop.Staker storage pointer"
															}
														},
														"id": 989,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5019:12:5",
														"memberName": "amountStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 755,
														"src": "5012:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5034:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5012:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "5012:23:5"
											},
											{
												"expression": {
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 993,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "5045:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$762_storage_ptr",
																"typeString": "struct StakingAirdrop.Staker storage pointer"
															}
														},
														"id": 995,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5052:16:5",
														"memberName": "hasPremiumAccess",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 761,
														"src": "5045:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 996,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5071:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5045:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 998,
												"nodeType": "ExpressionStatement",
												"src": "5045:31:5"
											}
										]
									},
									"documentation": {
										"id": 906,
										"nodeType": "StructuredDocumentation",
										"src": "3735:89:5",
										"text": " @notice Unstake tokens and claim rewards after the staking period ends"
									},
									"functionSelector": "f985021a",
									"id": 1000,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 909,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 908,
												"name": "nonReentrant",
												"nameLocations": [
													"3865:12:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "3865:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "3865:12:5"
										}
									],
									"name": "unstakeAndClaim",
									"nameLocation": "3838:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3853:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3878:0:5"
									},
									"scope": 1078,
									"src": "3829:1254:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "5527:375:5",
										"statements": [
											{
												"assignments": [
													1011
												],
												"declarations": [
													{
														"constant": false,
														"id": 1011,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "5678:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1030,
														"src": "5670:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1010,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5670:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1018,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1012,
																	"name": "_amountStaked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1003,
																	"src": "5688:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1013,
																	"name": "_elapsedTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1005,
																	"src": "5704:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5688:28:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1015,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5687:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3330",
														"id": 1016,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5720:7:5",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2592000_by_1",
															"typeString": "int_const 2592000"
														},
														"value": "30"
													},
													"src": "5687:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5670:57:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1019,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "5797:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1020,
														"name": "availableReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "5806:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5797:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1027,
												"nodeType": "IfStatement",
												"src": "5793:79:5",
												"trueBody": {
													"id": 1026,
													"nodeType": "Block",
													"src": "5823:49:5",
													"statements": [
														{
															"expression": {
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1022,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1011,
																	"src": "5837:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1023,
																	"name": "availableReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 746,
																	"src": "5846:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5837:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1025,
															"nodeType": "ExpressionStatement",
															"src": "5837:24:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1028,
													"name": "reward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1011,
													"src": "5889:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1009,
												"id": 1029,
												"nodeType": "Return",
												"src": "5882:13:5"
											}
										]
									},
									"documentation": {
										"id": 1001,
										"nodeType": "StructuredDocumentation",
										"src": "5089:303:5",
										"text": " @notice Internal function to calculate rewards based on staked amount and time\n @param _amountStaked The amount of tokens staked\n @param _elapsedTime The time (in seconds) the tokens have been staked\n @return The reward calculated based on the staked amount and time"
									},
									"id": 1031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "5406:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "_amountStaked",
												"nameLocation": "5430:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "5422:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5422:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "_elapsedTime",
												"nameLocation": "5453:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "5445:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5421:45:5"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "5514:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5514:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5513:9:5"
									},
									"scope": 1078,
									"src": "5397:505:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1044,
										"nodeType": "Block",
										"src": "6185:55:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1039,
															"name": "stakers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "6202:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$762_storage_$",
																"typeString": "mapping(address => struct StakingAirdrop.Staker storage ref)"
															}
														},
														"id": 1041,
														"indexExpression": {
															"id": 1040,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "6210:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6202:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$762_storage",
															"typeString": "struct StakingAirdrop.Staker storage ref"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6217:16:5",
													"memberName": "hasPremiumAccess",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 761,
													"src": "6202:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1038,
												"id": 1043,
												"nodeType": "Return",
												"src": "6195:38:5"
											}
										]
									},
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "5908:202:5",
										"text": " @notice Check if a user has premium access based on their staked amount\n @param _user The address of the user\n @return True if the user has premium access, false otherwise"
									},
									"functionSelector": "a67e12a8",
									"id": 1045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasPremiumAccess",
									"nameLocation": "6124:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "6149:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "6141:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6141:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6140:15:5"
									},
									"returnParameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "6179:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1036,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6179:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6178:6:5"
									},
									"scope": 1078,
									"src": "6115:125:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1076,
										"nodeType": "Block",
										"src": "6871:215:5",
										"statements": [
											{
												"assignments": [
													1061
												],
												"declarations": [
													{
														"constant": false,
														"id": 1061,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "6895:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1076,
														"src": "6881:20:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$762_memory_ptr",
															"typeString": "struct StakingAirdrop.Staker"
														},
														"typeName": {
															"id": 1060,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1059,
																"name": "Staker",
																"nameLocations": [
																	"6881:6:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 762,
																"src": "6881:6:5"
															},
															"referencedDeclaration": 762,
															"src": "6881:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$762_storage_ptr",
																"typeString": "struct StakingAirdrop.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1065,
												"initialValue": {
													"baseExpression": {
														"id": 1062,
														"name": "stakers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "6904:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$762_storage_$",
															"typeString": "mapping(address => struct StakingAirdrop.Staker storage ref)"
														}
													},
													"id": 1064,
													"indexExpression": {
														"id": 1063,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1048,
														"src": "6912:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6904:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$762_storage",
														"typeString": "struct StakingAirdrop.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6881:37:5"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 1066,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "6949:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$762_memory_ptr",
																	"typeString": "struct StakingAirdrop.Staker memory"
																}
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6956:12:5",
															"memberName": "amountStaked",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 755,
															"src": "6949:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1068,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "6982:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$762_memory_ptr",
																	"typeString": "struct StakingAirdrop.Staker memory"
																}
															},
															"id": 1069,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6989:13:5",
															"memberName": "stakingPeriod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 757,
															"src": "6982:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1070,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "7016:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$762_memory_ptr",
																	"typeString": "struct StakingAirdrop.Staker memory"
																}
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7023:9:5",
															"memberName": "startTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 759,
															"src": "7016:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1072,
																"name": "staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "7046:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$762_memory_ptr",
																	"typeString": "struct StakingAirdrop.Staker memory"
																}
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7053:16:5",
															"memberName": "hasPremiumAccess",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 761,
															"src": "7046:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1074,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6935:144:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$",
														"typeString": "tuple(uint256,uint256,uint256,bool)"
													}
												},
												"functionReturnParameters": 1058,
												"id": 1075,
												"nodeType": "Return",
												"src": "6928:151:5"
											}
										]
									},
									"documentation": {
										"id": 1046,
										"nodeType": "StructuredDocumentation",
										"src": "6246:392:5",
										"text": " @notice Get staker information for a specific user\n @param _user The address of the user\n @return amountStaked The amount of tokens staked by the user\n @return stakingPeriod The duration for which the user staked tokens\n @return startTime The time when the staking began\n @return hasPremium True if the user has premium access, false otherwise"
									},
									"functionSelector": "733bdef0",
									"id": 1077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakerInfo",
									"nameLocation": "6652:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "6674:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "6666:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:15:5"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "amountStaked",
												"nameLocation": "6749:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "6741:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6741:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "stakingPeriod",
												"nameLocation": "6783:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "6775:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6775:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "6818:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "6810:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6810:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "hasPremium",
												"nameLocation": "6846:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "6841:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1056,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6841:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6727:139:5"
									},
									"scope": 1078,
									"src": "6643:443:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1079,
							"src": "492:6596:5",
							"usedErrors": [
								195,
								476,
								481,
								484
							],
							"usedEvents": [
								777,
								786
							]
						}
					],
					"src": "32:7057:5"
				},
				"id": 5
			}
		}
	}
}